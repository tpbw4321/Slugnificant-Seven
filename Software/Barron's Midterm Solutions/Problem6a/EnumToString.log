[DEBUG]2018-11-03 13:26:41,168: <_sre.SRE_Match object; span=(1088, 1781), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 13:26:41,168: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2018-11-03 13:26:41,168: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2018-11-03 13:26:41,168: None
[DEBUG]2018-11-03 13:26:41,168: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:26:41,184: None
[DEBUG]2018-11-03 13:29:21,548: <_sre.SRE_Match object; span=(1088, 1781), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 13:29:21,548: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2018-11-03 13:29:21,548: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2018-11-03 13:29:21,548: None
[DEBUG]2018-11-03 13:29:21,548: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: None
[DEBUG]2018-11-03 13:29:21,563: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:21,563: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:21,563: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:21,563: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:21,563: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:21,563: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:21,563: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:21,563: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:21,563: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:21,563: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:21,563: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:21,563: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:21,563: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:21,563: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:21,563: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:21,563: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:21,563: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:21,563: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:21,563: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:21,563: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:21,563: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:21,563: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:21,563: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:21,563: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:21,563: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:21,563: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:21,563: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:21,563: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:21,563: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:21,563: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:21,563: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:21,563: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:21,563: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:21,563: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:21,563: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:21,563: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:21,563: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:21,563: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:21,563: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:21,563: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:21,563: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:21,563: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:21,563: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:21,563: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:21,563: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:56,677: <_sre.SRE_Match object; span=(1088, 1803), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 13:29:56,677: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST']
[DEBUG]2018-11-03 13:29:56,677: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
};


[DEBUG]2018-11-03 13:29:56,677: None
[DEBUG]2018-11-03 13:29:56,677: None
[DEBUG]2018-11-03 13:29:56,677: None
[DEBUG]2018-11-03 13:29:56,677: None
[DEBUG]2018-11-03 13:29:56,677: None
[DEBUG]2018-11-03 13:29:56,677: None
[DEBUG]2018-11-03 13:29:56,677: None
[DEBUG]2018-11-03 13:29:56,677: None
[DEBUG]2018-11-03 13:29:56,677: None
[DEBUG]2018-11-03 13:29:56,677: None
[DEBUG]2018-11-03 13:29:56,677: None
[DEBUG]2018-11-03 13:29:56,677: None
[DEBUG]2018-11-03 13:29:56,677: None
[DEBUG]2018-11-03 13:29:56,677: None
[DEBUG]2018-11-03 13:29:56,677: None
[DEBUG]2018-11-03 13:29:56,677: None
[DEBUG]2018-11-03 13:29:56,677: None
[DEBUG]2018-11-03 13:29:56,677: None
[DEBUG]2018-11-03 13:29:56,677: None
[DEBUG]2018-11-03 13:29:56,677: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: None
[DEBUG]2018-11-03 13:29:56,693: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:56,693: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:56,693: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:56,693: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:56,693: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:56,693: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:56,693: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:56,693: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:56,693: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:56,693: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:56,693: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:56,693: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:56,693: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:56,693: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:56,693: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:29:56,693: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:56,693: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:56,693: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:56,693: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:56,693: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:56,693: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:56,693: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:56,693: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:56,693: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:56,693: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:56,693: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:56,693: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:56,693: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:56,693: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:56,693: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:29:56,693: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:56,693: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:56,693: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:56,693: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:56,693: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:56,693: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:56,693: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:56,693: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:56,693: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:56,693: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:56,693: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:56,693: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:56,693: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:56,693: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:29:56,693: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:54:25,320: <_sre.SRE_Match object; span=(1088, 1803), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 13:54:25,320: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST']
[DEBUG]2018-11-03 13:54:25,320: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
};


[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,320: None
[DEBUG]2018-11-03 13:54:25,336: None
[DEBUG]2018-11-03 13:54:25,336: None
[DEBUG]2018-11-03 13:54:25,336: None
[DEBUG]2018-11-03 13:54:25,336: None
[DEBUG]2018-11-03 13:54:25,336: None
[DEBUG]2018-11-03 13:54:25,336: None
[DEBUG]2018-11-03 13:54:25,336: None
[DEBUG]2018-11-03 13:54:25,336: None
[DEBUG]2018-11-03 13:54:25,336: None
[DEBUG]2018-11-03 13:54:25,336: None
[DEBUG]2018-11-03 13:54:25,336: None
[DEBUG]2018-11-03 13:54:25,336: None
[DEBUG]2018-11-03 13:54:25,336: None
[DEBUG]2018-11-03 13:54:25,336: None
[DEBUG]2018-11-03 13:54:25,336: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:54:25,336: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:54:25,336: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:54:25,336: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:54:25,336: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:54:25,336: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:54:25,336: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:54:25,336: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:54:25,336: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:54:25,336: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:54:25,336: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:54:25,336: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:54:25,336: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:54:25,336: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:54:25,336: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 13:54:25,336: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:54:25,336: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:54:25,336: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:54:25,336: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:54:25,336: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:54:25,336: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:54:25,336: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:54:25,336: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:54:25,336: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:54:25,336: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:54:25,336: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:54:25,336: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:54:25,336: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:54:25,336: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:54:25,336: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 13:54:25,336: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:54:25,336: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:54:25,336: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:54:25,336: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:54:25,336: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:54:25,336: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:54:25,336: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:54:25,336: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:54:25,336: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:54:25,336: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:54:25,336: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:54:25,336: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:54:25,336: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:54:25,336: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 13:54:25,336: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:29,656: <_sre.SRE_Match object; span=(1088, 1803), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 14:25:29,656: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST']
[DEBUG]2018-11-03 14:25:29,656: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
};


[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: None
[DEBUG]2018-11-03 14:25:29,672: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:29,672: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:29,672: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:29,672: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:29,672: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:29,672: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:29,672: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:29,672: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:29,672: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:29,672: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:29,672: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:29,672: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:29,672: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:29,672: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:29,672: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:29,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:29,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:29,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:29,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:29,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:29,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:29,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:29,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:29,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:29,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:29,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:29,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:29,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:29,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:29,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:29,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:29,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:29,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:29,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:29,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:29,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:29,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:29,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:29,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:29,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:29,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:29,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:29,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:29,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:29,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:55,022: <_sre.SRE_Match object; span=(1088, 1803), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 14:25:55,022: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST']
[DEBUG]2018-11-03 14:25:55,022: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
};


[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,022: None
[DEBUG]2018-11-03 14:25:55,038: None
[DEBUG]2018-11-03 14:25:55,038: None
[DEBUG]2018-11-03 14:25:55,038: None
[DEBUG]2018-11-03 14:25:55,038: None
[DEBUG]2018-11-03 14:25:55,038: None
[DEBUG]2018-11-03 14:25:55,038: None
[DEBUG]2018-11-03 14:25:55,038: None
[DEBUG]2018-11-03 14:25:55,038: None
[DEBUG]2018-11-03 14:25:55,038: None
[DEBUG]2018-11-03 14:25:55,038: None
[DEBUG]2018-11-03 14:25:55,038: None
[DEBUG]2018-11-03 14:25:55,038: None
[DEBUG]2018-11-03 14:25:55,038: None
[DEBUG]2018-11-03 14:25:55,038: None
[DEBUG]2018-11-03 14:25:55,038: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:55,038: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:55,038: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:55,038: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:55,038: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:55,038: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:55,038: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:55,038: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:55,038: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:55,038: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:55,038: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:55,038: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:55,038: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:55,038: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:55,038: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:25:55,038: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:55,038: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:55,038: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:55,038: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:55,038: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:55,038: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:55,038: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:55,038: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:55,038: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:55,038: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:55,038: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:55,038: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:55,038: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:55,038: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:55,038: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:25:55,038: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:55,038: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:55,038: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:55,038: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:55,038: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:55,038: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:55,038: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:55,038: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:55,038: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:55,038: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:55,038: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:55,038: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:55,038: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:55,038: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:25:55,038: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:10,032: <_sre.SRE_Match object; span=(1088, 1801), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 14:30:10,032: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 14:30:10,032: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,032: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: None
[DEBUG]2018-11-03 14:30:10,048: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:10,048: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:10,048: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:10,048: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:10,048: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:10,048: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:10,048: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:10,048: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:10,048: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:10,048: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:10,048: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:10,048: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:10,048: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:10,048: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:10,048: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:10,048: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:10,048: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:10,048: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:10,048: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:10,048: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:10,048: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:10,048: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:10,048: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:10,048: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:10,048: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:10,048: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:10,048: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:10,048: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:10,048: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:10,048: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:10,048: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:10,048: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:10,048: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:10,048: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:10,048: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:10,048: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:10,048: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:10,048: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:10,048: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:10,048: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:10,048: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:10,048: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:10,048: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:10,048: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:10,048: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:38,318: <_sre.SRE_Match object; span=(1088, 1823), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 14:30:38,318: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 14:30:38,318: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: None
[DEBUG]2018-11-03 14:30:38,333: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:38,333: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:38,333: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:38,333: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:38,333: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:38,333: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:38,333: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:38,333: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:38,333: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:38,333: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:38,333: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:38,333: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:38,333: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:38,333: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:38,333: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:30:38,333: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:38,333: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:38,333: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:38,333: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:38,333: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:38,333: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:38,333: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:38,333: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:38,333: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:38,333: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:38,333: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:38,333: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:38,333: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:38,333: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:38,333: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:30:38,333: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:38,333: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:38,333: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:38,333: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:38,333: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:38,333: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:38,333: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:38,333: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:38,333: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:38,333: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:38,333: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:38,333: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:38,333: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:38,333: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:30:38,333: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:34:01,436: <_sre.SRE_Match object; span=(1088, 1823), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 14:34:01,436: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 14:34:01,436: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: None
[DEBUG]2018-11-03 14:34:01,436: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:34:01,436: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:34:01,436: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:34:01,436: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:34:01,436: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:34:01,436: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:34:01,436: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:34:01,436: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:34:01,436: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:34:01,436: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:34:01,436: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:34:01,436: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:34:01,436: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:34:01,436: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:34:01,436: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:34:01,436: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:34:01,436: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:34:01,436: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:34:01,436: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:34:01,436: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:34:01,436: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:34:01,436: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:34:01,436: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:34:01,436: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:34:01,436: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:34:01,436: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:34:01,436: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:34:01,436: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:34:01,436: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:34:01,436: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:34:01,451: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:34:01,451: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:34:01,451: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:34:01,451: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:34:01,451: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:34:01,451: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:34:01,451: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:34:01,451: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:34:01,451: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:34:01,451: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:34:01,451: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:34:01,451: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:34:01,451: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:34:01,451: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:34:01,451: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:50:19,954: <_sre.SRE_Match object; span=(1088, 1823), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 14:50:19,954: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 14:50:19,954: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 14:50:19,957: None
[DEBUG]2018-11-03 14:50:19,957: None
[DEBUG]2018-11-03 14:50:19,958: None
[DEBUG]2018-11-03 14:50:19,958: None
[DEBUG]2018-11-03 14:50:19,958: None
[DEBUG]2018-11-03 14:50:19,958: None
[DEBUG]2018-11-03 14:50:19,958: None
[DEBUG]2018-11-03 14:50:19,958: None
[DEBUG]2018-11-03 14:50:19,958: None
[DEBUG]2018-11-03 14:50:19,959: None
[DEBUG]2018-11-03 14:50:19,959: None
[DEBUG]2018-11-03 14:50:19,959: None
[DEBUG]2018-11-03 14:50:19,959: None
[DEBUG]2018-11-03 14:50:19,959: None
[DEBUG]2018-11-03 14:50:19,960: None
[DEBUG]2018-11-03 14:50:19,960: None
[DEBUG]2018-11-03 14:50:19,960: None
[DEBUG]2018-11-03 14:50:19,960: None
[DEBUG]2018-11-03 14:50:19,960: None
[DEBUG]2018-11-03 14:50:19,960: None
[DEBUG]2018-11-03 14:50:19,960: None
[DEBUG]2018-11-03 14:50:19,960: None
[DEBUG]2018-11-03 14:50:19,960: None
[DEBUG]2018-11-03 14:50:19,960: None
[DEBUG]2018-11-03 14:50:19,960: None
[DEBUG]2018-11-03 14:50:19,960: None
[DEBUG]2018-11-03 14:50:19,960: None
[DEBUG]2018-11-03 14:50:19,961: None
[DEBUG]2018-11-03 14:50:19,961: None
[DEBUG]2018-11-03 14:50:19,961: None
[DEBUG]2018-11-03 14:50:19,961: None
[DEBUG]2018-11-03 14:50:19,961: None
[DEBUG]2018-11-03 14:50:19,961: None
[DEBUG]2018-11-03 14:50:19,961: None
[DEBUG]2018-11-03 14:50:19,961: None
[DEBUG]2018-11-03 14:50:19,962: None
[DEBUG]2018-11-03 14:50:19,962: None
[DEBUG]2018-11-03 14:50:19,962: None
[DEBUG]2018-11-03 14:50:19,962: None
[DEBUG]2018-11-03 14:50:19,962: None
[DEBUG]2018-11-03 14:50:19,962: None
[DEBUG]2018-11-03 14:50:19,962: None
[DEBUG]2018-11-03 14:50:19,962: None
[DEBUG]2018-11-03 14:50:19,962: None
[DEBUG]2018-11-03 14:50:19,963: None
[DEBUG]2018-11-03 14:50:19,963: None
[DEBUG]2018-11-03 14:50:19,963: None
[DEBUG]2018-11-03 14:50:19,963: None
[DEBUG]2018-11-03 14:50:19,963: None
[DEBUG]2018-11-03 14:50:19,963: None
[DEBUG]2018-11-03 14:50:19,963: None
[DEBUG]2018-11-03 14:50:19,963: None
[DEBUG]2018-11-03 14:50:19,963: None
[DEBUG]2018-11-03 14:50:19,963: None
[DEBUG]2018-11-03 14:50:19,963: None
[DEBUG]2018-11-03 14:50:19,963: None
[DEBUG]2018-11-03 14:50:19,963: None
[DEBUG]2018-11-03 14:50:19,963: None
[DEBUG]2018-11-03 14:50:19,963: None
[DEBUG]2018-11-03 14:50:19,963: None
[DEBUG]2018-11-03 14:50:19,963: None
[DEBUG]2018-11-03 14:50:19,963: None
[DEBUG]2018-11-03 14:50:19,963: None
[DEBUG]2018-11-03 14:50:19,963: None
[DEBUG]2018-11-03 14:50:19,963: None
[DEBUG]2018-11-03 14:50:19,964: None
[DEBUG]2018-11-03 14:50:19,964: None
[DEBUG]2018-11-03 14:50:19,964: None
[DEBUG]2018-11-03 14:50:19,964: None
[DEBUG]2018-11-03 14:50:19,964: None
[DEBUG]2018-11-03 14:50:19,964: None
[DEBUG]2018-11-03 14:50:19,964: None
[DEBUG]2018-11-03 14:50:19,964: None
[DEBUG]2018-11-03 14:50:19,964: None
[DEBUG]2018-11-03 14:50:19,964: None
[DEBUG]2018-11-03 14:50:19,964: None
[DEBUG]2018-11-03 14:50:19,964: None
[DEBUG]2018-11-03 14:50:19,965: None
[DEBUG]2018-11-03 14:50:19,965: None
[DEBUG]2018-11-03 14:50:19,965: None
[DEBUG]2018-11-03 14:50:19,965: None
[DEBUG]2018-11-03 14:50:19,965: None
[DEBUG]2018-11-03 14:50:19,965: None
[DEBUG]2018-11-03 14:50:19,965: None
[DEBUG]2018-11-03 14:50:19,965: None
[DEBUG]2018-11-03 14:50:19,965: None
[DEBUG]2018-11-03 14:50:19,965: None
[DEBUG]2018-11-03 14:50:19,965: None
[DEBUG]2018-11-03 14:50:19,965: None
[DEBUG]2018-11-03 14:50:19,965: None
[DEBUG]2018-11-03 14:50:19,966: None
[DEBUG]2018-11-03 14:50:19,966: None
[DEBUG]2018-11-03 14:50:19,966: None
[DEBUG]2018-11-03 14:50:19,966: None
[DEBUG]2018-11-03 14:50:19,966: None
[DEBUG]2018-11-03 14:50:19,966: None
[DEBUG]2018-11-03 14:50:19,966: None
[DEBUG]2018-11-03 14:50:19,966: None
[DEBUG]2018-11-03 14:50:19,966: None
[DEBUG]2018-11-03 14:50:19,966: None
[DEBUG]2018-11-03 14:50:19,966: None
[DEBUG]2018-11-03 14:50:19,966: None
[DEBUG]2018-11-03 14:50:19,966: None
[DEBUG]2018-11-03 14:50:19,966: None
[DEBUG]2018-11-03 14:50:19,967: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:50:19,967: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:50:19,967: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:50:19,967: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:50:19,967: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:50:19,967: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:50:19,967: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:50:19,967: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:50:19,967: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:50:19,967: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:50:19,967: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:50:19,967: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:50:19,967: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:50:19,967: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:50:19,967: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:50:19,967: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:50:19,967: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:50:19,967: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:50:19,967: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:50:19,967: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:50:19,967: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:50:19,967: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:50:19,967: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:50:19,967: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:50:19,967: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:50:19,967: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:50:19,967: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:50:19,967: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:50:19,967: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:50:19,967: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:50:19,968: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:50:19,968: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:50:19,968: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:50:19,968: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:50:19,968: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:50:19,968: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:50:19,968: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:50:19,968: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:50:19,968: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:50:19,968: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:50:19,968: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:50:19,968: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:50:19,968: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:50:19,968: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:50:19,968: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:04,463: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 14:51:04,463: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 14:51:04,463: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 14:51:04,466: None
[DEBUG]2018-11-03 14:51:04,466: None
[DEBUG]2018-11-03 14:51:04,467: None
[DEBUG]2018-11-03 14:51:04,467: None
[DEBUG]2018-11-03 14:51:04,467: None
[DEBUG]2018-11-03 14:51:04,467: None
[DEBUG]2018-11-03 14:51:04,467: None
[DEBUG]2018-11-03 14:51:04,467: None
[DEBUG]2018-11-03 14:51:04,467: None
[DEBUG]2018-11-03 14:51:04,468: None
[DEBUG]2018-11-03 14:51:04,468: None
[DEBUG]2018-11-03 14:51:04,468: None
[DEBUG]2018-11-03 14:51:04,468: None
[DEBUG]2018-11-03 14:51:04,468: None
[DEBUG]2018-11-03 14:51:04,468: None
[DEBUG]2018-11-03 14:51:04,468: None
[DEBUG]2018-11-03 14:51:04,468: None
[DEBUG]2018-11-03 14:51:04,468: None
[DEBUG]2018-11-03 14:51:04,468: None
[DEBUG]2018-11-03 14:51:04,468: None
[DEBUG]2018-11-03 14:51:04,469: None
[DEBUG]2018-11-03 14:51:04,469: None
[DEBUG]2018-11-03 14:51:04,469: None
[DEBUG]2018-11-03 14:51:04,469: None
[DEBUG]2018-11-03 14:51:04,469: None
[DEBUG]2018-11-03 14:51:04,469: None
[DEBUG]2018-11-03 14:51:04,469: None
[DEBUG]2018-11-03 14:51:04,470: None
[DEBUG]2018-11-03 14:51:04,470: None
[DEBUG]2018-11-03 14:51:04,470: None
[DEBUG]2018-11-03 14:51:04,470: None
[DEBUG]2018-11-03 14:51:04,470: None
[DEBUG]2018-11-03 14:51:04,470: None
[DEBUG]2018-11-03 14:51:04,470: None
[DEBUG]2018-11-03 14:51:04,470: None
[DEBUG]2018-11-03 14:51:04,470: None
[DEBUG]2018-11-03 14:51:04,470: None
[DEBUG]2018-11-03 14:51:04,470: None
[DEBUG]2018-11-03 14:51:04,470: None
[DEBUG]2018-11-03 14:51:04,470: None
[DEBUG]2018-11-03 14:51:04,470: None
[DEBUG]2018-11-03 14:51:04,470: None
[DEBUG]2018-11-03 14:51:04,470: None
[DEBUG]2018-11-03 14:51:04,470: None
[DEBUG]2018-11-03 14:51:04,471: None
[DEBUG]2018-11-03 14:51:04,471: None
[DEBUG]2018-11-03 14:51:04,471: None
[DEBUG]2018-11-03 14:51:04,471: None
[DEBUG]2018-11-03 14:51:04,471: None
[DEBUG]2018-11-03 14:51:04,471: None
[DEBUG]2018-11-03 14:51:04,471: None
[DEBUG]2018-11-03 14:51:04,471: None
[DEBUG]2018-11-03 14:51:04,471: None
[DEBUG]2018-11-03 14:51:04,471: None
[DEBUG]2018-11-03 14:51:04,472: None
[DEBUG]2018-11-03 14:51:04,472: None
[DEBUG]2018-11-03 14:51:04,472: None
[DEBUG]2018-11-03 14:51:04,472: None
[DEBUG]2018-11-03 14:51:04,472: None
[DEBUG]2018-11-03 14:51:04,472: None
[DEBUG]2018-11-03 14:51:04,472: None
[DEBUG]2018-11-03 14:51:04,472: None
[DEBUG]2018-11-03 14:51:04,472: None
[DEBUG]2018-11-03 14:51:04,472: None
[DEBUG]2018-11-03 14:51:04,472: None
[DEBUG]2018-11-03 14:51:04,473: None
[DEBUG]2018-11-03 14:51:04,473: None
[DEBUG]2018-11-03 14:51:04,473: None
[DEBUG]2018-11-03 14:51:04,473: None
[DEBUG]2018-11-03 14:51:04,473: None
[DEBUG]2018-11-03 14:51:04,473: None
[DEBUG]2018-11-03 14:51:04,473: None
[DEBUG]2018-11-03 14:51:04,473: None
[DEBUG]2018-11-03 14:51:04,473: None
[DEBUG]2018-11-03 14:51:04,473: None
[DEBUG]2018-11-03 14:51:04,473: None
[DEBUG]2018-11-03 14:51:04,473: None
[DEBUG]2018-11-03 14:51:04,473: None
[DEBUG]2018-11-03 14:51:04,473: None
[DEBUG]2018-11-03 14:51:04,473: None
[DEBUG]2018-11-03 14:51:04,473: None
[DEBUG]2018-11-03 14:51:04,473: None
[DEBUG]2018-11-03 14:51:04,473: None
[DEBUG]2018-11-03 14:51:04,473: None
[DEBUG]2018-11-03 14:51:04,473: None
[DEBUG]2018-11-03 14:51:04,473: None
[DEBUG]2018-11-03 14:51:04,473: None
[DEBUG]2018-11-03 14:51:04,473: None
[DEBUG]2018-11-03 14:51:04,473: None
[DEBUG]2018-11-03 14:51:04,473: None
[DEBUG]2018-11-03 14:51:04,474: None
[DEBUG]2018-11-03 14:51:04,474: None
[DEBUG]2018-11-03 14:51:04,474: None
[DEBUG]2018-11-03 14:51:04,474: None
[DEBUG]2018-11-03 14:51:04,474: None
[DEBUG]2018-11-03 14:51:04,474: None
[DEBUG]2018-11-03 14:51:04,474: None
[DEBUG]2018-11-03 14:51:04,474: None
[DEBUG]2018-11-03 14:51:04,474: None
[DEBUG]2018-11-03 14:51:04,474: None
[DEBUG]2018-11-03 14:51:04,474: None
[DEBUG]2018-11-03 14:51:04,474: None
[DEBUG]2018-11-03 14:51:04,474: None
[DEBUG]2018-11-03 14:51:04,474: None
[DEBUG]2018-11-03 14:51:04,475: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:04,475: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:04,475: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:04,475: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:04,475: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:04,475: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:04,475: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:04,475: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:04,475: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:04,475: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:04,475: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:04,475: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:04,475: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:04,475: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:04,475: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:04,476: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:04,476: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:04,476: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:04,476: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:04,476: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:04,476: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:04,476: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:04,476: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:04,476: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:04,476: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:04,476: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:04,476: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:04,476: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:04,476: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:04,476: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:04,476: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:04,476: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:04,476: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:04,476: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:04,476: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:04,476: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:04,476: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:04,476: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:04,476: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:04,476: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:04,476: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:04,476: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:04,476: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:04,476: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:04,476: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:27,926: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 14:51:27,926: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 14:51:27,926: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 14:51:27,929: None
[DEBUG]2018-11-03 14:51:27,929: None
[DEBUG]2018-11-03 14:51:27,930: None
[DEBUG]2018-11-03 14:51:27,930: None
[DEBUG]2018-11-03 14:51:27,930: None
[DEBUG]2018-11-03 14:51:27,930: None
[DEBUG]2018-11-03 14:51:27,930: None
[DEBUG]2018-11-03 14:51:27,930: None
[DEBUG]2018-11-03 14:51:27,930: None
[DEBUG]2018-11-03 14:51:27,931: None
[DEBUG]2018-11-03 14:51:27,931: None
[DEBUG]2018-11-03 14:51:27,931: None
[DEBUG]2018-11-03 14:51:27,931: None
[DEBUG]2018-11-03 14:51:27,931: None
[DEBUG]2018-11-03 14:51:27,932: None
[DEBUG]2018-11-03 14:51:27,932: None
[DEBUG]2018-11-03 14:51:27,932: None
[DEBUG]2018-11-03 14:51:27,932: None
[DEBUG]2018-11-03 14:51:27,932: None
[DEBUG]2018-11-03 14:51:27,932: None
[DEBUG]2018-11-03 14:51:27,932: None
[DEBUG]2018-11-03 14:51:27,932: None
[DEBUG]2018-11-03 14:51:27,932: None
[DEBUG]2018-11-03 14:51:27,932: None
[DEBUG]2018-11-03 14:51:27,932: None
[DEBUG]2018-11-03 14:51:27,932: None
[DEBUG]2018-11-03 14:51:27,932: None
[DEBUG]2018-11-03 14:51:27,933: None
[DEBUG]2018-11-03 14:51:27,933: None
[DEBUG]2018-11-03 14:51:27,933: None
[DEBUG]2018-11-03 14:51:27,933: None
[DEBUG]2018-11-03 14:51:27,933: None
[DEBUG]2018-11-03 14:51:27,933: None
[DEBUG]2018-11-03 14:51:27,933: None
[DEBUG]2018-11-03 14:51:27,933: None
[DEBUG]2018-11-03 14:51:27,934: None
[DEBUG]2018-11-03 14:51:27,934: None
[DEBUG]2018-11-03 14:51:27,934: None
[DEBUG]2018-11-03 14:51:27,934: None
[DEBUG]2018-11-03 14:51:27,934: None
[DEBUG]2018-11-03 14:51:27,934: None
[DEBUG]2018-11-03 14:51:27,934: None
[DEBUG]2018-11-03 14:51:27,934: None
[DEBUG]2018-11-03 14:51:27,934: None
[DEBUG]2018-11-03 14:51:27,934: None
[DEBUG]2018-11-03 14:51:27,934: None
[DEBUG]2018-11-03 14:51:27,934: None
[DEBUG]2018-11-03 14:51:27,934: None
[DEBUG]2018-11-03 14:51:27,934: None
[DEBUG]2018-11-03 14:51:27,934: None
[DEBUG]2018-11-03 14:51:27,934: None
[DEBUG]2018-11-03 14:51:27,934: None
[DEBUG]2018-11-03 14:51:27,934: None
[DEBUG]2018-11-03 14:51:27,934: None
[DEBUG]2018-11-03 14:51:27,935: None
[DEBUG]2018-11-03 14:51:27,935: None
[DEBUG]2018-11-03 14:51:27,935: None
[DEBUG]2018-11-03 14:51:27,935: None
[DEBUG]2018-11-03 14:51:27,935: None
[DEBUG]2018-11-03 14:51:27,935: None
[DEBUG]2018-11-03 14:51:27,935: None
[DEBUG]2018-11-03 14:51:27,935: None
[DEBUG]2018-11-03 14:51:27,935: None
[DEBUG]2018-11-03 14:51:27,935: None
[DEBUG]2018-11-03 14:51:27,935: None
[DEBUG]2018-11-03 14:51:27,936: None
[DEBUG]2018-11-03 14:51:27,936: None
[DEBUG]2018-11-03 14:51:27,936: None
[DEBUG]2018-11-03 14:51:27,936: None
[DEBUG]2018-11-03 14:51:27,936: None
[DEBUG]2018-11-03 14:51:27,936: None
[DEBUG]2018-11-03 14:51:27,936: None
[DEBUG]2018-11-03 14:51:27,936: None
[DEBUG]2018-11-03 14:51:27,936: None
[DEBUG]2018-11-03 14:51:27,936: None
[DEBUG]2018-11-03 14:51:27,936: None
[DEBUG]2018-11-03 14:51:27,936: None
[DEBUG]2018-11-03 14:51:27,937: None
[DEBUG]2018-11-03 14:51:27,937: None
[DEBUG]2018-11-03 14:51:27,937: None
[DEBUG]2018-11-03 14:51:27,937: None
[DEBUG]2018-11-03 14:51:27,937: None
[DEBUG]2018-11-03 14:51:27,937: None
[DEBUG]2018-11-03 14:51:27,937: None
[DEBUG]2018-11-03 14:51:27,937: None
[DEBUG]2018-11-03 14:51:27,937: None
[DEBUG]2018-11-03 14:51:27,937: None
[DEBUG]2018-11-03 14:51:27,937: None
[DEBUG]2018-11-03 14:51:27,937: None
[DEBUG]2018-11-03 14:51:27,937: None
[DEBUG]2018-11-03 14:51:27,938: None
[DEBUG]2018-11-03 14:51:27,938: None
[DEBUG]2018-11-03 14:51:27,938: None
[DEBUG]2018-11-03 14:51:27,938: None
[DEBUG]2018-11-03 14:51:27,938: None
[DEBUG]2018-11-03 14:51:27,938: None
[DEBUG]2018-11-03 14:51:27,938: None
[DEBUG]2018-11-03 14:51:27,938: None
[DEBUG]2018-11-03 14:51:27,938: None
[DEBUG]2018-11-03 14:51:27,938: None
[DEBUG]2018-11-03 14:51:27,938: None
[DEBUG]2018-11-03 14:51:27,938: None
[DEBUG]2018-11-03 14:51:27,938: None
[DEBUG]2018-11-03 14:51:27,938: None
[DEBUG]2018-11-03 14:51:27,938: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:27,938: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:27,938: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:27,938: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:27,938: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:27,938: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:27,938: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:27,938: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:27,938: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:27,938: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:27,938: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:27,938: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:27,938: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:27,938: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:27,938: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:27,939: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:27,939: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:27,939: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:27,939: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:27,939: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:27,939: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:27,939: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:27,939: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:27,939: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:27,939: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:27,939: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:27,939: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:27,939: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:27,939: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:27,939: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:27,939: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:27,939: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:27,939: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:27,939: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:27,939: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:27,939: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:27,939: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:27,939: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:27,939: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:27,939: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:27,939: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:27,939: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:27,939: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:27,939: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:27,939: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:52,488: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 14:51:52,488: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 14:51:52,488: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 14:51:52,491: None
[DEBUG]2018-11-03 14:51:52,491: None
[DEBUG]2018-11-03 14:51:52,491: None
[DEBUG]2018-11-03 14:51:52,491: None
[DEBUG]2018-11-03 14:51:52,491: None
[DEBUG]2018-11-03 14:51:52,492: None
[DEBUG]2018-11-03 14:51:52,492: None
[DEBUG]2018-11-03 14:51:52,492: None
[DEBUG]2018-11-03 14:51:52,492: None
[DEBUG]2018-11-03 14:51:52,492: None
[DEBUG]2018-11-03 14:51:52,492: None
[DEBUG]2018-11-03 14:51:52,492: None
[DEBUG]2018-11-03 14:51:52,492: None
[DEBUG]2018-11-03 14:51:52,492: None
[DEBUG]2018-11-03 14:51:52,493: None
[DEBUG]2018-11-03 14:51:52,493: None
[DEBUG]2018-11-03 14:51:52,493: None
[DEBUG]2018-11-03 14:51:52,493: None
[DEBUG]2018-11-03 14:51:52,493: None
[DEBUG]2018-11-03 14:51:52,493: None
[DEBUG]2018-11-03 14:51:52,494: None
[DEBUG]2018-11-03 14:51:52,494: None
[DEBUG]2018-11-03 14:51:52,494: None
[DEBUG]2018-11-03 14:51:52,494: None
[DEBUG]2018-11-03 14:51:52,494: None
[DEBUG]2018-11-03 14:51:52,494: None
[DEBUG]2018-11-03 14:51:52,494: None
[DEBUG]2018-11-03 14:51:52,494: None
[DEBUG]2018-11-03 14:51:52,494: None
[DEBUG]2018-11-03 14:51:52,494: None
[DEBUG]2018-11-03 14:51:52,494: None
[DEBUG]2018-11-03 14:51:52,494: None
[DEBUG]2018-11-03 14:51:52,494: None
[DEBUG]2018-11-03 14:51:52,494: None
[DEBUG]2018-11-03 14:51:52,494: None
[DEBUG]2018-11-03 14:51:52,495: None
[DEBUG]2018-11-03 14:51:52,495: None
[DEBUG]2018-11-03 14:51:52,495: None
[DEBUG]2018-11-03 14:51:52,495: None
[DEBUG]2018-11-03 14:51:52,495: None
[DEBUG]2018-11-03 14:51:52,495: None
[DEBUG]2018-11-03 14:51:52,495: None
[DEBUG]2018-11-03 14:51:52,495: None
[DEBUG]2018-11-03 14:51:52,495: None
[DEBUG]2018-11-03 14:51:52,496: None
[DEBUG]2018-11-03 14:51:52,496: None
[DEBUG]2018-11-03 14:51:52,496: None
[DEBUG]2018-11-03 14:51:52,496: None
[DEBUG]2018-11-03 14:51:52,496: None
[DEBUG]2018-11-03 14:51:52,496: None
[DEBUG]2018-11-03 14:51:52,496: None
[DEBUG]2018-11-03 14:51:52,496: None
[DEBUG]2018-11-03 14:51:52,496: None
[DEBUG]2018-11-03 14:51:52,496: None
[DEBUG]2018-11-03 14:51:52,497: None
[DEBUG]2018-11-03 14:51:52,497: None
[DEBUG]2018-11-03 14:51:52,497: None
[DEBUG]2018-11-03 14:51:52,497: None
[DEBUG]2018-11-03 14:51:52,497: None
[DEBUG]2018-11-03 14:51:52,497: None
[DEBUG]2018-11-03 14:51:52,497: None
[DEBUG]2018-11-03 14:51:52,497: None
[DEBUG]2018-11-03 14:51:52,497: None
[DEBUG]2018-11-03 14:51:52,497: None
[DEBUG]2018-11-03 14:51:52,497: None
[DEBUG]2018-11-03 14:51:52,498: None
[DEBUG]2018-11-03 14:51:52,498: None
[DEBUG]2018-11-03 14:51:52,498: None
[DEBUG]2018-11-03 14:51:52,498: None
[DEBUG]2018-11-03 14:51:52,498: None
[DEBUG]2018-11-03 14:51:52,498: None
[DEBUG]2018-11-03 14:51:52,498: None
[DEBUG]2018-11-03 14:51:52,498: None
[DEBUG]2018-11-03 14:51:52,498: None
[DEBUG]2018-11-03 14:51:52,498: None
[DEBUG]2018-11-03 14:51:52,498: None
[DEBUG]2018-11-03 14:51:52,498: None
[DEBUG]2018-11-03 14:51:52,498: None
[DEBUG]2018-11-03 14:51:52,498: None
[DEBUG]2018-11-03 14:51:52,498: None
[DEBUG]2018-11-03 14:51:52,498: None
[DEBUG]2018-11-03 14:51:52,498: None
[DEBUG]2018-11-03 14:51:52,498: None
[DEBUG]2018-11-03 14:51:52,498: None
[DEBUG]2018-11-03 14:51:52,498: None
[DEBUG]2018-11-03 14:51:52,498: None
[DEBUG]2018-11-03 14:51:52,498: None
[DEBUG]2018-11-03 14:51:52,498: None
[DEBUG]2018-11-03 14:51:52,498: None
[DEBUG]2018-11-03 14:51:52,498: None
[DEBUG]2018-11-03 14:51:52,499: None
[DEBUG]2018-11-03 14:51:52,499: None
[DEBUG]2018-11-03 14:51:52,499: None
[DEBUG]2018-11-03 14:51:52,499: None
[DEBUG]2018-11-03 14:51:52,499: None
[DEBUG]2018-11-03 14:51:52,499: None
[DEBUG]2018-11-03 14:51:52,499: None
[DEBUG]2018-11-03 14:51:52,499: None
[DEBUG]2018-11-03 14:51:52,499: None
[DEBUG]2018-11-03 14:51:52,499: None
[DEBUG]2018-11-03 14:51:52,499: None
[DEBUG]2018-11-03 14:51:52,499: None
[DEBUG]2018-11-03 14:51:52,499: None
[DEBUG]2018-11-03 14:51:52,499: None
[DEBUG]2018-11-03 14:51:52,500: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:52,500: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:52,500: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:52,500: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:52,500: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:52,500: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:52,500: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:52,500: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:52,500: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:52,500: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:52,500: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:52,500: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:52,500: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:52,500: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:52,500: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:51:52,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:52,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:52,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:52,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:52,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:52,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:52,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:52,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:52,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:52,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:52,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:52,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:52,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:52,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:52,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:51:52,501: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:52,501: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:52,501: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:52,501: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:52,501: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:52,501: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:52,501: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:52,501: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:52,501: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:52,501: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:52,501: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:52,501: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:52,501: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:52,501: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:51:52,501: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:12,659: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 14:52:12,659: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 14:52:12,659: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 14:52:12,662: None
[DEBUG]2018-11-03 14:52:12,662: None
[DEBUG]2018-11-03 14:52:12,662: None
[DEBUG]2018-11-03 14:52:12,662: None
[DEBUG]2018-11-03 14:52:12,662: None
[DEBUG]2018-11-03 14:52:12,663: None
[DEBUG]2018-11-03 14:52:12,663: None
[DEBUG]2018-11-03 14:52:12,663: None
[DEBUG]2018-11-03 14:52:12,663: None
[DEBUG]2018-11-03 14:52:12,664: None
[DEBUG]2018-11-03 14:52:12,664: None
[DEBUG]2018-11-03 14:52:12,664: None
[DEBUG]2018-11-03 14:52:12,664: None
[DEBUG]2018-11-03 14:52:12,664: None
[DEBUG]2018-11-03 14:52:12,664: None
[DEBUG]2018-11-03 14:52:12,664: None
[DEBUG]2018-11-03 14:52:12,664: None
[DEBUG]2018-11-03 14:52:12,664: None
[DEBUG]2018-11-03 14:52:12,664: None
[DEBUG]2018-11-03 14:52:12,664: None
[DEBUG]2018-11-03 14:52:12,665: None
[DEBUG]2018-11-03 14:52:12,665: None
[DEBUG]2018-11-03 14:52:12,665: None
[DEBUG]2018-11-03 14:52:12,665: None
[DEBUG]2018-11-03 14:52:12,665: None
[DEBUG]2018-11-03 14:52:12,665: None
[DEBUG]2018-11-03 14:52:12,665: None
[DEBUG]2018-11-03 14:52:12,666: None
[DEBUG]2018-11-03 14:52:12,666: None
[DEBUG]2018-11-03 14:52:12,666: None
[DEBUG]2018-11-03 14:52:12,666: None
[DEBUG]2018-11-03 14:52:12,666: None
[DEBUG]2018-11-03 14:52:12,666: None
[DEBUG]2018-11-03 14:52:12,666: None
[DEBUG]2018-11-03 14:52:12,666: None
[DEBUG]2018-11-03 14:52:12,666: None
[DEBUG]2018-11-03 14:52:12,666: None
[DEBUG]2018-11-03 14:52:12,666: None
[DEBUG]2018-11-03 14:52:12,666: None
[DEBUG]2018-11-03 14:52:12,666: None
[DEBUG]2018-11-03 14:52:12,666: None
[DEBUG]2018-11-03 14:52:12,666: None
[DEBUG]2018-11-03 14:52:12,666: None
[DEBUG]2018-11-03 14:52:12,666: None
[DEBUG]2018-11-03 14:52:12,667: None
[DEBUG]2018-11-03 14:52:12,667: None
[DEBUG]2018-11-03 14:52:12,667: None
[DEBUG]2018-11-03 14:52:12,667: None
[DEBUG]2018-11-03 14:52:12,667: None
[DEBUG]2018-11-03 14:52:12,667: None
[DEBUG]2018-11-03 14:52:12,667: None
[DEBUG]2018-11-03 14:52:12,667: None
[DEBUG]2018-11-03 14:52:12,667: None
[DEBUG]2018-11-03 14:52:12,667: None
[DEBUG]2018-11-03 14:52:12,668: None
[DEBUG]2018-11-03 14:52:12,668: None
[DEBUG]2018-11-03 14:52:12,668: None
[DEBUG]2018-11-03 14:52:12,668: None
[DEBUG]2018-11-03 14:52:12,668: None
[DEBUG]2018-11-03 14:52:12,668: None
[DEBUG]2018-11-03 14:52:12,668: None
[DEBUG]2018-11-03 14:52:12,668: None
[DEBUG]2018-11-03 14:52:12,668: None
[DEBUG]2018-11-03 14:52:12,668: None
[DEBUG]2018-11-03 14:52:12,668: None
[DEBUG]2018-11-03 14:52:12,669: None
[DEBUG]2018-11-03 14:52:12,669: None
[DEBUG]2018-11-03 14:52:12,669: None
[DEBUG]2018-11-03 14:52:12,669: None
[DEBUG]2018-11-03 14:52:12,669: None
[DEBUG]2018-11-03 14:52:12,669: None
[DEBUG]2018-11-03 14:52:12,669: None
[DEBUG]2018-11-03 14:52:12,669: None
[DEBUG]2018-11-03 14:52:12,669: None
[DEBUG]2018-11-03 14:52:12,669: None
[DEBUG]2018-11-03 14:52:12,669: None
[DEBUG]2018-11-03 14:52:12,669: None
[DEBUG]2018-11-03 14:52:12,670: None
[DEBUG]2018-11-03 14:52:12,670: None
[DEBUG]2018-11-03 14:52:12,670: None
[DEBUG]2018-11-03 14:52:12,670: None
[DEBUG]2018-11-03 14:52:12,670: None
[DEBUG]2018-11-03 14:52:12,670: None
[DEBUG]2018-11-03 14:52:12,670: None
[DEBUG]2018-11-03 14:52:12,670: None
[DEBUG]2018-11-03 14:52:12,670: None
[DEBUG]2018-11-03 14:52:12,670: None
[DEBUG]2018-11-03 14:52:12,670: None
[DEBUG]2018-11-03 14:52:12,670: None
[DEBUG]2018-11-03 14:52:12,670: None
[DEBUG]2018-11-03 14:52:12,671: None
[DEBUG]2018-11-03 14:52:12,671: None
[DEBUG]2018-11-03 14:52:12,671: None
[DEBUG]2018-11-03 14:52:12,671: None
[DEBUG]2018-11-03 14:52:12,671: None
[DEBUG]2018-11-03 14:52:12,671: None
[DEBUG]2018-11-03 14:52:12,671: None
[DEBUG]2018-11-03 14:52:12,671: None
[DEBUG]2018-11-03 14:52:12,671: None
[DEBUG]2018-11-03 14:52:12,671: None
[DEBUG]2018-11-03 14:52:12,671: None
[DEBUG]2018-11-03 14:52:12,671: None
[DEBUG]2018-11-03 14:52:12,671: None
[DEBUG]2018-11-03 14:52:12,671: None
[DEBUG]2018-11-03 14:52:12,671: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:12,671: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:12,671: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:12,671: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:12,671: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:12,671: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:12,671: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:12,671: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:12,671: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:12,671: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:12,671: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:12,671: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:12,671: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:12,671: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:12,671: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:12,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:12,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:12,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:12,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:12,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:12,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:12,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:12,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:12,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:12,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:12,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:12,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:12,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:12,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:12,672: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:12,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:12,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:12,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:12,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:12,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:12,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:12,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:12,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:12,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:12,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:12,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:12,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:12,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:12,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:12,672: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:30,787: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 14:52:30,787: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 14:52:30,787: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 14:52:30,790: None
[DEBUG]2018-11-03 14:52:30,790: None
[DEBUG]2018-11-03 14:52:30,791: None
[DEBUG]2018-11-03 14:52:30,791: None
[DEBUG]2018-11-03 14:52:30,791: None
[DEBUG]2018-11-03 14:52:30,791: None
[DEBUG]2018-11-03 14:52:30,791: None
[DEBUG]2018-11-03 14:52:30,791: None
[DEBUG]2018-11-03 14:52:30,791: None
[DEBUG]2018-11-03 14:52:30,792: None
[DEBUG]2018-11-03 14:52:30,792: None
[DEBUG]2018-11-03 14:52:30,792: None
[DEBUG]2018-11-03 14:52:30,792: None
[DEBUG]2018-11-03 14:52:30,792: None
[DEBUG]2018-11-03 14:52:30,793: None
[DEBUG]2018-11-03 14:52:30,793: None
[DEBUG]2018-11-03 14:52:30,793: None
[DEBUG]2018-11-03 14:52:30,793: None
[DEBUG]2018-11-03 14:52:30,793: None
[DEBUG]2018-11-03 14:52:30,793: None
[DEBUG]2018-11-03 14:52:30,793: None
[DEBUG]2018-11-03 14:52:30,793: None
[DEBUG]2018-11-03 14:52:30,793: None
[DEBUG]2018-11-03 14:52:30,793: None
[DEBUG]2018-11-03 14:52:30,793: None
[DEBUG]2018-11-03 14:52:30,793: None
[DEBUG]2018-11-03 14:52:30,793: None
[DEBUG]2018-11-03 14:52:30,794: None
[DEBUG]2018-11-03 14:52:30,794: None
[DEBUG]2018-11-03 14:52:30,794: None
[DEBUG]2018-11-03 14:52:30,794: None
[DEBUG]2018-11-03 14:52:30,794: None
[DEBUG]2018-11-03 14:52:30,794: None
[DEBUG]2018-11-03 14:52:30,794: None
[DEBUG]2018-11-03 14:52:30,794: None
[DEBUG]2018-11-03 14:52:30,795: None
[DEBUG]2018-11-03 14:52:30,795: None
[DEBUG]2018-11-03 14:52:30,795: None
[DEBUG]2018-11-03 14:52:30,795: None
[DEBUG]2018-11-03 14:52:30,795: None
[DEBUG]2018-11-03 14:52:30,795: None
[DEBUG]2018-11-03 14:52:30,795: None
[DEBUG]2018-11-03 14:52:30,795: None
[DEBUG]2018-11-03 14:52:30,795: None
[DEBUG]2018-11-03 14:52:30,795: None
[DEBUG]2018-11-03 14:52:30,795: None
[DEBUG]2018-11-03 14:52:30,795: None
[DEBUG]2018-11-03 14:52:30,795: None
[DEBUG]2018-11-03 14:52:30,795: None
[DEBUG]2018-11-03 14:52:30,795: None
[DEBUG]2018-11-03 14:52:30,795: None
[DEBUG]2018-11-03 14:52:30,795: None
[DEBUG]2018-11-03 14:52:30,795: None
[DEBUG]2018-11-03 14:52:30,795: None
[DEBUG]2018-11-03 14:52:30,796: None
[DEBUG]2018-11-03 14:52:30,796: None
[DEBUG]2018-11-03 14:52:30,796: None
[DEBUG]2018-11-03 14:52:30,796: None
[DEBUG]2018-11-03 14:52:30,796: None
[DEBUG]2018-11-03 14:52:30,796: None
[DEBUG]2018-11-03 14:52:30,796: None
[DEBUG]2018-11-03 14:52:30,796: None
[DEBUG]2018-11-03 14:52:30,796: None
[DEBUG]2018-11-03 14:52:30,796: None
[DEBUG]2018-11-03 14:52:30,796: None
[DEBUG]2018-11-03 14:52:30,797: None
[DEBUG]2018-11-03 14:52:30,797: None
[DEBUG]2018-11-03 14:52:30,797: None
[DEBUG]2018-11-03 14:52:30,797: None
[DEBUG]2018-11-03 14:52:30,797: None
[DEBUG]2018-11-03 14:52:30,797: None
[DEBUG]2018-11-03 14:52:30,797: None
[DEBUG]2018-11-03 14:52:30,797: None
[DEBUG]2018-11-03 14:52:30,797: None
[DEBUG]2018-11-03 14:52:30,797: None
[DEBUG]2018-11-03 14:52:30,797: None
[DEBUG]2018-11-03 14:52:30,797: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,798: None
[DEBUG]2018-11-03 14:52:30,799: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:30,799: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:30,799: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:30,799: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:30,799: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:30,799: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:30,799: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:30,799: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:30,799: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:30,799: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:30,799: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:30,799: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:30,799: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:30,799: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:30,799: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:30,800: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:30,800: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:30,800: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:30,800: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:30,800: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:30,800: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:30,800: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:30,800: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:30,800: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:30,800: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:30,800: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:30,800: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:30,800: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:30,800: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:30,800: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:30,800: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:30,800: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:30,800: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:30,800: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:30,800: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:30,800: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:30,800: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:30,800: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:30,800: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:30,800: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:30,800: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:30,800: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:30,800: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:30,800: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:30,800: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:58,670: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 14:52:58,670: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 14:52:58,670: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 14:52:58,674: None
[DEBUG]2018-11-03 14:52:58,674: None
[DEBUG]2018-11-03 14:52:58,674: None
[DEBUG]2018-11-03 14:52:58,674: None
[DEBUG]2018-11-03 14:52:58,674: None
[DEBUG]2018-11-03 14:52:58,675: None
[DEBUG]2018-11-03 14:52:58,675: None
[DEBUG]2018-11-03 14:52:58,675: None
[DEBUG]2018-11-03 14:52:58,675: None
[DEBUG]2018-11-03 14:52:58,676: None
[DEBUG]2018-11-03 14:52:58,676: None
[DEBUG]2018-11-03 14:52:58,676: None
[DEBUG]2018-11-03 14:52:58,676: None
[DEBUG]2018-11-03 14:52:58,676: None
[DEBUG]2018-11-03 14:52:58,676: None
[DEBUG]2018-11-03 14:52:58,676: None
[DEBUG]2018-11-03 14:52:58,676: None
[DEBUG]2018-11-03 14:52:58,676: None
[DEBUG]2018-11-03 14:52:58,676: None
[DEBUG]2018-11-03 14:52:58,676: None
[DEBUG]2018-11-03 14:52:58,677: None
[DEBUG]2018-11-03 14:52:58,677: None
[DEBUG]2018-11-03 14:52:58,677: None
[DEBUG]2018-11-03 14:52:58,677: None
[DEBUG]2018-11-03 14:52:58,677: None
[DEBUG]2018-11-03 14:52:58,677: None
[DEBUG]2018-11-03 14:52:58,677: None
[DEBUG]2018-11-03 14:52:58,677: None
[DEBUG]2018-11-03 14:52:58,677: None
[DEBUG]2018-11-03 14:52:58,677: None
[DEBUG]2018-11-03 14:52:58,677: None
[DEBUG]2018-11-03 14:52:58,677: None
[DEBUG]2018-11-03 14:52:58,677: None
[DEBUG]2018-11-03 14:52:58,677: None
[DEBUG]2018-11-03 14:52:58,677: None
[DEBUG]2018-11-03 14:52:58,678: None
[DEBUG]2018-11-03 14:52:58,678: None
[DEBUG]2018-11-03 14:52:58,678: None
[DEBUG]2018-11-03 14:52:58,678: None
[DEBUG]2018-11-03 14:52:58,678: None
[DEBUG]2018-11-03 14:52:58,678: None
[DEBUG]2018-11-03 14:52:58,678: None
[DEBUG]2018-11-03 14:52:58,678: None
[DEBUG]2018-11-03 14:52:58,678: None
[DEBUG]2018-11-03 14:52:58,679: None
[DEBUG]2018-11-03 14:52:58,679: None
[DEBUG]2018-11-03 14:52:58,679: None
[DEBUG]2018-11-03 14:52:58,679: None
[DEBUG]2018-11-03 14:52:58,679: None
[DEBUG]2018-11-03 14:52:58,679: None
[DEBUG]2018-11-03 14:52:58,679: None
[DEBUG]2018-11-03 14:52:58,679: None
[DEBUG]2018-11-03 14:52:58,679: None
[DEBUG]2018-11-03 14:52:58,679: None
[DEBUG]2018-11-03 14:52:58,680: None
[DEBUG]2018-11-03 14:52:58,680: None
[DEBUG]2018-11-03 14:52:58,680: None
[DEBUG]2018-11-03 14:52:58,680: None
[DEBUG]2018-11-03 14:52:58,680: None
[DEBUG]2018-11-03 14:52:58,680: None
[DEBUG]2018-11-03 14:52:58,680: None
[DEBUG]2018-11-03 14:52:58,680: None
[DEBUG]2018-11-03 14:52:58,680: None
[DEBUG]2018-11-03 14:52:58,680: None
[DEBUG]2018-11-03 14:52:58,680: None
[DEBUG]2018-11-03 14:52:58,681: None
[DEBUG]2018-11-03 14:52:58,681: None
[DEBUG]2018-11-03 14:52:58,681: None
[DEBUG]2018-11-03 14:52:58,681: None
[DEBUG]2018-11-03 14:52:58,681: None
[DEBUG]2018-11-03 14:52:58,681: None
[DEBUG]2018-11-03 14:52:58,681: None
[DEBUG]2018-11-03 14:52:58,681: None
[DEBUG]2018-11-03 14:52:58,681: None
[DEBUG]2018-11-03 14:52:58,681: None
[DEBUG]2018-11-03 14:52:58,681: None
[DEBUG]2018-11-03 14:52:58,681: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,682: None
[DEBUG]2018-11-03 14:52:58,683: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:58,683: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:58,683: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:58,683: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:58,683: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:58,683: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:58,683: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:58,683: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:58,683: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:58,683: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:58,683: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:58,683: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:58,683: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:58,683: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:58,683: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:52:58,684: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:58,684: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:58,684: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:58,684: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:58,684: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:58,684: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:58,684: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:58,684: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:58,684: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:58,684: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:58,684: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:58,684: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:58,684: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:58,684: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:58,684: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:52:58,684: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:58,684: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:58,684: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:58,684: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:58,684: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:58,684: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:58,684: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:58,684: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:58,684: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:58,684: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:58,684: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:58,684: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:58,684: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:58,684: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:52:58,684: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:20,122: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 14:54:20,122: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 14:54:20,122: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 14:54:20,125: None
[DEBUG]2018-11-03 14:54:20,125: None
[DEBUG]2018-11-03 14:54:20,126: None
[DEBUG]2018-11-03 14:54:20,126: None
[DEBUG]2018-11-03 14:54:20,126: None
[DEBUG]2018-11-03 14:54:20,126: None
[DEBUG]2018-11-03 14:54:20,126: None
[DEBUG]2018-11-03 14:54:20,126: None
[DEBUG]2018-11-03 14:54:20,126: None
[DEBUG]2018-11-03 14:54:20,127: None
[DEBUG]2018-11-03 14:54:20,127: None
[DEBUG]2018-11-03 14:54:20,127: None
[DEBUG]2018-11-03 14:54:20,127: None
[DEBUG]2018-11-03 14:54:20,127: None
[DEBUG]2018-11-03 14:54:20,127: None
[DEBUG]2018-11-03 14:54:20,127: None
[DEBUG]2018-11-03 14:54:20,127: None
[DEBUG]2018-11-03 14:54:20,127: None
[DEBUG]2018-11-03 14:54:20,127: None
[DEBUG]2018-11-03 14:54:20,127: None
[DEBUG]2018-11-03 14:54:20,128: None
[DEBUG]2018-11-03 14:54:20,128: None
[DEBUG]2018-11-03 14:54:20,128: None
[DEBUG]2018-11-03 14:54:20,128: None
[DEBUG]2018-11-03 14:54:20,128: None
[DEBUG]2018-11-03 14:54:20,128: None
[DEBUG]2018-11-03 14:54:20,128: None
[DEBUG]2018-11-03 14:54:20,129: None
[DEBUG]2018-11-03 14:54:20,129: None
[DEBUG]2018-11-03 14:54:20,129: None
[DEBUG]2018-11-03 14:54:20,129: None
[DEBUG]2018-11-03 14:54:20,129: None
[DEBUG]2018-11-03 14:54:20,129: None
[DEBUG]2018-11-03 14:54:20,129: None
[DEBUG]2018-11-03 14:54:20,129: None
[DEBUG]2018-11-03 14:54:20,130: None
[DEBUG]2018-11-03 14:54:20,130: None
[DEBUG]2018-11-03 14:54:20,130: None
[DEBUG]2018-11-03 14:54:20,130: None
[DEBUG]2018-11-03 14:54:20,130: None
[DEBUG]2018-11-03 14:54:20,130: None
[DEBUG]2018-11-03 14:54:20,130: None
[DEBUG]2018-11-03 14:54:20,130: None
[DEBUG]2018-11-03 14:54:20,130: None
[DEBUG]2018-11-03 14:54:20,130: None
[DEBUG]2018-11-03 14:54:20,130: None
[DEBUG]2018-11-03 14:54:20,130: None
[DEBUG]2018-11-03 14:54:20,130: None
[DEBUG]2018-11-03 14:54:20,130: None
[DEBUG]2018-11-03 14:54:20,130: None
[DEBUG]2018-11-03 14:54:20,130: None
[DEBUG]2018-11-03 14:54:20,130: None
[DEBUG]2018-11-03 14:54:20,130: None
[DEBUG]2018-11-03 14:54:20,130: None
[DEBUG]2018-11-03 14:54:20,131: None
[DEBUG]2018-11-03 14:54:20,131: None
[DEBUG]2018-11-03 14:54:20,131: None
[DEBUG]2018-11-03 14:54:20,131: None
[DEBUG]2018-11-03 14:54:20,131: None
[DEBUG]2018-11-03 14:54:20,131: None
[DEBUG]2018-11-03 14:54:20,131: None
[DEBUG]2018-11-03 14:54:20,131: None
[DEBUG]2018-11-03 14:54:20,131: None
[DEBUG]2018-11-03 14:54:20,131: None
[DEBUG]2018-11-03 14:54:20,131: None
[DEBUG]2018-11-03 14:54:20,132: None
[DEBUG]2018-11-03 14:54:20,132: None
[DEBUG]2018-11-03 14:54:20,132: None
[DEBUG]2018-11-03 14:54:20,132: None
[DEBUG]2018-11-03 14:54:20,132: None
[DEBUG]2018-11-03 14:54:20,132: None
[DEBUG]2018-11-03 14:54:20,132: None
[DEBUG]2018-11-03 14:54:20,132: None
[DEBUG]2018-11-03 14:54:20,132: None
[DEBUG]2018-11-03 14:54:20,132: None
[DEBUG]2018-11-03 14:54:20,132: None
[DEBUG]2018-11-03 14:54:20,132: None
[DEBUG]2018-11-03 14:54:20,133: None
[DEBUG]2018-11-03 14:54:20,133: None
[DEBUG]2018-11-03 14:54:20,133: None
[DEBUG]2018-11-03 14:54:20,133: None
[DEBUG]2018-11-03 14:54:20,133: None
[DEBUG]2018-11-03 14:54:20,133: None
[DEBUG]2018-11-03 14:54:20,133: None
[DEBUG]2018-11-03 14:54:20,133: None
[DEBUG]2018-11-03 14:54:20,133: None
[DEBUG]2018-11-03 14:54:20,133: None
[DEBUG]2018-11-03 14:54:20,133: None
[DEBUG]2018-11-03 14:54:20,133: None
[DEBUG]2018-11-03 14:54:20,133: None
[DEBUG]2018-11-03 14:54:20,134: None
[DEBUG]2018-11-03 14:54:20,134: None
[DEBUG]2018-11-03 14:54:20,134: None
[DEBUG]2018-11-03 14:54:20,134: None
[DEBUG]2018-11-03 14:54:20,134: None
[DEBUG]2018-11-03 14:54:20,134: None
[DEBUG]2018-11-03 14:54:20,134: None
[DEBUG]2018-11-03 14:54:20,134: None
[DEBUG]2018-11-03 14:54:20,134: None
[DEBUG]2018-11-03 14:54:20,134: None
[DEBUG]2018-11-03 14:54:20,134: None
[DEBUG]2018-11-03 14:54:20,134: None
[DEBUG]2018-11-03 14:54:20,134: None
[DEBUG]2018-11-03 14:54:20,134: None
[DEBUG]2018-11-03 14:54:20,134: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:20,134: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:20,134: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:20,134: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:20,134: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:20,134: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:20,134: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:20,134: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:20,134: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:20,134: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:20,134: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:20,134: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:20,134: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:20,134: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:20,134: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:20,135: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:20,135: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:20,135: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:20,135: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:20,135: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:20,135: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:20,135: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:20,135: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:20,135: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:20,135: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:20,135: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:20,135: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:20,135: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:20,135: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:20,135: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:20,136: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:20,136: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:20,136: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:20,136: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:20,136: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:20,136: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:20,136: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:20,136: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:20,136: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:20,136: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:20,136: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:20,136: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:20,136: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:20,136: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:20,136: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:29,269: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 14:54:29,270: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 14:54:29,270: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 14:54:29,273: None
[DEBUG]2018-11-03 14:54:29,273: None
[DEBUG]2018-11-03 14:54:29,274: None
[DEBUG]2018-11-03 14:54:29,274: None
[DEBUG]2018-11-03 14:54:29,274: None
[DEBUG]2018-11-03 14:54:29,274: None
[DEBUG]2018-11-03 14:54:29,274: None
[DEBUG]2018-11-03 14:54:29,274: None
[DEBUG]2018-11-03 14:54:29,274: None
[DEBUG]2018-11-03 14:54:29,275: None
[DEBUG]2018-11-03 14:54:29,275: None
[DEBUG]2018-11-03 14:54:29,275: None
[DEBUG]2018-11-03 14:54:29,275: None
[DEBUG]2018-11-03 14:54:29,275: None
[DEBUG]2018-11-03 14:54:29,275: None
[DEBUG]2018-11-03 14:54:29,275: None
[DEBUG]2018-11-03 14:54:29,275: None
[DEBUG]2018-11-03 14:54:29,275: None
[DEBUG]2018-11-03 14:54:29,275: None
[DEBUG]2018-11-03 14:54:29,275: None
[DEBUG]2018-11-03 14:54:29,276: None
[DEBUG]2018-11-03 14:54:29,276: None
[DEBUG]2018-11-03 14:54:29,276: None
[DEBUG]2018-11-03 14:54:29,276: None
[DEBUG]2018-11-03 14:54:29,276: None
[DEBUG]2018-11-03 14:54:29,276: None
[DEBUG]2018-11-03 14:54:29,276: None
[DEBUG]2018-11-03 14:54:29,277: None
[DEBUG]2018-11-03 14:54:29,277: None
[DEBUG]2018-11-03 14:54:29,277: None
[DEBUG]2018-11-03 14:54:29,277: None
[DEBUG]2018-11-03 14:54:29,277: None
[DEBUG]2018-11-03 14:54:29,277: None
[DEBUG]2018-11-03 14:54:29,277: None
[DEBUG]2018-11-03 14:54:29,277: None
[DEBUG]2018-11-03 14:54:29,277: None
[DEBUG]2018-11-03 14:54:29,277: None
[DEBUG]2018-11-03 14:54:29,277: None
[DEBUG]2018-11-03 14:54:29,277: None
[DEBUG]2018-11-03 14:54:29,277: None
[DEBUG]2018-11-03 14:54:29,277: None
[DEBUG]2018-11-03 14:54:29,277: None
[DEBUG]2018-11-03 14:54:29,277: None
[DEBUG]2018-11-03 14:54:29,277: None
[DEBUG]2018-11-03 14:54:29,278: None
[DEBUG]2018-11-03 14:54:29,278: None
[DEBUG]2018-11-03 14:54:29,278: None
[DEBUG]2018-11-03 14:54:29,278: None
[DEBUG]2018-11-03 14:54:29,278: None
[DEBUG]2018-11-03 14:54:29,278: None
[DEBUG]2018-11-03 14:54:29,278: None
[DEBUG]2018-11-03 14:54:29,278: None
[DEBUG]2018-11-03 14:54:29,278: None
[DEBUG]2018-11-03 14:54:29,278: None
[DEBUG]2018-11-03 14:54:29,279: None
[DEBUG]2018-11-03 14:54:29,279: None
[DEBUG]2018-11-03 14:54:29,279: None
[DEBUG]2018-11-03 14:54:29,279: None
[DEBUG]2018-11-03 14:54:29,279: None
[DEBUG]2018-11-03 14:54:29,279: None
[DEBUG]2018-11-03 14:54:29,279: None
[DEBUG]2018-11-03 14:54:29,279: None
[DEBUG]2018-11-03 14:54:29,279: None
[DEBUG]2018-11-03 14:54:29,279: None
[DEBUG]2018-11-03 14:54:29,279: None
[DEBUG]2018-11-03 14:54:29,280: None
[DEBUG]2018-11-03 14:54:29,280: None
[DEBUG]2018-11-03 14:54:29,280: None
[DEBUG]2018-11-03 14:54:29,280: None
[DEBUG]2018-11-03 14:54:29,280: None
[DEBUG]2018-11-03 14:54:29,280: None
[DEBUG]2018-11-03 14:54:29,280: None
[DEBUG]2018-11-03 14:54:29,280: None
[DEBUG]2018-11-03 14:54:29,280: None
[DEBUG]2018-11-03 14:54:29,280: None
[DEBUG]2018-11-03 14:54:29,280: None
[DEBUG]2018-11-03 14:54:29,280: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,281: None
[DEBUG]2018-11-03 14:54:29,282: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:29,282: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:29,282: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:29,282: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:29,282: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:29,282: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:29,282: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:29,282: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:29,282: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:29,282: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:29,282: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:29,282: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:29,282: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:29,282: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:29,282: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:29,283: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:29,283: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:29,283: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:29,283: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:29,283: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:29,283: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:29,283: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:29,283: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:29,283: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:29,283: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:29,283: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:29,283: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:29,283: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:29,283: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:29,283: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:29,283: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:29,283: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:29,283: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:29,283: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:29,283: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:29,283: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:29,283: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:29,283: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:29,283: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:29,283: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:29,283: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:29,283: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:29,283: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:29,283: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:29,283: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:55,337: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 14:54:55,337: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 14:54:55,337: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 14:54:55,340: None
[DEBUG]2018-11-03 14:54:55,340: None
[DEBUG]2018-11-03 14:54:55,340: None
[DEBUG]2018-11-03 14:54:55,340: None
[DEBUG]2018-11-03 14:54:55,340: None
[DEBUG]2018-11-03 14:54:55,341: None
[DEBUG]2018-11-03 14:54:55,341: None
[DEBUG]2018-11-03 14:54:55,341: None
[DEBUG]2018-11-03 14:54:55,341: None
[DEBUG]2018-11-03 14:54:55,342: None
[DEBUG]2018-11-03 14:54:55,342: None
[DEBUG]2018-11-03 14:54:55,342: None
[DEBUG]2018-11-03 14:54:55,342: None
[DEBUG]2018-11-03 14:54:55,342: None
[DEBUG]2018-11-03 14:54:55,342: None
[DEBUG]2018-11-03 14:54:55,342: None
[DEBUG]2018-11-03 14:54:55,342: None
[DEBUG]2018-11-03 14:54:55,342: None
[DEBUG]2018-11-03 14:54:55,342: None
[DEBUG]2018-11-03 14:54:55,342: None
[DEBUG]2018-11-03 14:54:55,343: None
[DEBUG]2018-11-03 14:54:55,343: None
[DEBUG]2018-11-03 14:54:55,343: None
[DEBUG]2018-11-03 14:54:55,343: None
[DEBUG]2018-11-03 14:54:55,343: None
[DEBUG]2018-11-03 14:54:55,343: None
[DEBUG]2018-11-03 14:54:55,343: None
[DEBUG]2018-11-03 14:54:55,344: None
[DEBUG]2018-11-03 14:54:55,344: None
[DEBUG]2018-11-03 14:54:55,344: None
[DEBUG]2018-11-03 14:54:55,344: None
[DEBUG]2018-11-03 14:54:55,344: None
[DEBUG]2018-11-03 14:54:55,344: None
[DEBUG]2018-11-03 14:54:55,344: None
[DEBUG]2018-11-03 14:54:55,344: None
[DEBUG]2018-11-03 14:54:55,344: None
[DEBUG]2018-11-03 14:54:55,344: None
[DEBUG]2018-11-03 14:54:55,344: None
[DEBUG]2018-11-03 14:54:55,344: None
[DEBUG]2018-11-03 14:54:55,344: None
[DEBUG]2018-11-03 14:54:55,344: None
[DEBUG]2018-11-03 14:54:55,344: None
[DEBUG]2018-11-03 14:54:55,344: None
[DEBUG]2018-11-03 14:54:55,344: None
[DEBUG]2018-11-03 14:54:55,345: None
[DEBUG]2018-11-03 14:54:55,345: None
[DEBUG]2018-11-03 14:54:55,345: None
[DEBUG]2018-11-03 14:54:55,345: None
[DEBUG]2018-11-03 14:54:55,345: None
[DEBUG]2018-11-03 14:54:55,345: None
[DEBUG]2018-11-03 14:54:55,345: None
[DEBUG]2018-11-03 14:54:55,345: None
[DEBUG]2018-11-03 14:54:55,345: None
[DEBUG]2018-11-03 14:54:55,345: None
[DEBUG]2018-11-03 14:54:55,346: None
[DEBUG]2018-11-03 14:54:55,346: None
[DEBUG]2018-11-03 14:54:55,346: None
[DEBUG]2018-11-03 14:54:55,346: None
[DEBUG]2018-11-03 14:54:55,346: None
[DEBUG]2018-11-03 14:54:55,346: None
[DEBUG]2018-11-03 14:54:55,346: None
[DEBUG]2018-11-03 14:54:55,346: None
[DEBUG]2018-11-03 14:54:55,346: None
[DEBUG]2018-11-03 14:54:55,346: None
[DEBUG]2018-11-03 14:54:55,346: None
[DEBUG]2018-11-03 14:54:55,346: None
[DEBUG]2018-11-03 14:54:55,346: None
[DEBUG]2018-11-03 14:54:55,346: None
[DEBUG]2018-11-03 14:54:55,346: None
[DEBUG]2018-11-03 14:54:55,346: None
[DEBUG]2018-11-03 14:54:55,346: None
[DEBUG]2018-11-03 14:54:55,346: None
[DEBUG]2018-11-03 14:54:55,346: None
[DEBUG]2018-11-03 14:54:55,346: None
[DEBUG]2018-11-03 14:54:55,346: None
[DEBUG]2018-11-03 14:54:55,346: None
[DEBUG]2018-11-03 14:54:55,346: None
[DEBUG]2018-11-03 14:54:55,347: None
[DEBUG]2018-11-03 14:54:55,347: None
[DEBUG]2018-11-03 14:54:55,347: None
[DEBUG]2018-11-03 14:54:55,347: None
[DEBUG]2018-11-03 14:54:55,347: None
[DEBUG]2018-11-03 14:54:55,347: None
[DEBUG]2018-11-03 14:54:55,347: None
[DEBUG]2018-11-03 14:54:55,347: None
[DEBUG]2018-11-03 14:54:55,347: None
[DEBUG]2018-11-03 14:54:55,347: None
[DEBUG]2018-11-03 14:54:55,347: None
[DEBUG]2018-11-03 14:54:55,347: None
[DEBUG]2018-11-03 14:54:55,347: None
[DEBUG]2018-11-03 14:54:55,348: None
[DEBUG]2018-11-03 14:54:55,348: None
[DEBUG]2018-11-03 14:54:55,348: None
[DEBUG]2018-11-03 14:54:55,348: None
[DEBUG]2018-11-03 14:54:55,348: None
[DEBUG]2018-11-03 14:54:55,348: None
[DEBUG]2018-11-03 14:54:55,348: None
[DEBUG]2018-11-03 14:54:55,348: None
[DEBUG]2018-11-03 14:54:55,348: None
[DEBUG]2018-11-03 14:54:55,348: None
[DEBUG]2018-11-03 14:54:55,348: None
[DEBUG]2018-11-03 14:54:55,348: None
[DEBUG]2018-11-03 14:54:55,348: None
[DEBUG]2018-11-03 14:54:55,348: None
[DEBUG]2018-11-03 14:54:55,349: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:55,349: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:55,349: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:55,349: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:55,349: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:55,349: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:55,349: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:55,349: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:55,349: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:55,349: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:55,349: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:55,349: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:55,349: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:55,349: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:55,349: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:55,349: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:55,349: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:55,349: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:55,349: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:55,349: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:55,349: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:55,349: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:55,349: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:55,349: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:55,349: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:55,349: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:55,349: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:55,349: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:55,349: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:55,349: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:55,350: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:55,350: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:55,350: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:55,350: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:55,350: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:55,350: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:55,350: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:55,350: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:55,350: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:55,350: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:55,350: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:55,350: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:55,350: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:55,350: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:55,350: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:58,300: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 14:54:58,300: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 14:54:58,300: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 14:54:58,302: None
[DEBUG]2018-11-03 14:54:58,302: None
[DEBUG]2018-11-03 14:54:58,303: None
[DEBUG]2018-11-03 14:54:58,303: None
[DEBUG]2018-11-03 14:54:58,303: None
[DEBUG]2018-11-03 14:54:58,304: None
[DEBUG]2018-11-03 14:54:58,304: None
[DEBUG]2018-11-03 14:54:58,304: None
[DEBUG]2018-11-03 14:54:58,304: None
[DEBUG]2018-11-03 14:54:58,304: None
[DEBUG]2018-11-03 14:54:58,304: None
[DEBUG]2018-11-03 14:54:58,304: None
[DEBUG]2018-11-03 14:54:58,304: None
[DEBUG]2018-11-03 14:54:58,304: None
[DEBUG]2018-11-03 14:54:58,305: None
[DEBUG]2018-11-03 14:54:58,305: None
[DEBUG]2018-11-03 14:54:58,305: None
[DEBUG]2018-11-03 14:54:58,305: None
[DEBUG]2018-11-03 14:54:58,305: None
[DEBUG]2018-11-03 14:54:58,305: None
[DEBUG]2018-11-03 14:54:58,305: None
[DEBUG]2018-11-03 14:54:58,305: None
[DEBUG]2018-11-03 14:54:58,305: None
[DEBUG]2018-11-03 14:54:58,305: None
[DEBUG]2018-11-03 14:54:58,305: None
[DEBUG]2018-11-03 14:54:58,305: None
[DEBUG]2018-11-03 14:54:58,305: None
[DEBUG]2018-11-03 14:54:58,306: None
[DEBUG]2018-11-03 14:54:58,306: None
[DEBUG]2018-11-03 14:54:58,306: None
[DEBUG]2018-11-03 14:54:58,306: None
[DEBUG]2018-11-03 14:54:58,306: None
[DEBUG]2018-11-03 14:54:58,306: None
[DEBUG]2018-11-03 14:54:58,306: None
[DEBUG]2018-11-03 14:54:58,306: None
[DEBUG]2018-11-03 14:54:58,307: None
[DEBUG]2018-11-03 14:54:58,307: None
[DEBUG]2018-11-03 14:54:58,307: None
[DEBUG]2018-11-03 14:54:58,307: None
[DEBUG]2018-11-03 14:54:58,307: None
[DEBUG]2018-11-03 14:54:58,307: None
[DEBUG]2018-11-03 14:54:58,307: None
[DEBUG]2018-11-03 14:54:58,307: None
[DEBUG]2018-11-03 14:54:58,307: None
[DEBUG]2018-11-03 14:54:58,308: None
[DEBUG]2018-11-03 14:54:58,308: None
[DEBUG]2018-11-03 14:54:58,308: None
[DEBUG]2018-11-03 14:54:58,308: None
[DEBUG]2018-11-03 14:54:58,308: None
[DEBUG]2018-11-03 14:54:58,308: None
[DEBUG]2018-11-03 14:54:58,308: None
[DEBUG]2018-11-03 14:54:58,308: None
[DEBUG]2018-11-03 14:54:58,308: None
[DEBUG]2018-11-03 14:54:58,308: None
[DEBUG]2018-11-03 14:54:58,308: None
[DEBUG]2018-11-03 14:54:58,308: None
[DEBUG]2018-11-03 14:54:58,308: None
[DEBUG]2018-11-03 14:54:58,308: None
[DEBUG]2018-11-03 14:54:58,308: None
[DEBUG]2018-11-03 14:54:58,308: None
[DEBUG]2018-11-03 14:54:58,308: None
[DEBUG]2018-11-03 14:54:58,308: None
[DEBUG]2018-11-03 14:54:58,308: None
[DEBUG]2018-11-03 14:54:58,308: None
[DEBUG]2018-11-03 14:54:58,308: None
[DEBUG]2018-11-03 14:54:58,309: None
[DEBUG]2018-11-03 14:54:58,309: None
[DEBUG]2018-11-03 14:54:58,309: None
[DEBUG]2018-11-03 14:54:58,309: None
[DEBUG]2018-11-03 14:54:58,309: None
[DEBUG]2018-11-03 14:54:58,309: None
[DEBUG]2018-11-03 14:54:58,309: None
[DEBUG]2018-11-03 14:54:58,309: None
[DEBUG]2018-11-03 14:54:58,309: None
[DEBUG]2018-11-03 14:54:58,309: None
[DEBUG]2018-11-03 14:54:58,309: None
[DEBUG]2018-11-03 14:54:58,309: None
[DEBUG]2018-11-03 14:54:58,310: None
[DEBUG]2018-11-03 14:54:58,310: None
[DEBUG]2018-11-03 14:54:58,310: None
[DEBUG]2018-11-03 14:54:58,310: None
[DEBUG]2018-11-03 14:54:58,310: None
[DEBUG]2018-11-03 14:54:58,310: None
[DEBUG]2018-11-03 14:54:58,310: None
[DEBUG]2018-11-03 14:54:58,310: None
[DEBUG]2018-11-03 14:54:58,310: None
[DEBUG]2018-11-03 14:54:58,310: None
[DEBUG]2018-11-03 14:54:58,310: None
[DEBUG]2018-11-03 14:54:58,310: None
[DEBUG]2018-11-03 14:54:58,310: None
[DEBUG]2018-11-03 14:54:58,311: None
[DEBUG]2018-11-03 14:54:58,311: None
[DEBUG]2018-11-03 14:54:58,311: None
[DEBUG]2018-11-03 14:54:58,311: None
[DEBUG]2018-11-03 14:54:58,311: None
[DEBUG]2018-11-03 14:54:58,311: None
[DEBUG]2018-11-03 14:54:58,311: None
[DEBUG]2018-11-03 14:54:58,311: None
[DEBUG]2018-11-03 14:54:58,311: None
[DEBUG]2018-11-03 14:54:58,311: None
[DEBUG]2018-11-03 14:54:58,311: None
[DEBUG]2018-11-03 14:54:58,311: None
[DEBUG]2018-11-03 14:54:58,311: None
[DEBUG]2018-11-03 14:54:58,311: None
[DEBUG]2018-11-03 14:54:58,312: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:58,312: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:58,312: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:58,312: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:58,312: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:58,312: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:58,312: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:58,312: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:58,312: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:58,312: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:58,312: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:58,312: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:58,312: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:58,312: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:58,312: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:54:58,312: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:58,312: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:58,312: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:58,312: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:58,312: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:58,312: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:58,312: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:58,312: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:58,312: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:58,312: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:58,312: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:58,312: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:58,312: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:58,312: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:58,312: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:54:58,313: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:58,313: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:58,313: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:58,313: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:58,313: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:58,313: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:58,313: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:58,313: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:58,313: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:58,313: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:58,313: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:58,313: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:58,313: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:58,313: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:54:58,313: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:24,105: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 14:55:24,106: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 14:55:24,106: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 14:55:24,108: None
[DEBUG]2018-11-03 14:55:24,108: None
[DEBUG]2018-11-03 14:55:24,109: None
[DEBUG]2018-11-03 14:55:24,109: None
[DEBUG]2018-11-03 14:55:24,109: None
[DEBUG]2018-11-03 14:55:24,110: None
[DEBUG]2018-11-03 14:55:24,110: None
[DEBUG]2018-11-03 14:55:24,110: None
[DEBUG]2018-11-03 14:55:24,110: None
[DEBUG]2018-11-03 14:55:24,110: None
[DEBUG]2018-11-03 14:55:24,110: None
[DEBUG]2018-11-03 14:55:24,110: None
[DEBUG]2018-11-03 14:55:24,110: None
[DEBUG]2018-11-03 14:55:24,110: None
[DEBUG]2018-11-03 14:55:24,111: None
[DEBUG]2018-11-03 14:55:24,111: None
[DEBUG]2018-11-03 14:55:24,111: None
[DEBUG]2018-11-03 14:55:24,111: None
[DEBUG]2018-11-03 14:55:24,111: None
[DEBUG]2018-11-03 14:55:24,111: None
[DEBUG]2018-11-03 14:55:24,112: None
[DEBUG]2018-11-03 14:55:24,112: None
[DEBUG]2018-11-03 14:55:24,112: None
[DEBUG]2018-11-03 14:55:24,112: None
[DEBUG]2018-11-03 14:55:24,112: None
[DEBUG]2018-11-03 14:55:24,112: None
[DEBUG]2018-11-03 14:55:24,112: None
[DEBUG]2018-11-03 14:55:24,112: None
[DEBUG]2018-11-03 14:55:24,112: None
[DEBUG]2018-11-03 14:55:24,112: None
[DEBUG]2018-11-03 14:55:24,112: None
[DEBUG]2018-11-03 14:55:24,112: None
[DEBUG]2018-11-03 14:55:24,112: None
[DEBUG]2018-11-03 14:55:24,112: None
[DEBUG]2018-11-03 14:55:24,112: None
[DEBUG]2018-11-03 14:55:24,113: None
[DEBUG]2018-11-03 14:55:24,113: None
[DEBUG]2018-11-03 14:55:24,113: None
[DEBUG]2018-11-03 14:55:24,113: None
[DEBUG]2018-11-03 14:55:24,113: None
[DEBUG]2018-11-03 14:55:24,113: None
[DEBUG]2018-11-03 14:55:24,113: None
[DEBUG]2018-11-03 14:55:24,113: None
[DEBUG]2018-11-03 14:55:24,113: None
[DEBUG]2018-11-03 14:55:24,114: None
[DEBUG]2018-11-03 14:55:24,114: None
[DEBUG]2018-11-03 14:55:24,114: None
[DEBUG]2018-11-03 14:55:24,114: None
[DEBUG]2018-11-03 14:55:24,114: None
[DEBUG]2018-11-03 14:55:24,114: None
[DEBUG]2018-11-03 14:55:24,114: None
[DEBUG]2018-11-03 14:55:24,114: None
[DEBUG]2018-11-03 14:55:24,114: None
[DEBUG]2018-11-03 14:55:24,114: None
[DEBUG]2018-11-03 14:55:24,115: None
[DEBUG]2018-11-03 14:55:24,115: None
[DEBUG]2018-11-03 14:55:24,115: None
[DEBUG]2018-11-03 14:55:24,115: None
[DEBUG]2018-11-03 14:55:24,115: None
[DEBUG]2018-11-03 14:55:24,115: None
[DEBUG]2018-11-03 14:55:24,115: None
[DEBUG]2018-11-03 14:55:24,115: None
[DEBUG]2018-11-03 14:55:24,115: None
[DEBUG]2018-11-03 14:55:24,115: None
[DEBUG]2018-11-03 14:55:24,115: None
[DEBUG]2018-11-03 14:55:24,115: None
[DEBUG]2018-11-03 14:55:24,115: None
[DEBUG]2018-11-03 14:55:24,115: None
[DEBUG]2018-11-03 14:55:24,115: None
[DEBUG]2018-11-03 14:55:24,115: None
[DEBUG]2018-11-03 14:55:24,115: None
[DEBUG]2018-11-03 14:55:24,115: None
[DEBUG]2018-11-03 14:55:24,115: None
[DEBUG]2018-11-03 14:55:24,115: None
[DEBUG]2018-11-03 14:55:24,115: None
[DEBUG]2018-11-03 14:55:24,115: None
[DEBUG]2018-11-03 14:55:24,115: None
[DEBUG]2018-11-03 14:55:24,116: None
[DEBUG]2018-11-03 14:55:24,116: None
[DEBUG]2018-11-03 14:55:24,116: None
[DEBUG]2018-11-03 14:55:24,116: None
[DEBUG]2018-11-03 14:55:24,116: None
[DEBUG]2018-11-03 14:55:24,116: None
[DEBUG]2018-11-03 14:55:24,116: None
[DEBUG]2018-11-03 14:55:24,116: None
[DEBUG]2018-11-03 14:55:24,116: None
[DEBUG]2018-11-03 14:55:24,116: None
[DEBUG]2018-11-03 14:55:24,116: None
[DEBUG]2018-11-03 14:55:24,116: None
[DEBUG]2018-11-03 14:55:24,116: None
[DEBUG]2018-11-03 14:55:24,117: None
[DEBUG]2018-11-03 14:55:24,117: None
[DEBUG]2018-11-03 14:55:24,117: None
[DEBUG]2018-11-03 14:55:24,117: None
[DEBUG]2018-11-03 14:55:24,117: None
[DEBUG]2018-11-03 14:55:24,117: None
[DEBUG]2018-11-03 14:55:24,117: None
[DEBUG]2018-11-03 14:55:24,117: None
[DEBUG]2018-11-03 14:55:24,117: None
[DEBUG]2018-11-03 14:55:24,117: None
[DEBUG]2018-11-03 14:55:24,117: None
[DEBUG]2018-11-03 14:55:24,117: None
[DEBUG]2018-11-03 14:55:24,117: None
[DEBUG]2018-11-03 14:55:24,117: None
[DEBUG]2018-11-03 14:55:24,118: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:24,118: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:24,118: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:24,118: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:24,118: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:24,118: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:24,118: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:24,118: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:24,118: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:24,118: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:24,118: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:24,118: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:24,118: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:24,118: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:24,118: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:24,119: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:24,119: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:24,119: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:24,119: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:24,119: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:24,119: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:24,119: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:24,119: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:24,119: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:24,119: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:24,119: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:24,119: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:24,119: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:24,119: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:24,119: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:24,119: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:24,119: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:24,119: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:24,119: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:24,119: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:24,119: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:24,119: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:24,119: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:24,119: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:24,119: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:24,119: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:24,119: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:24,119: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:24,119: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:24,119: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:52,936: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 14:55:52,936: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 14:55:52,936: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 14:55:52,939: None
[DEBUG]2018-11-03 14:55:52,939: None
[DEBUG]2018-11-03 14:55:52,940: None
[DEBUG]2018-11-03 14:55:52,940: None
[DEBUG]2018-11-03 14:55:52,940: None
[DEBUG]2018-11-03 14:55:52,940: None
[DEBUG]2018-11-03 14:55:52,940: None
[DEBUG]2018-11-03 14:55:52,940: None
[DEBUG]2018-11-03 14:55:52,940: None
[DEBUG]2018-11-03 14:55:52,941: None
[DEBUG]2018-11-03 14:55:52,941: None
[DEBUG]2018-11-03 14:55:52,941: None
[DEBUG]2018-11-03 14:55:52,941: None
[DEBUG]2018-11-03 14:55:52,941: None
[DEBUG]2018-11-03 14:55:52,941: None
[DEBUG]2018-11-03 14:55:52,941: None
[DEBUG]2018-11-03 14:55:52,941: None
[DEBUG]2018-11-03 14:55:52,941: None
[DEBUG]2018-11-03 14:55:52,941: None
[DEBUG]2018-11-03 14:55:52,941: None
[DEBUG]2018-11-03 14:55:52,942: None
[DEBUG]2018-11-03 14:55:52,942: None
[DEBUG]2018-11-03 14:55:52,942: None
[DEBUG]2018-11-03 14:55:52,942: None
[DEBUG]2018-11-03 14:55:52,942: None
[DEBUG]2018-11-03 14:55:52,942: None
[DEBUG]2018-11-03 14:55:52,942: None
[DEBUG]2018-11-03 14:55:52,943: None
[DEBUG]2018-11-03 14:55:52,943: None
[DEBUG]2018-11-03 14:55:52,943: None
[DEBUG]2018-11-03 14:55:52,943: None
[DEBUG]2018-11-03 14:55:52,943: None
[DEBUG]2018-11-03 14:55:52,943: None
[DEBUG]2018-11-03 14:55:52,943: None
[DEBUG]2018-11-03 14:55:52,943: None
[DEBUG]2018-11-03 14:55:52,944: None
[DEBUG]2018-11-03 14:55:52,944: None
[DEBUG]2018-11-03 14:55:52,944: None
[DEBUG]2018-11-03 14:55:52,944: None
[DEBUG]2018-11-03 14:55:52,944: None
[DEBUG]2018-11-03 14:55:52,944: None
[DEBUG]2018-11-03 14:55:52,944: None
[DEBUG]2018-11-03 14:55:52,944: None
[DEBUG]2018-11-03 14:55:52,944: None
[DEBUG]2018-11-03 14:55:52,944: None
[DEBUG]2018-11-03 14:55:52,944: None
[DEBUG]2018-11-03 14:55:52,944: None
[DEBUG]2018-11-03 14:55:52,944: None
[DEBUG]2018-11-03 14:55:52,944: None
[DEBUG]2018-11-03 14:55:52,944: None
[DEBUG]2018-11-03 14:55:52,944: None
[DEBUG]2018-11-03 14:55:52,944: None
[DEBUG]2018-11-03 14:55:52,944: None
[DEBUG]2018-11-03 14:55:52,944: None
[DEBUG]2018-11-03 14:55:52,945: None
[DEBUG]2018-11-03 14:55:52,945: None
[DEBUG]2018-11-03 14:55:52,945: None
[DEBUG]2018-11-03 14:55:52,945: None
[DEBUG]2018-11-03 14:55:52,945: None
[DEBUG]2018-11-03 14:55:52,945: None
[DEBUG]2018-11-03 14:55:52,945: None
[DEBUG]2018-11-03 14:55:52,945: None
[DEBUG]2018-11-03 14:55:52,945: None
[DEBUG]2018-11-03 14:55:52,945: None
[DEBUG]2018-11-03 14:55:52,945: None
[DEBUG]2018-11-03 14:55:52,946: None
[DEBUG]2018-11-03 14:55:52,946: None
[DEBUG]2018-11-03 14:55:52,946: None
[DEBUG]2018-11-03 14:55:52,946: None
[DEBUG]2018-11-03 14:55:52,946: None
[DEBUG]2018-11-03 14:55:52,946: None
[DEBUG]2018-11-03 14:55:52,946: None
[DEBUG]2018-11-03 14:55:52,946: None
[DEBUG]2018-11-03 14:55:52,946: None
[DEBUG]2018-11-03 14:55:52,946: None
[DEBUG]2018-11-03 14:55:52,946: None
[DEBUG]2018-11-03 14:55:52,946: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,947: None
[DEBUG]2018-11-03 14:55:52,948: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:52,948: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:52,948: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:52,948: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:52,948: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:52,948: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:52,948: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:52,948: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:52,948: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:52,948: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:52,948: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:52,948: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:52,948: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:52,948: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:52,948: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:55:52,949: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:52,949: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:52,949: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:52,949: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:52,949: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:52,949: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:52,949: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:52,949: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:52,949: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:52,949: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:52,949: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:52,949: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:52,949: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:52,949: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:52,949: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:55:52,949: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:52,949: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:52,949: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:52,949: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:52,949: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:52,949: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:52,949: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:52,949: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:52,949: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:52,949: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:52,949: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:52,949: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:52,949: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:52,949: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:55:52,949: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:26,042: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 14:56:26,042: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 14:56:26,042: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 14:56:26,046: None
[DEBUG]2018-11-03 14:56:26,046: None
[DEBUG]2018-11-03 14:56:26,046: None
[DEBUG]2018-11-03 14:56:26,046: None
[DEBUG]2018-11-03 14:56:26,046: None
[DEBUG]2018-11-03 14:56:26,047: None
[DEBUG]2018-11-03 14:56:26,047: None
[DEBUG]2018-11-03 14:56:26,047: None
[DEBUG]2018-11-03 14:56:26,047: None
[DEBUG]2018-11-03 14:56:26,047: None
[DEBUG]2018-11-03 14:56:26,047: None
[DEBUG]2018-11-03 14:56:26,047: None
[DEBUG]2018-11-03 14:56:26,047: None
[DEBUG]2018-11-03 14:56:26,047: None
[DEBUG]2018-11-03 14:56:26,048: None
[DEBUG]2018-11-03 14:56:26,048: None
[DEBUG]2018-11-03 14:56:26,048: None
[DEBUG]2018-11-03 14:56:26,048: None
[DEBUG]2018-11-03 14:56:26,048: None
[DEBUG]2018-11-03 14:56:26,048: None
[DEBUG]2018-11-03 14:56:26,049: None
[DEBUG]2018-11-03 14:56:26,049: None
[DEBUG]2018-11-03 14:56:26,049: None
[DEBUG]2018-11-03 14:56:26,049: None
[DEBUG]2018-11-03 14:56:26,049: None
[DEBUG]2018-11-03 14:56:26,049: None
[DEBUG]2018-11-03 14:56:26,049: None
[DEBUG]2018-11-03 14:56:26,049: None
[DEBUG]2018-11-03 14:56:26,049: None
[DEBUG]2018-11-03 14:56:26,049: None
[DEBUG]2018-11-03 14:56:26,049: None
[DEBUG]2018-11-03 14:56:26,049: None
[DEBUG]2018-11-03 14:56:26,049: None
[DEBUG]2018-11-03 14:56:26,049: None
[DEBUG]2018-11-03 14:56:26,049: None
[DEBUG]2018-11-03 14:56:26,050: None
[DEBUG]2018-11-03 14:56:26,050: None
[DEBUG]2018-11-03 14:56:26,050: None
[DEBUG]2018-11-03 14:56:26,050: None
[DEBUG]2018-11-03 14:56:26,050: None
[DEBUG]2018-11-03 14:56:26,050: None
[DEBUG]2018-11-03 14:56:26,050: None
[DEBUG]2018-11-03 14:56:26,050: None
[DEBUG]2018-11-03 14:56:26,050: None
[DEBUG]2018-11-03 14:56:26,051: None
[DEBUG]2018-11-03 14:56:26,051: None
[DEBUG]2018-11-03 14:56:26,051: None
[DEBUG]2018-11-03 14:56:26,051: None
[DEBUG]2018-11-03 14:56:26,051: None
[DEBUG]2018-11-03 14:56:26,051: None
[DEBUG]2018-11-03 14:56:26,051: None
[DEBUG]2018-11-03 14:56:26,051: None
[DEBUG]2018-11-03 14:56:26,051: None
[DEBUG]2018-11-03 14:56:26,051: None
[DEBUG]2018-11-03 14:56:26,052: None
[DEBUG]2018-11-03 14:56:26,052: None
[DEBUG]2018-11-03 14:56:26,052: None
[DEBUG]2018-11-03 14:56:26,052: None
[DEBUG]2018-11-03 14:56:26,052: None
[DEBUG]2018-11-03 14:56:26,052: None
[DEBUG]2018-11-03 14:56:26,052: None
[DEBUG]2018-11-03 14:56:26,052: None
[DEBUG]2018-11-03 14:56:26,052: None
[DEBUG]2018-11-03 14:56:26,052: None
[DEBUG]2018-11-03 14:56:26,052: None
[DEBUG]2018-11-03 14:56:26,052: None
[DEBUG]2018-11-03 14:56:26,052: None
[DEBUG]2018-11-03 14:56:26,052: None
[DEBUG]2018-11-03 14:56:26,052: None
[DEBUG]2018-11-03 14:56:26,052: None
[DEBUG]2018-11-03 14:56:26,052: None
[DEBUG]2018-11-03 14:56:26,052: None
[DEBUG]2018-11-03 14:56:26,052: None
[DEBUG]2018-11-03 14:56:26,052: None
[DEBUG]2018-11-03 14:56:26,052: None
[DEBUG]2018-11-03 14:56:26,052: None
[DEBUG]2018-11-03 14:56:26,052: None
[DEBUG]2018-11-03 14:56:26,053: None
[DEBUG]2018-11-03 14:56:26,053: None
[DEBUG]2018-11-03 14:56:26,053: None
[DEBUG]2018-11-03 14:56:26,053: None
[DEBUG]2018-11-03 14:56:26,053: None
[DEBUG]2018-11-03 14:56:26,053: None
[DEBUG]2018-11-03 14:56:26,053: None
[DEBUG]2018-11-03 14:56:26,053: None
[DEBUG]2018-11-03 14:56:26,053: None
[DEBUG]2018-11-03 14:56:26,053: None
[DEBUG]2018-11-03 14:56:26,053: None
[DEBUG]2018-11-03 14:56:26,053: None
[DEBUG]2018-11-03 14:56:26,053: None
[DEBUG]2018-11-03 14:56:26,054: None
[DEBUG]2018-11-03 14:56:26,054: None
[DEBUG]2018-11-03 14:56:26,054: None
[DEBUG]2018-11-03 14:56:26,054: None
[DEBUG]2018-11-03 14:56:26,054: None
[DEBUG]2018-11-03 14:56:26,054: None
[DEBUG]2018-11-03 14:56:26,054: None
[DEBUG]2018-11-03 14:56:26,054: None
[DEBUG]2018-11-03 14:56:26,054: None
[DEBUG]2018-11-03 14:56:26,054: None
[DEBUG]2018-11-03 14:56:26,054: None
[DEBUG]2018-11-03 14:56:26,054: None
[DEBUG]2018-11-03 14:56:26,054: None
[DEBUG]2018-11-03 14:56:26,054: None
[DEBUG]2018-11-03 14:56:26,055: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:26,055: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:26,055: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:26,055: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:26,055: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:26,055: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:26,055: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:26,055: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:26,055: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:26,055: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:26,055: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:26,055: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:26,055: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:26,055: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:26,055: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:26,055: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:26,055: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:26,055: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:26,055: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:26,055: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:26,055: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:26,055: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:26,055: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:26,055: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:26,055: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:26,055: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:26,055: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:26,055: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:26,055: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:26,055: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:26,056: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:26,056: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:26,056: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:26,056: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:26,056: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:26,056: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:26,056: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:26,056: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:26,056: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:26,056: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:26,056: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:26,056: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:26,056: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:26,056: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:26,056: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:27,398: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 14:56:27,399: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 14:56:27,399: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 14:56:27,402: None
[DEBUG]2018-11-03 14:56:27,402: None
[DEBUG]2018-11-03 14:56:27,402: None
[DEBUG]2018-11-03 14:56:27,402: None
[DEBUG]2018-11-03 14:56:27,402: None
[DEBUG]2018-11-03 14:56:27,403: None
[DEBUG]2018-11-03 14:56:27,403: None
[DEBUG]2018-11-03 14:56:27,403: None
[DEBUG]2018-11-03 14:56:27,403: None
[DEBUG]2018-11-03 14:56:27,403: None
[DEBUG]2018-11-03 14:56:27,403: None
[DEBUG]2018-11-03 14:56:27,403: None
[DEBUG]2018-11-03 14:56:27,403: None
[DEBUG]2018-11-03 14:56:27,403: None
[DEBUG]2018-11-03 14:56:27,404: None
[DEBUG]2018-11-03 14:56:27,404: None
[DEBUG]2018-11-03 14:56:27,404: None
[DEBUG]2018-11-03 14:56:27,404: None
[DEBUG]2018-11-03 14:56:27,404: None
[DEBUG]2018-11-03 14:56:27,404: None
[DEBUG]2018-11-03 14:56:27,405: None
[DEBUG]2018-11-03 14:56:27,405: None
[DEBUG]2018-11-03 14:56:27,405: None
[DEBUG]2018-11-03 14:56:27,405: None
[DEBUG]2018-11-03 14:56:27,405: None
[DEBUG]2018-11-03 14:56:27,405: None
[DEBUG]2018-11-03 14:56:27,405: None
[DEBUG]2018-11-03 14:56:27,405: None
[DEBUG]2018-11-03 14:56:27,405: None
[DEBUG]2018-11-03 14:56:27,405: None
[DEBUG]2018-11-03 14:56:27,405: None
[DEBUG]2018-11-03 14:56:27,405: None
[DEBUG]2018-11-03 14:56:27,405: None
[DEBUG]2018-11-03 14:56:27,405: None
[DEBUG]2018-11-03 14:56:27,405: None
[DEBUG]2018-11-03 14:56:27,406: None
[DEBUG]2018-11-03 14:56:27,406: None
[DEBUG]2018-11-03 14:56:27,406: None
[DEBUG]2018-11-03 14:56:27,406: None
[DEBUG]2018-11-03 14:56:27,406: None
[DEBUG]2018-11-03 14:56:27,406: None
[DEBUG]2018-11-03 14:56:27,406: None
[DEBUG]2018-11-03 14:56:27,406: None
[DEBUG]2018-11-03 14:56:27,406: None
[DEBUG]2018-11-03 14:56:27,407: None
[DEBUG]2018-11-03 14:56:27,407: None
[DEBUG]2018-11-03 14:56:27,407: None
[DEBUG]2018-11-03 14:56:27,407: None
[DEBUG]2018-11-03 14:56:27,407: None
[DEBUG]2018-11-03 14:56:27,407: None
[DEBUG]2018-11-03 14:56:27,407: None
[DEBUG]2018-11-03 14:56:27,407: None
[DEBUG]2018-11-03 14:56:27,407: None
[DEBUG]2018-11-03 14:56:27,407: None
[DEBUG]2018-11-03 14:56:27,408: None
[DEBUG]2018-11-03 14:56:27,408: None
[DEBUG]2018-11-03 14:56:27,408: None
[DEBUG]2018-11-03 14:56:27,408: None
[DEBUG]2018-11-03 14:56:27,408: None
[DEBUG]2018-11-03 14:56:27,408: None
[DEBUG]2018-11-03 14:56:27,408: None
[DEBUG]2018-11-03 14:56:27,408: None
[DEBUG]2018-11-03 14:56:27,408: None
[DEBUG]2018-11-03 14:56:27,408: None
[DEBUG]2018-11-03 14:56:27,408: None
[DEBUG]2018-11-03 14:56:27,408: None
[DEBUG]2018-11-03 14:56:27,408: None
[DEBUG]2018-11-03 14:56:27,408: None
[DEBUG]2018-11-03 14:56:27,408: None
[DEBUG]2018-11-03 14:56:27,408: None
[DEBUG]2018-11-03 14:56:27,408: None
[DEBUG]2018-11-03 14:56:27,408: None
[DEBUG]2018-11-03 14:56:27,408: None
[DEBUG]2018-11-03 14:56:27,408: None
[DEBUG]2018-11-03 14:56:27,408: None
[DEBUG]2018-11-03 14:56:27,408: None
[DEBUG]2018-11-03 14:56:27,408: None
[DEBUG]2018-11-03 14:56:27,409: None
[DEBUG]2018-11-03 14:56:27,409: None
[DEBUG]2018-11-03 14:56:27,409: None
[DEBUG]2018-11-03 14:56:27,409: None
[DEBUG]2018-11-03 14:56:27,409: None
[DEBUG]2018-11-03 14:56:27,409: None
[DEBUG]2018-11-03 14:56:27,409: None
[DEBUG]2018-11-03 14:56:27,409: None
[DEBUG]2018-11-03 14:56:27,409: None
[DEBUG]2018-11-03 14:56:27,409: None
[DEBUG]2018-11-03 14:56:27,409: None
[DEBUG]2018-11-03 14:56:27,409: None
[DEBUG]2018-11-03 14:56:27,409: None
[DEBUG]2018-11-03 14:56:27,410: None
[DEBUG]2018-11-03 14:56:27,410: None
[DEBUG]2018-11-03 14:56:27,410: None
[DEBUG]2018-11-03 14:56:27,410: None
[DEBUG]2018-11-03 14:56:27,410: None
[DEBUG]2018-11-03 14:56:27,410: None
[DEBUG]2018-11-03 14:56:27,410: None
[DEBUG]2018-11-03 14:56:27,410: None
[DEBUG]2018-11-03 14:56:27,410: None
[DEBUG]2018-11-03 14:56:27,410: None
[DEBUG]2018-11-03 14:56:27,410: None
[DEBUG]2018-11-03 14:56:27,410: None
[DEBUG]2018-11-03 14:56:27,410: None
[DEBUG]2018-11-03 14:56:27,410: None
[DEBUG]2018-11-03 14:56:27,411: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:27,411: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:27,411: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:27,411: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:27,411: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:27,411: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:27,411: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:27,411: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:27,411: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:27,411: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:27,411: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:27,411: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:27,411: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:27,411: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:27,411: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:56:27,412: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:27,412: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:27,412: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:27,412: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:27,412: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:27,412: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:27,412: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:27,412: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:27,412: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:27,412: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:27,412: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:27,412: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:27,412: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:27,412: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:27,412: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:56:27,412: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:27,412: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:27,412: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:27,412: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:27,412: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:27,412: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:27,412: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:27,412: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:27,412: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:27,412: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:27,412: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:27,412: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:27,412: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:27,412: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:56:27,412: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:25,843: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 14:57:25,843: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 14:57:25,843: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 14:57:25,846: None
[DEBUG]2018-11-03 14:57:25,846: None
[DEBUG]2018-11-03 14:57:25,846: None
[DEBUG]2018-11-03 14:57:25,846: None
[DEBUG]2018-11-03 14:57:25,846: None
[DEBUG]2018-11-03 14:57:25,847: None
[DEBUG]2018-11-03 14:57:25,847: None
[DEBUG]2018-11-03 14:57:25,847: None
[DEBUG]2018-11-03 14:57:25,847: None
[DEBUG]2018-11-03 14:57:25,848: None
[DEBUG]2018-11-03 14:57:25,848: None
[DEBUG]2018-11-03 14:57:25,848: None
[DEBUG]2018-11-03 14:57:25,848: None
[DEBUG]2018-11-03 14:57:25,848: None
[DEBUG]2018-11-03 14:57:25,848: None
[DEBUG]2018-11-03 14:57:25,848: None
[DEBUG]2018-11-03 14:57:25,848: None
[DEBUG]2018-11-03 14:57:25,848: None
[DEBUG]2018-11-03 14:57:25,848: None
[DEBUG]2018-11-03 14:57:25,848: None
[DEBUG]2018-11-03 14:57:25,849: None
[DEBUG]2018-11-03 14:57:25,849: None
[DEBUG]2018-11-03 14:57:25,849: None
[DEBUG]2018-11-03 14:57:25,849: None
[DEBUG]2018-11-03 14:57:25,849: None
[DEBUG]2018-11-03 14:57:25,849: None
[DEBUG]2018-11-03 14:57:25,849: None
[DEBUG]2018-11-03 14:57:25,850: None
[DEBUG]2018-11-03 14:57:25,850: None
[DEBUG]2018-11-03 14:57:25,850: None
[DEBUG]2018-11-03 14:57:25,850: None
[DEBUG]2018-11-03 14:57:25,850: None
[DEBUG]2018-11-03 14:57:25,850: None
[DEBUG]2018-11-03 14:57:25,850: None
[DEBUG]2018-11-03 14:57:25,850: None
[DEBUG]2018-11-03 14:57:25,850: None
[DEBUG]2018-11-03 14:57:25,850: None
[DEBUG]2018-11-03 14:57:25,850: None
[DEBUG]2018-11-03 14:57:25,850: None
[DEBUG]2018-11-03 14:57:25,850: None
[DEBUG]2018-11-03 14:57:25,850: None
[DEBUG]2018-11-03 14:57:25,850: None
[DEBUG]2018-11-03 14:57:25,850: None
[DEBUG]2018-11-03 14:57:25,850: None
[DEBUG]2018-11-03 14:57:25,851: None
[DEBUG]2018-11-03 14:57:25,851: None
[DEBUG]2018-11-03 14:57:25,851: None
[DEBUG]2018-11-03 14:57:25,851: None
[DEBUG]2018-11-03 14:57:25,851: None
[DEBUG]2018-11-03 14:57:25,851: None
[DEBUG]2018-11-03 14:57:25,851: None
[DEBUG]2018-11-03 14:57:25,851: None
[DEBUG]2018-11-03 14:57:25,851: None
[DEBUG]2018-11-03 14:57:25,851: None
[DEBUG]2018-11-03 14:57:25,852: None
[DEBUG]2018-11-03 14:57:25,852: None
[DEBUG]2018-11-03 14:57:25,852: None
[DEBUG]2018-11-03 14:57:25,852: None
[DEBUG]2018-11-03 14:57:25,852: None
[DEBUG]2018-11-03 14:57:25,852: None
[DEBUG]2018-11-03 14:57:25,852: None
[DEBUG]2018-11-03 14:57:25,852: None
[DEBUG]2018-11-03 14:57:25,852: None
[DEBUG]2018-11-03 14:57:25,852: None
[DEBUG]2018-11-03 14:57:25,852: None
[DEBUG]2018-11-03 14:57:25,853: None
[DEBUG]2018-11-03 14:57:25,853: None
[DEBUG]2018-11-03 14:57:25,853: None
[DEBUG]2018-11-03 14:57:25,853: None
[DEBUG]2018-11-03 14:57:25,853: None
[DEBUG]2018-11-03 14:57:25,853: None
[DEBUG]2018-11-03 14:57:25,853: None
[DEBUG]2018-11-03 14:57:25,853: None
[DEBUG]2018-11-03 14:57:25,853: None
[DEBUG]2018-11-03 14:57:25,853: None
[DEBUG]2018-11-03 14:57:25,853: None
[DEBUG]2018-11-03 14:57:25,853: None
[DEBUG]2018-11-03 14:57:25,853: None
[DEBUG]2018-11-03 14:57:25,853: None
[DEBUG]2018-11-03 14:57:25,853: None
[DEBUG]2018-11-03 14:57:25,853: None
[DEBUG]2018-11-03 14:57:25,853: None
[DEBUG]2018-11-03 14:57:25,853: None
[DEBUG]2018-11-03 14:57:25,853: None
[DEBUG]2018-11-03 14:57:25,853: None
[DEBUG]2018-11-03 14:57:25,853: None
[DEBUG]2018-11-03 14:57:25,853: None
[DEBUG]2018-11-03 14:57:25,853: None
[DEBUG]2018-11-03 14:57:25,853: None
[DEBUG]2018-11-03 14:57:25,853: None
[DEBUG]2018-11-03 14:57:25,854: None
[DEBUG]2018-11-03 14:57:25,854: None
[DEBUG]2018-11-03 14:57:25,854: None
[DEBUG]2018-11-03 14:57:25,854: None
[DEBUG]2018-11-03 14:57:25,854: None
[DEBUG]2018-11-03 14:57:25,854: None
[DEBUG]2018-11-03 14:57:25,854: None
[DEBUG]2018-11-03 14:57:25,854: None
[DEBUG]2018-11-03 14:57:25,854: None
[DEBUG]2018-11-03 14:57:25,854: None
[DEBUG]2018-11-03 14:57:25,854: None
[DEBUG]2018-11-03 14:57:25,854: None
[DEBUG]2018-11-03 14:57:25,854: None
[DEBUG]2018-11-03 14:57:25,854: None
[DEBUG]2018-11-03 14:57:25,855: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:25,855: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:25,855: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:25,855: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:25,855: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:25,855: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:25,855: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:25,855: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:25,855: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:25,855: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:25,855: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:25,855: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:25,855: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:25,855: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:25,855: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:25,856: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:25,856: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:25,856: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:25,856: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:25,856: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:25,856: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:25,856: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:25,856: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:25,856: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:25,856: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:25,856: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:25,856: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:25,856: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:25,856: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:25,856: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:25,856: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:25,856: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:25,856: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:25,856: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:25,856: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:25,856: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:25,856: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:25,856: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:25,856: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:25,856: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:25,856: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:25,856: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:25,856: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:25,856: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:25,856: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:37,488: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 14:57:37,488: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 14:57:37,488: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 14:57:37,491: None
[DEBUG]2018-11-03 14:57:37,491: None
[DEBUG]2018-11-03 14:57:37,492: None
[DEBUG]2018-11-03 14:57:37,492: None
[DEBUG]2018-11-03 14:57:37,492: None
[DEBUG]2018-11-03 14:57:37,493: None
[DEBUG]2018-11-03 14:57:37,493: None
[DEBUG]2018-11-03 14:57:37,493: None
[DEBUG]2018-11-03 14:57:37,493: None
[DEBUG]2018-11-03 14:57:37,493: None
[DEBUG]2018-11-03 14:57:37,493: None
[DEBUG]2018-11-03 14:57:37,493: None
[DEBUG]2018-11-03 14:57:37,493: None
[DEBUG]2018-11-03 14:57:37,493: None
[DEBUG]2018-11-03 14:57:37,494: None
[DEBUG]2018-11-03 14:57:37,494: None
[DEBUG]2018-11-03 14:57:37,494: None
[DEBUG]2018-11-03 14:57:37,494: None
[DEBUG]2018-11-03 14:57:37,494: None
[DEBUG]2018-11-03 14:57:37,494: None
[DEBUG]2018-11-03 14:57:37,494: None
[DEBUG]2018-11-03 14:57:37,494: None
[DEBUG]2018-11-03 14:57:37,494: None
[DEBUG]2018-11-03 14:57:37,494: None
[DEBUG]2018-11-03 14:57:37,494: None
[DEBUG]2018-11-03 14:57:37,494: None
[DEBUG]2018-11-03 14:57:37,494: None
[DEBUG]2018-11-03 14:57:37,495: None
[DEBUG]2018-11-03 14:57:37,495: None
[DEBUG]2018-11-03 14:57:37,495: None
[DEBUG]2018-11-03 14:57:37,495: None
[DEBUG]2018-11-03 14:57:37,495: None
[DEBUG]2018-11-03 14:57:37,495: None
[DEBUG]2018-11-03 14:57:37,495: None
[DEBUG]2018-11-03 14:57:37,495: None
[DEBUG]2018-11-03 14:57:37,496: None
[DEBUG]2018-11-03 14:57:37,496: None
[DEBUG]2018-11-03 14:57:37,496: None
[DEBUG]2018-11-03 14:57:37,496: None
[DEBUG]2018-11-03 14:57:37,496: None
[DEBUG]2018-11-03 14:57:37,496: None
[DEBUG]2018-11-03 14:57:37,496: None
[DEBUG]2018-11-03 14:57:37,496: None
[DEBUG]2018-11-03 14:57:37,496: None
[DEBUG]2018-11-03 14:57:37,496: None
[DEBUG]2018-11-03 14:57:37,496: None
[DEBUG]2018-11-03 14:57:37,496: None
[DEBUG]2018-11-03 14:57:37,496: None
[DEBUG]2018-11-03 14:57:37,496: None
[DEBUG]2018-11-03 14:57:37,496: None
[DEBUG]2018-11-03 14:57:37,496: None
[DEBUG]2018-11-03 14:57:37,496: None
[DEBUG]2018-11-03 14:57:37,496: None
[DEBUG]2018-11-03 14:57:37,496: None
[DEBUG]2018-11-03 14:57:37,497: None
[DEBUG]2018-11-03 14:57:37,497: None
[DEBUG]2018-11-03 14:57:37,497: None
[DEBUG]2018-11-03 14:57:37,497: None
[DEBUG]2018-11-03 14:57:37,497: None
[DEBUG]2018-11-03 14:57:37,497: None
[DEBUG]2018-11-03 14:57:37,497: None
[DEBUG]2018-11-03 14:57:37,497: None
[DEBUG]2018-11-03 14:57:37,497: None
[DEBUG]2018-11-03 14:57:37,497: None
[DEBUG]2018-11-03 14:57:37,497: None
[DEBUG]2018-11-03 14:57:37,498: None
[DEBUG]2018-11-03 14:57:37,498: None
[DEBUG]2018-11-03 14:57:37,498: None
[DEBUG]2018-11-03 14:57:37,498: None
[DEBUG]2018-11-03 14:57:37,498: None
[DEBUG]2018-11-03 14:57:37,498: None
[DEBUG]2018-11-03 14:57:37,498: None
[DEBUG]2018-11-03 14:57:37,498: None
[DEBUG]2018-11-03 14:57:37,498: None
[DEBUG]2018-11-03 14:57:37,498: None
[DEBUG]2018-11-03 14:57:37,498: None
[DEBUG]2018-11-03 14:57:37,498: None
[DEBUG]2018-11-03 14:57:37,499: None
[DEBUG]2018-11-03 14:57:37,499: None
[DEBUG]2018-11-03 14:57:37,499: None
[DEBUG]2018-11-03 14:57:37,499: None
[DEBUG]2018-11-03 14:57:37,499: None
[DEBUG]2018-11-03 14:57:37,499: None
[DEBUG]2018-11-03 14:57:37,499: None
[DEBUG]2018-11-03 14:57:37,499: None
[DEBUG]2018-11-03 14:57:37,499: None
[DEBUG]2018-11-03 14:57:37,499: None
[DEBUG]2018-11-03 14:57:37,499: None
[DEBUG]2018-11-03 14:57:37,499: None
[DEBUG]2018-11-03 14:57:37,499: None
[DEBUG]2018-11-03 14:57:37,500: None
[DEBUG]2018-11-03 14:57:37,500: None
[DEBUG]2018-11-03 14:57:37,500: None
[DEBUG]2018-11-03 14:57:37,500: None
[DEBUG]2018-11-03 14:57:37,500: None
[DEBUG]2018-11-03 14:57:37,500: None
[DEBUG]2018-11-03 14:57:37,500: None
[DEBUG]2018-11-03 14:57:37,500: None
[DEBUG]2018-11-03 14:57:37,500: None
[DEBUG]2018-11-03 14:57:37,500: None
[DEBUG]2018-11-03 14:57:37,500: None
[DEBUG]2018-11-03 14:57:37,500: None
[DEBUG]2018-11-03 14:57:37,500: None
[DEBUG]2018-11-03 14:57:37,500: None
[DEBUG]2018-11-03 14:57:37,501: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:37,501: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:37,501: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:37,501: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:37,501: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:37,501: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:37,501: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:37,501: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:37,501: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:37,501: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:37,501: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:37,501: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:37,501: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:37,501: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:37,501: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:37,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:37,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:37,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:37,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:37,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:37,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:37,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:37,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:37,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:37,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:37,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:37,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:37,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:37,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:37,501: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:37,502: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:37,502: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:37,502: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:37,502: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:37,502: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:37,502: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:37,502: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:37,502: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:37,502: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:37,502: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:37,502: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:37,502: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:37,502: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:37,502: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:37,502: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:47,613: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 14:57:47,613: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 14:57:47,613: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 14:57:47,616: None
[DEBUG]2018-11-03 14:57:47,616: None
[DEBUG]2018-11-03 14:57:47,617: None
[DEBUG]2018-11-03 14:57:47,617: None
[DEBUG]2018-11-03 14:57:47,617: None
[DEBUG]2018-11-03 14:57:47,617: None
[DEBUG]2018-11-03 14:57:47,617: None
[DEBUG]2018-11-03 14:57:47,617: None
[DEBUG]2018-11-03 14:57:47,617: None
[DEBUG]2018-11-03 14:57:47,618: None
[DEBUG]2018-11-03 14:57:47,618: None
[DEBUG]2018-11-03 14:57:47,618: None
[DEBUG]2018-11-03 14:57:47,618: None
[DEBUG]2018-11-03 14:57:47,618: None
[DEBUG]2018-11-03 14:57:47,618: None
[DEBUG]2018-11-03 14:57:47,618: None
[DEBUG]2018-11-03 14:57:47,618: None
[DEBUG]2018-11-03 14:57:47,618: None
[DEBUG]2018-11-03 14:57:47,618: None
[DEBUG]2018-11-03 14:57:47,618: None
[DEBUG]2018-11-03 14:57:47,619: None
[DEBUG]2018-11-03 14:57:47,619: None
[DEBUG]2018-11-03 14:57:47,619: None
[DEBUG]2018-11-03 14:57:47,619: None
[DEBUG]2018-11-03 14:57:47,619: None
[DEBUG]2018-11-03 14:57:47,619: None
[DEBUG]2018-11-03 14:57:47,619: None
[DEBUG]2018-11-03 14:57:47,620: None
[DEBUG]2018-11-03 14:57:47,620: None
[DEBUG]2018-11-03 14:57:47,620: None
[DEBUG]2018-11-03 14:57:47,620: None
[DEBUG]2018-11-03 14:57:47,620: None
[DEBUG]2018-11-03 14:57:47,620: None
[DEBUG]2018-11-03 14:57:47,620: None
[DEBUG]2018-11-03 14:57:47,620: None
[DEBUG]2018-11-03 14:57:47,620: None
[DEBUG]2018-11-03 14:57:47,620: None
[DEBUG]2018-11-03 14:57:47,620: None
[DEBUG]2018-11-03 14:57:47,620: None
[DEBUG]2018-11-03 14:57:47,620: None
[DEBUG]2018-11-03 14:57:47,620: None
[DEBUG]2018-11-03 14:57:47,620: None
[DEBUG]2018-11-03 14:57:47,620: None
[DEBUG]2018-11-03 14:57:47,620: None
[DEBUG]2018-11-03 14:57:47,621: None
[DEBUG]2018-11-03 14:57:47,621: None
[DEBUG]2018-11-03 14:57:47,621: None
[DEBUG]2018-11-03 14:57:47,621: None
[DEBUG]2018-11-03 14:57:47,621: None
[DEBUG]2018-11-03 14:57:47,621: None
[DEBUG]2018-11-03 14:57:47,621: None
[DEBUG]2018-11-03 14:57:47,621: None
[DEBUG]2018-11-03 14:57:47,621: None
[DEBUG]2018-11-03 14:57:47,621: None
[DEBUG]2018-11-03 14:57:47,622: None
[DEBUG]2018-11-03 14:57:47,622: None
[DEBUG]2018-11-03 14:57:47,622: None
[DEBUG]2018-11-03 14:57:47,622: None
[DEBUG]2018-11-03 14:57:47,622: None
[DEBUG]2018-11-03 14:57:47,622: None
[DEBUG]2018-11-03 14:57:47,622: None
[DEBUG]2018-11-03 14:57:47,622: None
[DEBUG]2018-11-03 14:57:47,622: None
[DEBUG]2018-11-03 14:57:47,622: None
[DEBUG]2018-11-03 14:57:47,622: None
[DEBUG]2018-11-03 14:57:47,623: None
[DEBUG]2018-11-03 14:57:47,623: None
[DEBUG]2018-11-03 14:57:47,623: None
[DEBUG]2018-11-03 14:57:47,623: None
[DEBUG]2018-11-03 14:57:47,623: None
[DEBUG]2018-11-03 14:57:47,623: None
[DEBUG]2018-11-03 14:57:47,623: None
[DEBUG]2018-11-03 14:57:47,623: None
[DEBUG]2018-11-03 14:57:47,623: None
[DEBUG]2018-11-03 14:57:47,623: None
[DEBUG]2018-11-03 14:57:47,623: None
[DEBUG]2018-11-03 14:57:47,623: None
[DEBUG]2018-11-03 14:57:47,624: None
[DEBUG]2018-11-03 14:57:47,624: None
[DEBUG]2018-11-03 14:57:47,624: None
[DEBUG]2018-11-03 14:57:47,624: None
[DEBUG]2018-11-03 14:57:47,624: None
[DEBUG]2018-11-03 14:57:47,624: None
[DEBUG]2018-11-03 14:57:47,624: None
[DEBUG]2018-11-03 14:57:47,624: None
[DEBUG]2018-11-03 14:57:47,624: None
[DEBUG]2018-11-03 14:57:47,624: None
[DEBUG]2018-11-03 14:57:47,624: None
[DEBUG]2018-11-03 14:57:47,624: None
[DEBUG]2018-11-03 14:57:47,624: None
[DEBUG]2018-11-03 14:57:47,625: None
[DEBUG]2018-11-03 14:57:47,625: None
[DEBUG]2018-11-03 14:57:47,625: None
[DEBUG]2018-11-03 14:57:47,625: None
[DEBUG]2018-11-03 14:57:47,625: None
[DEBUG]2018-11-03 14:57:47,625: None
[DEBUG]2018-11-03 14:57:47,625: None
[DEBUG]2018-11-03 14:57:47,625: None
[DEBUG]2018-11-03 14:57:47,625: None
[DEBUG]2018-11-03 14:57:47,625: None
[DEBUG]2018-11-03 14:57:47,625: None
[DEBUG]2018-11-03 14:57:47,625: None
[DEBUG]2018-11-03 14:57:47,625: None
[DEBUG]2018-11-03 14:57:47,625: None
[DEBUG]2018-11-03 14:57:47,626: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:47,626: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:47,626: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:47,626: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:47,626: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:47,626: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:47,626: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:47,626: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:47,626: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:47,626: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:47,626: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:47,626: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:47,626: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:47,626: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:47,626: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 14:57:47,626: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:47,626: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:47,626: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:47,626: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:47,626: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:47,626: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:47,626: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:47,626: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:47,626: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:47,626: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:47,626: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:47,626: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:47,626: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:47,626: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:47,626: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 14:57:47,626: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:47,626: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:47,626: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:47,626: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:47,626: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:47,626: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:47,626: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:47,626: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:47,626: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:47,626: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:47,626: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:47,626: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:47,626: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:47,626: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 14:57:47,626: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:01:26,455: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 15:01:26,455: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 15:01:26,455: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 15:01:26,458: None
[DEBUG]2018-11-03 15:01:26,458: None
[DEBUG]2018-11-03 15:01:26,459: None
[DEBUG]2018-11-03 15:01:26,459: None
[DEBUG]2018-11-03 15:01:26,459: None
[DEBUG]2018-11-03 15:01:26,460: None
[DEBUG]2018-11-03 15:01:26,460: None
[DEBUG]2018-11-03 15:01:26,460: None
[DEBUG]2018-11-03 15:01:26,460: None
[DEBUG]2018-11-03 15:01:26,461: None
[DEBUG]2018-11-03 15:01:26,461: None
[DEBUG]2018-11-03 15:01:26,461: None
[DEBUG]2018-11-03 15:01:26,461: None
[DEBUG]2018-11-03 15:01:26,461: None
[DEBUG]2018-11-03 15:01:26,462: None
[DEBUG]2018-11-03 15:01:26,462: None
[DEBUG]2018-11-03 15:01:26,462: None
[DEBUG]2018-11-03 15:01:26,462: None
[DEBUG]2018-11-03 15:01:26,462: None
[DEBUG]2018-11-03 15:01:26,462: None
[DEBUG]2018-11-03 15:01:26,462: None
[DEBUG]2018-11-03 15:01:26,462: None
[DEBUG]2018-11-03 15:01:26,462: None
[DEBUG]2018-11-03 15:01:26,462: None
[DEBUG]2018-11-03 15:01:26,462: None
[DEBUG]2018-11-03 15:01:26,462: None
[DEBUG]2018-11-03 15:01:26,462: None
[DEBUG]2018-11-03 15:01:26,463: None
[DEBUG]2018-11-03 15:01:26,463: None
[DEBUG]2018-11-03 15:01:26,463: None
[DEBUG]2018-11-03 15:01:26,463: None
[DEBUG]2018-11-03 15:01:26,463: None
[DEBUG]2018-11-03 15:01:26,463: None
[DEBUG]2018-11-03 15:01:26,463: None
[DEBUG]2018-11-03 15:01:26,463: None
[DEBUG]2018-11-03 15:01:26,464: None
[DEBUG]2018-11-03 15:01:26,464: None
[DEBUG]2018-11-03 15:01:26,464: None
[DEBUG]2018-11-03 15:01:26,464: None
[DEBUG]2018-11-03 15:01:26,464: None
[DEBUG]2018-11-03 15:01:26,464: None
[DEBUG]2018-11-03 15:01:26,464: None
[DEBUG]2018-11-03 15:01:26,464: None
[DEBUG]2018-11-03 15:01:26,464: None
[DEBUG]2018-11-03 15:01:26,464: None
[DEBUG]2018-11-03 15:01:26,464: None
[DEBUG]2018-11-03 15:01:26,464: None
[DEBUG]2018-11-03 15:01:26,464: None
[DEBUG]2018-11-03 15:01:26,464: None
[DEBUG]2018-11-03 15:01:26,464: None
[DEBUG]2018-11-03 15:01:26,464: None
[DEBUG]2018-11-03 15:01:26,464: None
[DEBUG]2018-11-03 15:01:26,464: None
[DEBUG]2018-11-03 15:01:26,464: None
[DEBUG]2018-11-03 15:01:26,465: None
[DEBUG]2018-11-03 15:01:26,465: None
[DEBUG]2018-11-03 15:01:26,465: None
[DEBUG]2018-11-03 15:01:26,465: None
[DEBUG]2018-11-03 15:01:26,465: None
[DEBUG]2018-11-03 15:01:26,465: None
[DEBUG]2018-11-03 15:01:26,465: None
[DEBUG]2018-11-03 15:01:26,465: None
[DEBUG]2018-11-03 15:01:26,465: None
[DEBUG]2018-11-03 15:01:26,465: None
[DEBUG]2018-11-03 15:01:26,465: None
[DEBUG]2018-11-03 15:01:26,466: None
[DEBUG]2018-11-03 15:01:26,466: None
[DEBUG]2018-11-03 15:01:26,466: None
[DEBUG]2018-11-03 15:01:26,466: None
[DEBUG]2018-11-03 15:01:26,466: None
[DEBUG]2018-11-03 15:01:26,466: None
[DEBUG]2018-11-03 15:01:26,466: None
[DEBUG]2018-11-03 15:01:26,466: None
[DEBUG]2018-11-03 15:01:26,466: None
[DEBUG]2018-11-03 15:01:26,466: None
[DEBUG]2018-11-03 15:01:26,466: None
[DEBUG]2018-11-03 15:01:26,466: None
[DEBUG]2018-11-03 15:01:26,467: None
[DEBUG]2018-11-03 15:01:26,467: None
[DEBUG]2018-11-03 15:01:26,467: None
[DEBUG]2018-11-03 15:01:26,467: None
[DEBUG]2018-11-03 15:01:26,467: None
[DEBUG]2018-11-03 15:01:26,467: None
[DEBUG]2018-11-03 15:01:26,467: None
[DEBUG]2018-11-03 15:01:26,467: None
[DEBUG]2018-11-03 15:01:26,467: None
[DEBUG]2018-11-03 15:01:26,467: None
[DEBUG]2018-11-03 15:01:26,467: None
[DEBUG]2018-11-03 15:01:26,467: None
[DEBUG]2018-11-03 15:01:26,467: None
[DEBUG]2018-11-03 15:01:26,468: None
[DEBUG]2018-11-03 15:01:26,468: None
[DEBUG]2018-11-03 15:01:26,468: None
[DEBUG]2018-11-03 15:01:26,468: None
[DEBUG]2018-11-03 15:01:26,468: None
[DEBUG]2018-11-03 15:01:26,468: None
[DEBUG]2018-11-03 15:01:26,468: None
[DEBUG]2018-11-03 15:01:26,468: None
[DEBUG]2018-11-03 15:01:26,468: None
[DEBUG]2018-11-03 15:01:26,468: None
[DEBUG]2018-11-03 15:01:26,468: None
[DEBUG]2018-11-03 15:01:26,468: None
[DEBUG]2018-11-03 15:01:26,468: None
[DEBUG]2018-11-03 15:01:26,468: None
[DEBUG]2018-11-03 15:01:26,469: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:01:26,469: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:01:26,469: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:01:26,469: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:01:26,469: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:01:26,469: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:01:26,469: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:01:26,469: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:01:26,469: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:01:26,469: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:01:26,469: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:01:26,469: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:01:26,469: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:01:26,469: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:01:26,469: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:01:26,469: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:01:26,469: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:01:26,469: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:01:26,469: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:01:26,469: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:01:26,469: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:01:26,469: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:01:26,469: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:01:26,469: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:01:26,469: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:01:26,469: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:01:26,469: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:01:26,469: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:01:26,469: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:01:26,469: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:01:26,470: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:01:26,470: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:01:26,470: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:01:26,470: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:01:26,470: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:01:26,470: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:01:26,470: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:01:26,470: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:01:26,470: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:01:26,470: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:01:26,470: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:01:26,470: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:01:26,470: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:01:26,470: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:01:26,470: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:07:24,091: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 15:07:24,091: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 15:07:24,092: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 15:07:24,095: None
[DEBUG]2018-11-03 15:07:24,095: None
[DEBUG]2018-11-03 15:07:24,096: None
[DEBUG]2018-11-03 15:07:24,096: None
[DEBUG]2018-11-03 15:07:24,096: None
[DEBUG]2018-11-03 15:07:24,096: None
[DEBUG]2018-11-03 15:07:24,096: None
[DEBUG]2018-11-03 15:07:24,096: None
[DEBUG]2018-11-03 15:07:24,096: None
[DEBUG]2018-11-03 15:07:24,097: None
[DEBUG]2018-11-03 15:07:24,097: None
[DEBUG]2018-11-03 15:07:24,097: None
[DEBUG]2018-11-03 15:07:24,097: None
[DEBUG]2018-11-03 15:07:24,097: None
[DEBUG]2018-11-03 15:07:24,098: None
[DEBUG]2018-11-03 15:07:24,098: None
[DEBUG]2018-11-03 15:07:24,098: None
[DEBUG]2018-11-03 15:07:24,098: None
[DEBUG]2018-11-03 15:07:24,098: None
[DEBUG]2018-11-03 15:07:24,098: None
[DEBUG]2018-11-03 15:07:24,098: None
[DEBUG]2018-11-03 15:07:24,098: None
[DEBUG]2018-11-03 15:07:24,098: None
[DEBUG]2018-11-03 15:07:24,098: None
[DEBUG]2018-11-03 15:07:24,098: None
[DEBUG]2018-11-03 15:07:24,098: None
[DEBUG]2018-11-03 15:07:24,098: None
[DEBUG]2018-11-03 15:07:24,099: None
[DEBUG]2018-11-03 15:07:24,099: None
[DEBUG]2018-11-03 15:07:24,099: None
[DEBUG]2018-11-03 15:07:24,099: None
[DEBUG]2018-11-03 15:07:24,099: None
[DEBUG]2018-11-03 15:07:24,099: None
[DEBUG]2018-11-03 15:07:24,099: None
[DEBUG]2018-11-03 15:07:24,099: None
[DEBUG]2018-11-03 15:07:24,100: None
[DEBUG]2018-11-03 15:07:24,100: None
[DEBUG]2018-11-03 15:07:24,100: None
[DEBUG]2018-11-03 15:07:24,100: None
[DEBUG]2018-11-03 15:07:24,100: None
[DEBUG]2018-11-03 15:07:24,100: None
[DEBUG]2018-11-03 15:07:24,100: None
[DEBUG]2018-11-03 15:07:24,100: None
[DEBUG]2018-11-03 15:07:24,100: None
[DEBUG]2018-11-03 15:07:24,101: None
[DEBUG]2018-11-03 15:07:24,101: None
[DEBUG]2018-11-03 15:07:24,101: None
[DEBUG]2018-11-03 15:07:24,101: None
[DEBUG]2018-11-03 15:07:24,101: None
[DEBUG]2018-11-03 15:07:24,101: None
[DEBUG]2018-11-03 15:07:24,101: None
[DEBUG]2018-11-03 15:07:24,101: None
[DEBUG]2018-11-03 15:07:24,101: None
[DEBUG]2018-11-03 15:07:24,101: None
[DEBUG]2018-11-03 15:07:24,102: None
[DEBUG]2018-11-03 15:07:24,102: None
[DEBUG]2018-11-03 15:07:24,102: None
[DEBUG]2018-11-03 15:07:24,102: None
[DEBUG]2018-11-03 15:07:24,102: None
[DEBUG]2018-11-03 15:07:24,102: None
[DEBUG]2018-11-03 15:07:24,102: None
[DEBUG]2018-11-03 15:07:24,102: None
[DEBUG]2018-11-03 15:07:24,102: None
[DEBUG]2018-11-03 15:07:24,102: None
[DEBUG]2018-11-03 15:07:24,102: None
[DEBUG]2018-11-03 15:07:24,103: None
[DEBUG]2018-11-03 15:07:24,103: None
[DEBUG]2018-11-03 15:07:24,103: None
[DEBUG]2018-11-03 15:07:24,103: None
[DEBUG]2018-11-03 15:07:24,103: None
[DEBUG]2018-11-03 15:07:24,103: None
[DEBUG]2018-11-03 15:07:24,103: None
[DEBUG]2018-11-03 15:07:24,103: None
[DEBUG]2018-11-03 15:07:24,103: None
[DEBUG]2018-11-03 15:07:24,103: None
[DEBUG]2018-11-03 15:07:24,103: None
[DEBUG]2018-11-03 15:07:24,103: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,104: None
[DEBUG]2018-11-03 15:07:24,105: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:07:24,105: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:07:24,105: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:07:24,105: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:07:24,105: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:07:24,105: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:07:24,105: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:07:24,105: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:07:24,105: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:07:24,105: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:07:24,105: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:07:24,105: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:07:24,105: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:07:24,105: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:07:24,105: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:07:24,106: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:07:24,106: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:07:24,106: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:07:24,106: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:07:24,106: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:07:24,106: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:07:24,106: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:07:24,106: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:07:24,106: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:07:24,106: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:07:24,106: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:07:24,106: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:07:24,106: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:07:24,106: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:07:24,106: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:07:24,106: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:07:24,106: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:07:24,106: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:07:24,106: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:07:24,106: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:07:24,106: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:07:24,106: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:07:24,106: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:07:24,106: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:07:24,106: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:07:24,106: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:07:24,106: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:07:24,106: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:07:24,106: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:07:24,106: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:10:59,188: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 15:10:59,189: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 15:10:59,189: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 15:10:59,192: None
[DEBUG]2018-11-03 15:10:59,192: None
[DEBUG]2018-11-03 15:10:59,192: None
[DEBUG]2018-11-03 15:10:59,192: None
[DEBUG]2018-11-03 15:10:59,192: None
[DEBUG]2018-11-03 15:10:59,193: None
[DEBUG]2018-11-03 15:10:59,193: None
[DEBUG]2018-11-03 15:10:59,193: None
[DEBUG]2018-11-03 15:10:59,193: None
[DEBUG]2018-11-03 15:10:59,194: None
[DEBUG]2018-11-03 15:10:59,194: None
[DEBUG]2018-11-03 15:10:59,194: None
[DEBUG]2018-11-03 15:10:59,194: None
[DEBUG]2018-11-03 15:10:59,194: None
[DEBUG]2018-11-03 15:10:59,194: None
[DEBUG]2018-11-03 15:10:59,194: None
[DEBUG]2018-11-03 15:10:59,194: None
[DEBUG]2018-11-03 15:10:59,194: None
[DEBUG]2018-11-03 15:10:59,194: None
[DEBUG]2018-11-03 15:10:59,194: None
[DEBUG]2018-11-03 15:10:59,195: None
[DEBUG]2018-11-03 15:10:59,195: None
[DEBUG]2018-11-03 15:10:59,195: None
[DEBUG]2018-11-03 15:10:59,195: None
[DEBUG]2018-11-03 15:10:59,195: None
[DEBUG]2018-11-03 15:10:59,195: None
[DEBUG]2018-11-03 15:10:59,195: None
[DEBUG]2018-11-03 15:10:59,196: None
[DEBUG]2018-11-03 15:10:59,196: None
[DEBUG]2018-11-03 15:10:59,196: None
[DEBUG]2018-11-03 15:10:59,196: None
[DEBUG]2018-11-03 15:10:59,196: None
[DEBUG]2018-11-03 15:10:59,196: None
[DEBUG]2018-11-03 15:10:59,196: None
[DEBUG]2018-11-03 15:10:59,196: None
[DEBUG]2018-11-03 15:10:59,196: None
[DEBUG]2018-11-03 15:10:59,196: None
[DEBUG]2018-11-03 15:10:59,196: None
[DEBUG]2018-11-03 15:10:59,196: None
[DEBUG]2018-11-03 15:10:59,196: None
[DEBUG]2018-11-03 15:10:59,196: None
[DEBUG]2018-11-03 15:10:59,196: None
[DEBUG]2018-11-03 15:10:59,196: None
[DEBUG]2018-11-03 15:10:59,196: None
[DEBUG]2018-11-03 15:10:59,197: None
[DEBUG]2018-11-03 15:10:59,197: None
[DEBUG]2018-11-03 15:10:59,197: None
[DEBUG]2018-11-03 15:10:59,197: None
[DEBUG]2018-11-03 15:10:59,197: None
[DEBUG]2018-11-03 15:10:59,197: None
[DEBUG]2018-11-03 15:10:59,197: None
[DEBUG]2018-11-03 15:10:59,197: None
[DEBUG]2018-11-03 15:10:59,197: None
[DEBUG]2018-11-03 15:10:59,197: None
[DEBUG]2018-11-03 15:10:59,198: None
[DEBUG]2018-11-03 15:10:59,198: None
[DEBUG]2018-11-03 15:10:59,198: None
[DEBUG]2018-11-03 15:10:59,198: None
[DEBUG]2018-11-03 15:10:59,198: None
[DEBUG]2018-11-03 15:10:59,198: None
[DEBUG]2018-11-03 15:10:59,198: None
[DEBUG]2018-11-03 15:10:59,198: None
[DEBUG]2018-11-03 15:10:59,198: None
[DEBUG]2018-11-03 15:10:59,198: None
[DEBUG]2018-11-03 15:10:59,198: None
[DEBUG]2018-11-03 15:10:59,199: None
[DEBUG]2018-11-03 15:10:59,199: None
[DEBUG]2018-11-03 15:10:59,199: None
[DEBUG]2018-11-03 15:10:59,199: None
[DEBUG]2018-11-03 15:10:59,199: None
[DEBUG]2018-11-03 15:10:59,199: None
[DEBUG]2018-11-03 15:10:59,199: None
[DEBUG]2018-11-03 15:10:59,199: None
[DEBUG]2018-11-03 15:10:59,199: None
[DEBUG]2018-11-03 15:10:59,199: None
[DEBUG]2018-11-03 15:10:59,199: None
[DEBUG]2018-11-03 15:10:59,199: None
[DEBUG]2018-11-03 15:10:59,199: None
[DEBUG]2018-11-03 15:10:59,199: None
[DEBUG]2018-11-03 15:10:59,199: None
[DEBUG]2018-11-03 15:10:59,199: None
[DEBUG]2018-11-03 15:10:59,199: None
[DEBUG]2018-11-03 15:10:59,199: None
[DEBUG]2018-11-03 15:10:59,199: None
[DEBUG]2018-11-03 15:10:59,199: None
[DEBUG]2018-11-03 15:10:59,199: None
[DEBUG]2018-11-03 15:10:59,199: None
[DEBUG]2018-11-03 15:10:59,199: None
[DEBUG]2018-11-03 15:10:59,199: None
[DEBUG]2018-11-03 15:10:59,199: None
[DEBUG]2018-11-03 15:10:59,200: None
[DEBUG]2018-11-03 15:10:59,200: None
[DEBUG]2018-11-03 15:10:59,200: None
[DEBUG]2018-11-03 15:10:59,200: None
[DEBUG]2018-11-03 15:10:59,200: None
[DEBUG]2018-11-03 15:10:59,200: None
[DEBUG]2018-11-03 15:10:59,200: None
[DEBUG]2018-11-03 15:10:59,200: None
[DEBUG]2018-11-03 15:10:59,200: None
[DEBUG]2018-11-03 15:10:59,200: None
[DEBUG]2018-11-03 15:10:59,200: None
[DEBUG]2018-11-03 15:10:59,200: None
[DEBUG]2018-11-03 15:10:59,200: None
[DEBUG]2018-11-03 15:10:59,200: None
[DEBUG]2018-11-03 15:10:59,201: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:10:59,201: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:10:59,201: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:10:59,201: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:10:59,201: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:10:59,201: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:10:59,201: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:10:59,201: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:10:59,201: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:10:59,201: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:10:59,201: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:10:59,201: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:10:59,201: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:10:59,201: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:10:59,201: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:10:59,202: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:10:59,202: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:10:59,202: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:10:59,202: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:10:59,202: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:10:59,202: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:10:59,202: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:10:59,202: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:10:59,202: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:10:59,202: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:10:59,202: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:10:59,202: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:10:59,202: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:10:59,202: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:10:59,202: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:10:59,202: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:10:59,202: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:10:59,202: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:10:59,202: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:10:59,202: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:10:59,202: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:10:59,202: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:10:59,202: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:10:59,202: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:10:59,202: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:10:59,202: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:10:59,202: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:10:59,202: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:10:59,202: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:10:59,202: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:10,201: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 15:11:10,201: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 15:11:10,201: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 15:11:10,204: None
[DEBUG]2018-11-03 15:11:10,204: None
[DEBUG]2018-11-03 15:11:10,205: None
[DEBUG]2018-11-03 15:11:10,205: None
[DEBUG]2018-11-03 15:11:10,205: None
[DEBUG]2018-11-03 15:11:10,205: None
[DEBUG]2018-11-03 15:11:10,205: None
[DEBUG]2018-11-03 15:11:10,205: None
[DEBUG]2018-11-03 15:11:10,205: None
[DEBUG]2018-11-03 15:11:10,206: None
[DEBUG]2018-11-03 15:11:10,206: None
[DEBUG]2018-11-03 15:11:10,206: None
[DEBUG]2018-11-03 15:11:10,206: None
[DEBUG]2018-11-03 15:11:10,206: None
[DEBUG]2018-11-03 15:11:10,207: None
[DEBUG]2018-11-03 15:11:10,207: None
[DEBUG]2018-11-03 15:11:10,207: None
[DEBUG]2018-11-03 15:11:10,207: None
[DEBUG]2018-11-03 15:11:10,207: None
[DEBUG]2018-11-03 15:11:10,207: None
[DEBUG]2018-11-03 15:11:10,207: None
[DEBUG]2018-11-03 15:11:10,207: None
[DEBUG]2018-11-03 15:11:10,207: None
[DEBUG]2018-11-03 15:11:10,207: None
[DEBUG]2018-11-03 15:11:10,207: None
[DEBUG]2018-11-03 15:11:10,207: None
[DEBUG]2018-11-03 15:11:10,207: None
[DEBUG]2018-11-03 15:11:10,208: None
[DEBUG]2018-11-03 15:11:10,208: None
[DEBUG]2018-11-03 15:11:10,208: None
[DEBUG]2018-11-03 15:11:10,208: None
[DEBUG]2018-11-03 15:11:10,208: None
[DEBUG]2018-11-03 15:11:10,208: None
[DEBUG]2018-11-03 15:11:10,208: None
[DEBUG]2018-11-03 15:11:10,208: None
[DEBUG]2018-11-03 15:11:10,209: None
[DEBUG]2018-11-03 15:11:10,209: None
[DEBUG]2018-11-03 15:11:10,209: None
[DEBUG]2018-11-03 15:11:10,209: None
[DEBUG]2018-11-03 15:11:10,209: None
[DEBUG]2018-11-03 15:11:10,209: None
[DEBUG]2018-11-03 15:11:10,209: None
[DEBUG]2018-11-03 15:11:10,209: None
[DEBUG]2018-11-03 15:11:10,209: None
[DEBUG]2018-11-03 15:11:10,209: None
[DEBUG]2018-11-03 15:11:10,209: None
[DEBUG]2018-11-03 15:11:10,209: None
[DEBUG]2018-11-03 15:11:10,209: None
[DEBUG]2018-11-03 15:11:10,209: None
[DEBUG]2018-11-03 15:11:10,209: None
[DEBUG]2018-11-03 15:11:10,209: None
[DEBUG]2018-11-03 15:11:10,209: None
[DEBUG]2018-11-03 15:11:10,209: None
[DEBUG]2018-11-03 15:11:10,209: None
[DEBUG]2018-11-03 15:11:10,210: None
[DEBUG]2018-11-03 15:11:10,210: None
[DEBUG]2018-11-03 15:11:10,210: None
[DEBUG]2018-11-03 15:11:10,210: None
[DEBUG]2018-11-03 15:11:10,210: None
[DEBUG]2018-11-03 15:11:10,210: None
[DEBUG]2018-11-03 15:11:10,210: None
[DEBUG]2018-11-03 15:11:10,210: None
[DEBUG]2018-11-03 15:11:10,210: None
[DEBUG]2018-11-03 15:11:10,210: None
[DEBUG]2018-11-03 15:11:10,210: None
[DEBUG]2018-11-03 15:11:10,211: None
[DEBUG]2018-11-03 15:11:10,211: None
[DEBUG]2018-11-03 15:11:10,211: None
[DEBUG]2018-11-03 15:11:10,211: None
[DEBUG]2018-11-03 15:11:10,211: None
[DEBUG]2018-11-03 15:11:10,211: None
[DEBUG]2018-11-03 15:11:10,211: None
[DEBUG]2018-11-03 15:11:10,211: None
[DEBUG]2018-11-03 15:11:10,211: None
[DEBUG]2018-11-03 15:11:10,211: None
[DEBUG]2018-11-03 15:11:10,211: None
[DEBUG]2018-11-03 15:11:10,211: None
[DEBUG]2018-11-03 15:11:10,212: None
[DEBUG]2018-11-03 15:11:10,212: None
[DEBUG]2018-11-03 15:11:10,212: None
[DEBUG]2018-11-03 15:11:10,212: None
[DEBUG]2018-11-03 15:11:10,212: None
[DEBUG]2018-11-03 15:11:10,212: None
[DEBUG]2018-11-03 15:11:10,212: None
[DEBUG]2018-11-03 15:11:10,212: None
[DEBUG]2018-11-03 15:11:10,212: None
[DEBUG]2018-11-03 15:11:10,212: None
[DEBUG]2018-11-03 15:11:10,212: None
[DEBUG]2018-11-03 15:11:10,212: None
[DEBUG]2018-11-03 15:11:10,212: None
[DEBUG]2018-11-03 15:11:10,213: None
[DEBUG]2018-11-03 15:11:10,213: None
[DEBUG]2018-11-03 15:11:10,213: None
[DEBUG]2018-11-03 15:11:10,213: None
[DEBUG]2018-11-03 15:11:10,213: None
[DEBUG]2018-11-03 15:11:10,213: None
[DEBUG]2018-11-03 15:11:10,213: None
[DEBUG]2018-11-03 15:11:10,213: None
[DEBUG]2018-11-03 15:11:10,213: None
[DEBUG]2018-11-03 15:11:10,213: None
[DEBUG]2018-11-03 15:11:10,213: None
[DEBUG]2018-11-03 15:11:10,213: None
[DEBUG]2018-11-03 15:11:10,213: None
[DEBUG]2018-11-03 15:11:10,213: None
[DEBUG]2018-11-03 15:11:10,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:10,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:10,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:10,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:10,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:10,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:10,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:10,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:10,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:10,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:10,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:10,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:10,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:10,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:10,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:10,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:10,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:10,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:10,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:10,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:10,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:10,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:10,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:10,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:10,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:10,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:10,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:10,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:10,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:10,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:10,215: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:10,215: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:10,215: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:10,215: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:10,215: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:10,215: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:10,215: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:10,215: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:10,215: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:10,215: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:10,215: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:10,215: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:10,215: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:10,215: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:10,215: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:32,793: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 15:11:32,793: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 15:11:32,794: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 15:11:32,797: None
[DEBUG]2018-11-03 15:11:32,797: None
[DEBUG]2018-11-03 15:11:32,797: None
[DEBUG]2018-11-03 15:11:32,797: None
[DEBUG]2018-11-03 15:11:32,797: None
[DEBUG]2018-11-03 15:11:32,798: None
[DEBUG]2018-11-03 15:11:32,798: None
[DEBUG]2018-11-03 15:11:32,798: None
[DEBUG]2018-11-03 15:11:32,798: None
[DEBUG]2018-11-03 15:11:32,799: None
[DEBUG]2018-11-03 15:11:32,799: None
[DEBUG]2018-11-03 15:11:32,799: None
[DEBUG]2018-11-03 15:11:32,799: None
[DEBUG]2018-11-03 15:11:32,799: None
[DEBUG]2018-11-03 15:11:32,799: None
[DEBUG]2018-11-03 15:11:32,799: None
[DEBUG]2018-11-03 15:11:32,799: None
[DEBUG]2018-11-03 15:11:32,799: None
[DEBUG]2018-11-03 15:11:32,799: None
[DEBUG]2018-11-03 15:11:32,799: None
[DEBUG]2018-11-03 15:11:32,800: None
[DEBUG]2018-11-03 15:11:32,800: None
[DEBUG]2018-11-03 15:11:32,800: None
[DEBUG]2018-11-03 15:11:32,800: None
[DEBUG]2018-11-03 15:11:32,800: None
[DEBUG]2018-11-03 15:11:32,800: None
[DEBUG]2018-11-03 15:11:32,800: None
[DEBUG]2018-11-03 15:11:32,801: None
[DEBUG]2018-11-03 15:11:32,801: None
[DEBUG]2018-11-03 15:11:32,801: None
[DEBUG]2018-11-03 15:11:32,801: None
[DEBUG]2018-11-03 15:11:32,801: None
[DEBUG]2018-11-03 15:11:32,801: None
[DEBUG]2018-11-03 15:11:32,801: None
[DEBUG]2018-11-03 15:11:32,801: None
[DEBUG]2018-11-03 15:11:32,802: None
[DEBUG]2018-11-03 15:11:32,802: None
[DEBUG]2018-11-03 15:11:32,802: None
[DEBUG]2018-11-03 15:11:32,802: None
[DEBUG]2018-11-03 15:11:32,802: None
[DEBUG]2018-11-03 15:11:32,802: None
[DEBUG]2018-11-03 15:11:32,802: None
[DEBUG]2018-11-03 15:11:32,802: None
[DEBUG]2018-11-03 15:11:32,802: None
[DEBUG]2018-11-03 15:11:32,802: None
[DEBUG]2018-11-03 15:11:32,802: None
[DEBUG]2018-11-03 15:11:32,802: None
[DEBUG]2018-11-03 15:11:32,802: None
[DEBUG]2018-11-03 15:11:32,802: None
[DEBUG]2018-11-03 15:11:32,802: None
[DEBUG]2018-11-03 15:11:32,802: None
[DEBUG]2018-11-03 15:11:32,802: None
[DEBUG]2018-11-03 15:11:32,802: None
[DEBUG]2018-11-03 15:11:32,802: None
[DEBUG]2018-11-03 15:11:32,803: None
[DEBUG]2018-11-03 15:11:32,803: None
[DEBUG]2018-11-03 15:11:32,803: None
[DEBUG]2018-11-03 15:11:32,803: None
[DEBUG]2018-11-03 15:11:32,803: None
[DEBUG]2018-11-03 15:11:32,803: None
[DEBUG]2018-11-03 15:11:32,803: None
[DEBUG]2018-11-03 15:11:32,803: None
[DEBUG]2018-11-03 15:11:32,803: None
[DEBUG]2018-11-03 15:11:32,803: None
[DEBUG]2018-11-03 15:11:32,803: None
[DEBUG]2018-11-03 15:11:32,804: None
[DEBUG]2018-11-03 15:11:32,804: None
[DEBUG]2018-11-03 15:11:32,804: None
[DEBUG]2018-11-03 15:11:32,804: None
[DEBUG]2018-11-03 15:11:32,804: None
[DEBUG]2018-11-03 15:11:32,804: None
[DEBUG]2018-11-03 15:11:32,804: None
[DEBUG]2018-11-03 15:11:32,804: None
[DEBUG]2018-11-03 15:11:32,804: None
[DEBUG]2018-11-03 15:11:32,804: None
[DEBUG]2018-11-03 15:11:32,804: None
[DEBUG]2018-11-03 15:11:32,804: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,805: None
[DEBUG]2018-11-03 15:11:32,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:32,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:32,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:32,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:32,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:32,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:32,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:32,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:32,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:32,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:32,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:32,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:32,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:32,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:32,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:32,807: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:32,807: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:32,807: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:32,807: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:32,807: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:32,807: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:32,807: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:32,807: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:32,807: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:32,807: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:32,807: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:32,807: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:32,807: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:32,807: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:32,807: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:32,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:32,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:32,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:32,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:32,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:32,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:32,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:32,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:32,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:32,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:32,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:32,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:32,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:32,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:32,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:54,200: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 15:11:54,201: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 15:11:54,201: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 15:11:54,204: None
[DEBUG]2018-11-03 15:11:54,204: None
[DEBUG]2018-11-03 15:11:54,205: None
[DEBUG]2018-11-03 15:11:54,205: None
[DEBUG]2018-11-03 15:11:54,205: None
[DEBUG]2018-11-03 15:11:54,205: None
[DEBUG]2018-11-03 15:11:54,205: None
[DEBUG]2018-11-03 15:11:54,205: None
[DEBUG]2018-11-03 15:11:54,205: None
[DEBUG]2018-11-03 15:11:54,206: None
[DEBUG]2018-11-03 15:11:54,206: None
[DEBUG]2018-11-03 15:11:54,206: None
[DEBUG]2018-11-03 15:11:54,206: None
[DEBUG]2018-11-03 15:11:54,206: None
[DEBUG]2018-11-03 15:11:54,206: None
[DEBUG]2018-11-03 15:11:54,206: None
[DEBUG]2018-11-03 15:11:54,206: None
[DEBUG]2018-11-03 15:11:54,206: None
[DEBUG]2018-11-03 15:11:54,206: None
[DEBUG]2018-11-03 15:11:54,206: None
[DEBUG]2018-11-03 15:11:54,207: None
[DEBUG]2018-11-03 15:11:54,207: None
[DEBUG]2018-11-03 15:11:54,207: None
[DEBUG]2018-11-03 15:11:54,207: None
[DEBUG]2018-11-03 15:11:54,207: None
[DEBUG]2018-11-03 15:11:54,207: None
[DEBUG]2018-11-03 15:11:54,207: None
[DEBUG]2018-11-03 15:11:54,208: None
[DEBUG]2018-11-03 15:11:54,208: None
[DEBUG]2018-11-03 15:11:54,208: None
[DEBUG]2018-11-03 15:11:54,208: None
[DEBUG]2018-11-03 15:11:54,208: None
[DEBUG]2018-11-03 15:11:54,208: None
[DEBUG]2018-11-03 15:11:54,208: None
[DEBUG]2018-11-03 15:11:54,208: None
[DEBUG]2018-11-03 15:11:54,208: None
[DEBUG]2018-11-03 15:11:54,208: None
[DEBUG]2018-11-03 15:11:54,208: None
[DEBUG]2018-11-03 15:11:54,208: None
[DEBUG]2018-11-03 15:11:54,208: None
[DEBUG]2018-11-03 15:11:54,208: None
[DEBUG]2018-11-03 15:11:54,208: None
[DEBUG]2018-11-03 15:11:54,208: None
[DEBUG]2018-11-03 15:11:54,208: None
[DEBUG]2018-11-03 15:11:54,209: None
[DEBUG]2018-11-03 15:11:54,209: None
[DEBUG]2018-11-03 15:11:54,209: None
[DEBUG]2018-11-03 15:11:54,209: None
[DEBUG]2018-11-03 15:11:54,209: None
[DEBUG]2018-11-03 15:11:54,209: None
[DEBUG]2018-11-03 15:11:54,209: None
[DEBUG]2018-11-03 15:11:54,209: None
[DEBUG]2018-11-03 15:11:54,209: None
[DEBUG]2018-11-03 15:11:54,209: None
[DEBUG]2018-11-03 15:11:54,210: None
[DEBUG]2018-11-03 15:11:54,210: None
[DEBUG]2018-11-03 15:11:54,210: None
[DEBUG]2018-11-03 15:11:54,210: None
[DEBUG]2018-11-03 15:11:54,210: None
[DEBUG]2018-11-03 15:11:54,210: None
[DEBUG]2018-11-03 15:11:54,210: None
[DEBUG]2018-11-03 15:11:54,210: None
[DEBUG]2018-11-03 15:11:54,210: None
[DEBUG]2018-11-03 15:11:54,210: None
[DEBUG]2018-11-03 15:11:54,210: None
[DEBUG]2018-11-03 15:11:54,211: None
[DEBUG]2018-11-03 15:11:54,211: None
[DEBUG]2018-11-03 15:11:54,211: None
[DEBUG]2018-11-03 15:11:54,211: None
[DEBUG]2018-11-03 15:11:54,211: None
[DEBUG]2018-11-03 15:11:54,211: None
[DEBUG]2018-11-03 15:11:54,211: None
[DEBUG]2018-11-03 15:11:54,211: None
[DEBUG]2018-11-03 15:11:54,211: None
[DEBUG]2018-11-03 15:11:54,211: None
[DEBUG]2018-11-03 15:11:54,211: None
[DEBUG]2018-11-03 15:11:54,211: None
[DEBUG]2018-11-03 15:11:54,212: None
[DEBUG]2018-11-03 15:11:54,212: None
[DEBUG]2018-11-03 15:11:54,212: None
[DEBUG]2018-11-03 15:11:54,212: None
[DEBUG]2018-11-03 15:11:54,212: None
[DEBUG]2018-11-03 15:11:54,212: None
[DEBUG]2018-11-03 15:11:54,212: None
[DEBUG]2018-11-03 15:11:54,212: None
[DEBUG]2018-11-03 15:11:54,212: None
[DEBUG]2018-11-03 15:11:54,212: None
[DEBUG]2018-11-03 15:11:54,212: None
[DEBUG]2018-11-03 15:11:54,212: None
[DEBUG]2018-11-03 15:11:54,212: None
[DEBUG]2018-11-03 15:11:54,213: None
[DEBUG]2018-11-03 15:11:54,213: None
[DEBUG]2018-11-03 15:11:54,213: None
[DEBUG]2018-11-03 15:11:54,213: None
[DEBUG]2018-11-03 15:11:54,213: None
[DEBUG]2018-11-03 15:11:54,213: None
[DEBUG]2018-11-03 15:11:54,213: None
[DEBUG]2018-11-03 15:11:54,213: None
[DEBUG]2018-11-03 15:11:54,213: None
[DEBUG]2018-11-03 15:11:54,213: None
[DEBUG]2018-11-03 15:11:54,213: None
[DEBUG]2018-11-03 15:11:54,213: None
[DEBUG]2018-11-03 15:11:54,213: None
[DEBUG]2018-11-03 15:11:54,213: None
[DEBUG]2018-11-03 15:11:54,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:54,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:54,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:54,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:54,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:54,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:54,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:54,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:54,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:54,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:54,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:54,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:54,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:54,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:54,214: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:11:54,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:54,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:54,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:54,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:54,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:54,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:54,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:54,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:54,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:54,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:54,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:54,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:54,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:54,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:54,214: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:11:54,214: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:54,214: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:54,214: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:54,214: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:54,214: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:54,214: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:54,214: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:54,214: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:54,214: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:54,214: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:54,214: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:54,214: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:54,214: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:54,214: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:11:54,214: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:06,146: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 15:13:06,146: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 15:13:06,146: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 15:13:06,149: None
[DEBUG]2018-11-03 15:13:06,149: None
[DEBUG]2018-11-03 15:13:06,150: None
[DEBUG]2018-11-03 15:13:06,150: None
[DEBUG]2018-11-03 15:13:06,150: None
[DEBUG]2018-11-03 15:13:06,150: None
[DEBUG]2018-11-03 15:13:06,150: None
[DEBUG]2018-11-03 15:13:06,150: None
[DEBUG]2018-11-03 15:13:06,150: None
[DEBUG]2018-11-03 15:13:06,151: None
[DEBUG]2018-11-03 15:13:06,151: None
[DEBUG]2018-11-03 15:13:06,151: None
[DEBUG]2018-11-03 15:13:06,151: None
[DEBUG]2018-11-03 15:13:06,151: None
[DEBUG]2018-11-03 15:13:06,151: None
[DEBUG]2018-11-03 15:13:06,151: None
[DEBUG]2018-11-03 15:13:06,151: None
[DEBUG]2018-11-03 15:13:06,151: None
[DEBUG]2018-11-03 15:13:06,151: None
[DEBUG]2018-11-03 15:13:06,151: None
[DEBUG]2018-11-03 15:13:06,152: None
[DEBUG]2018-11-03 15:13:06,152: None
[DEBUG]2018-11-03 15:13:06,152: None
[DEBUG]2018-11-03 15:13:06,152: None
[DEBUG]2018-11-03 15:13:06,152: None
[DEBUG]2018-11-03 15:13:06,152: None
[DEBUG]2018-11-03 15:13:06,152: None
[DEBUG]2018-11-03 15:13:06,153: None
[DEBUG]2018-11-03 15:13:06,153: None
[DEBUG]2018-11-03 15:13:06,153: None
[DEBUG]2018-11-03 15:13:06,153: None
[DEBUG]2018-11-03 15:13:06,153: None
[DEBUG]2018-11-03 15:13:06,153: None
[DEBUG]2018-11-03 15:13:06,153: None
[DEBUG]2018-11-03 15:13:06,153: None
[DEBUG]2018-11-03 15:13:06,153: None
[DEBUG]2018-11-03 15:13:06,153: None
[DEBUG]2018-11-03 15:13:06,153: None
[DEBUG]2018-11-03 15:13:06,153: None
[DEBUG]2018-11-03 15:13:06,153: None
[DEBUG]2018-11-03 15:13:06,153: None
[DEBUG]2018-11-03 15:13:06,153: None
[DEBUG]2018-11-03 15:13:06,153: None
[DEBUG]2018-11-03 15:13:06,153: None
[DEBUG]2018-11-03 15:13:06,154: None
[DEBUG]2018-11-03 15:13:06,154: None
[DEBUG]2018-11-03 15:13:06,154: None
[DEBUG]2018-11-03 15:13:06,154: None
[DEBUG]2018-11-03 15:13:06,154: None
[DEBUG]2018-11-03 15:13:06,154: None
[DEBUG]2018-11-03 15:13:06,154: None
[DEBUG]2018-11-03 15:13:06,154: None
[DEBUG]2018-11-03 15:13:06,154: None
[DEBUG]2018-11-03 15:13:06,154: None
[DEBUG]2018-11-03 15:13:06,155: None
[DEBUG]2018-11-03 15:13:06,155: None
[DEBUG]2018-11-03 15:13:06,155: None
[DEBUG]2018-11-03 15:13:06,155: None
[DEBUG]2018-11-03 15:13:06,155: None
[DEBUG]2018-11-03 15:13:06,155: None
[DEBUG]2018-11-03 15:13:06,155: None
[DEBUG]2018-11-03 15:13:06,155: None
[DEBUG]2018-11-03 15:13:06,155: None
[DEBUG]2018-11-03 15:13:06,155: None
[DEBUG]2018-11-03 15:13:06,155: None
[DEBUG]2018-11-03 15:13:06,156: None
[DEBUG]2018-11-03 15:13:06,156: None
[DEBUG]2018-11-03 15:13:06,156: None
[DEBUG]2018-11-03 15:13:06,156: None
[DEBUG]2018-11-03 15:13:06,156: None
[DEBUG]2018-11-03 15:13:06,156: None
[DEBUG]2018-11-03 15:13:06,156: None
[DEBUG]2018-11-03 15:13:06,156: None
[DEBUG]2018-11-03 15:13:06,156: None
[DEBUG]2018-11-03 15:13:06,156: None
[DEBUG]2018-11-03 15:13:06,156: None
[DEBUG]2018-11-03 15:13:06,156: None
[DEBUG]2018-11-03 15:13:06,157: None
[DEBUG]2018-11-03 15:13:06,157: None
[DEBUG]2018-11-03 15:13:06,157: None
[DEBUG]2018-11-03 15:13:06,157: None
[DEBUG]2018-11-03 15:13:06,157: None
[DEBUG]2018-11-03 15:13:06,157: None
[DEBUG]2018-11-03 15:13:06,157: None
[DEBUG]2018-11-03 15:13:06,157: None
[DEBUG]2018-11-03 15:13:06,157: None
[DEBUG]2018-11-03 15:13:06,157: None
[DEBUG]2018-11-03 15:13:06,157: None
[DEBUG]2018-11-03 15:13:06,157: None
[DEBUG]2018-11-03 15:13:06,157: None
[DEBUG]2018-11-03 15:13:06,158: None
[DEBUG]2018-11-03 15:13:06,158: None
[DEBUG]2018-11-03 15:13:06,158: None
[DEBUG]2018-11-03 15:13:06,158: None
[DEBUG]2018-11-03 15:13:06,158: None
[DEBUG]2018-11-03 15:13:06,158: None
[DEBUG]2018-11-03 15:13:06,158: None
[DEBUG]2018-11-03 15:13:06,158: None
[DEBUG]2018-11-03 15:13:06,158: None
[DEBUG]2018-11-03 15:13:06,158: None
[DEBUG]2018-11-03 15:13:06,158: None
[DEBUG]2018-11-03 15:13:06,158: None
[DEBUG]2018-11-03 15:13:06,158: None
[DEBUG]2018-11-03 15:13:06,158: None
[DEBUG]2018-11-03 15:13:06,158: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:06,158: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:06,158: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:06,158: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:06,158: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:06,158: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:06,158: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:06,158: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:06,158: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:06,158: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:06,158: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:06,158: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:06,158: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:06,158: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:06,158: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:06,159: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:06,159: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:06,159: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:06,159: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:06,159: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:06,159: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:06,159: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:06,159: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:06,159: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:06,159: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:06,159: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:06,159: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:06,159: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:06,159: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:06,159: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:06,159: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:06,159: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:06,159: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:06,159: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:06,159: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:06,159: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:06,159: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:06,159: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:06,159: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:06,159: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:06,159: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:06,159: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:06,159: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:06,159: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:06,159: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:52,354: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 15:13:52,355: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 15:13:52,355: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 15:13:52,358: None
[DEBUG]2018-11-03 15:13:52,358: None
[DEBUG]2018-11-03 15:13:52,358: None
[DEBUG]2018-11-03 15:13:52,358: None
[DEBUG]2018-11-03 15:13:52,358: None
[DEBUG]2018-11-03 15:13:52,359: None
[DEBUG]2018-11-03 15:13:52,359: None
[DEBUG]2018-11-03 15:13:52,359: None
[DEBUG]2018-11-03 15:13:52,359: None
[DEBUG]2018-11-03 15:13:52,360: None
[DEBUG]2018-11-03 15:13:52,360: None
[DEBUG]2018-11-03 15:13:52,360: None
[DEBUG]2018-11-03 15:13:52,360: None
[DEBUG]2018-11-03 15:13:52,360: None
[DEBUG]2018-11-03 15:13:52,360: None
[DEBUG]2018-11-03 15:13:52,360: None
[DEBUG]2018-11-03 15:13:52,360: None
[DEBUG]2018-11-03 15:13:52,360: None
[DEBUG]2018-11-03 15:13:52,360: None
[DEBUG]2018-11-03 15:13:52,360: None
[DEBUG]2018-11-03 15:13:52,361: None
[DEBUG]2018-11-03 15:13:52,361: None
[DEBUG]2018-11-03 15:13:52,361: None
[DEBUG]2018-11-03 15:13:52,361: None
[DEBUG]2018-11-03 15:13:52,361: None
[DEBUG]2018-11-03 15:13:52,361: None
[DEBUG]2018-11-03 15:13:52,361: None
[DEBUG]2018-11-03 15:13:52,361: None
[DEBUG]2018-11-03 15:13:52,361: None
[DEBUG]2018-11-03 15:13:52,361: None
[DEBUG]2018-11-03 15:13:52,361: None
[DEBUG]2018-11-03 15:13:52,361: None
[DEBUG]2018-11-03 15:13:52,361: None
[DEBUG]2018-11-03 15:13:52,361: None
[DEBUG]2018-11-03 15:13:52,361: None
[DEBUG]2018-11-03 15:13:52,362: None
[DEBUG]2018-11-03 15:13:52,362: None
[DEBUG]2018-11-03 15:13:52,362: None
[DEBUG]2018-11-03 15:13:52,362: None
[DEBUG]2018-11-03 15:13:52,362: None
[DEBUG]2018-11-03 15:13:52,362: None
[DEBUG]2018-11-03 15:13:52,362: None
[DEBUG]2018-11-03 15:13:52,362: None
[DEBUG]2018-11-03 15:13:52,362: None
[DEBUG]2018-11-03 15:13:52,363: None
[DEBUG]2018-11-03 15:13:52,363: None
[DEBUG]2018-11-03 15:13:52,363: None
[DEBUG]2018-11-03 15:13:52,363: None
[DEBUG]2018-11-03 15:13:52,363: None
[DEBUG]2018-11-03 15:13:52,363: None
[DEBUG]2018-11-03 15:13:52,363: None
[DEBUG]2018-11-03 15:13:52,363: None
[DEBUG]2018-11-03 15:13:52,363: None
[DEBUG]2018-11-03 15:13:52,363: None
[DEBUG]2018-11-03 15:13:52,364: None
[DEBUG]2018-11-03 15:13:52,364: None
[DEBUG]2018-11-03 15:13:52,364: None
[DEBUG]2018-11-03 15:13:52,364: None
[DEBUG]2018-11-03 15:13:52,364: None
[DEBUG]2018-11-03 15:13:52,364: None
[DEBUG]2018-11-03 15:13:52,364: None
[DEBUG]2018-11-03 15:13:52,364: None
[DEBUG]2018-11-03 15:13:52,364: None
[DEBUG]2018-11-03 15:13:52,364: None
[DEBUG]2018-11-03 15:13:52,364: None
[DEBUG]2018-11-03 15:13:52,365: None
[DEBUG]2018-11-03 15:13:52,365: None
[DEBUG]2018-11-03 15:13:52,365: None
[DEBUG]2018-11-03 15:13:52,365: None
[DEBUG]2018-11-03 15:13:52,365: None
[DEBUG]2018-11-03 15:13:52,365: None
[DEBUG]2018-11-03 15:13:52,365: None
[DEBUG]2018-11-03 15:13:52,365: None
[DEBUG]2018-11-03 15:13:52,365: None
[DEBUG]2018-11-03 15:13:52,365: None
[DEBUG]2018-11-03 15:13:52,365: None
[DEBUG]2018-11-03 15:13:52,365: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,366: None
[DEBUG]2018-11-03 15:13:52,367: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:52,367: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:52,367: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:52,367: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:52,367: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:52,367: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:52,367: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:52,367: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:52,367: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:52,367: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:52,367: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:52,367: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:52,367: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:52,367: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:52,367: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:13:52,368: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:52,368: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:52,368: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:52,368: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:52,368: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:52,368: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:52,368: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:52,368: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:52,368: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:52,368: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:52,368: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:52,368: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:52,368: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:52,368: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:52,368: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:13:52,368: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:52,368: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:52,368: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:52,368: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:52,368: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:52,368: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:52,368: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:52,368: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:52,368: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:52,368: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:52,368: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:52,368: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:52,368: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:52,368: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:13:52,368: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:14:12,575: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 15:14:12,575: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 15:14:12,576: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 15:14:12,579: None
[DEBUG]2018-11-03 15:14:12,579: None
[DEBUG]2018-11-03 15:14:12,579: None
[DEBUG]2018-11-03 15:14:12,579: None
[DEBUG]2018-11-03 15:14:12,579: None
[DEBUG]2018-11-03 15:14:12,580: None
[DEBUG]2018-11-03 15:14:12,580: None
[DEBUG]2018-11-03 15:14:12,580: None
[DEBUG]2018-11-03 15:14:12,580: None
[DEBUG]2018-11-03 15:14:12,580: None
[DEBUG]2018-11-03 15:14:12,580: None
[DEBUG]2018-11-03 15:14:12,580: None
[DEBUG]2018-11-03 15:14:12,580: None
[DEBUG]2018-11-03 15:14:12,580: None
[DEBUG]2018-11-03 15:14:12,581: None
[DEBUG]2018-11-03 15:14:12,581: None
[DEBUG]2018-11-03 15:14:12,581: None
[DEBUG]2018-11-03 15:14:12,581: None
[DEBUG]2018-11-03 15:14:12,581: None
[DEBUG]2018-11-03 15:14:12,581: None
[DEBUG]2018-11-03 15:14:12,582: None
[DEBUG]2018-11-03 15:14:12,582: None
[DEBUG]2018-11-03 15:14:12,582: None
[DEBUG]2018-11-03 15:14:12,582: None
[DEBUG]2018-11-03 15:14:12,582: None
[DEBUG]2018-11-03 15:14:12,582: None
[DEBUG]2018-11-03 15:14:12,582: None
[DEBUG]2018-11-03 15:14:12,582: None
[DEBUG]2018-11-03 15:14:12,582: None
[DEBUG]2018-11-03 15:14:12,582: None
[DEBUG]2018-11-03 15:14:12,582: None
[DEBUG]2018-11-03 15:14:12,582: None
[DEBUG]2018-11-03 15:14:12,582: None
[DEBUG]2018-11-03 15:14:12,582: None
[DEBUG]2018-11-03 15:14:12,582: None
[DEBUG]2018-11-03 15:14:12,583: None
[DEBUG]2018-11-03 15:14:12,583: None
[DEBUG]2018-11-03 15:14:12,583: None
[DEBUG]2018-11-03 15:14:12,583: None
[DEBUG]2018-11-03 15:14:12,583: None
[DEBUG]2018-11-03 15:14:12,583: None
[DEBUG]2018-11-03 15:14:12,583: None
[DEBUG]2018-11-03 15:14:12,583: None
[DEBUG]2018-11-03 15:14:12,583: None
[DEBUG]2018-11-03 15:14:12,584: None
[DEBUG]2018-11-03 15:14:12,584: None
[DEBUG]2018-11-03 15:14:12,584: None
[DEBUG]2018-11-03 15:14:12,584: None
[DEBUG]2018-11-03 15:14:12,584: None
[DEBUG]2018-11-03 15:14:12,584: None
[DEBUG]2018-11-03 15:14:12,584: None
[DEBUG]2018-11-03 15:14:12,584: None
[DEBUG]2018-11-03 15:14:12,584: None
[DEBUG]2018-11-03 15:14:12,584: None
[DEBUG]2018-11-03 15:14:12,584: None
[DEBUG]2018-11-03 15:14:12,584: None
[DEBUG]2018-11-03 15:14:12,584: None
[DEBUG]2018-11-03 15:14:12,584: None
[DEBUG]2018-11-03 15:14:12,584: None
[DEBUG]2018-11-03 15:14:12,584: None
[DEBUG]2018-11-03 15:14:12,584: None
[DEBUG]2018-11-03 15:14:12,584: None
[DEBUG]2018-11-03 15:14:12,584: None
[DEBUG]2018-11-03 15:14:12,584: None
[DEBUG]2018-11-03 15:14:12,584: None
[DEBUG]2018-11-03 15:14:12,585: None
[DEBUG]2018-11-03 15:14:12,585: None
[DEBUG]2018-11-03 15:14:12,585: None
[DEBUG]2018-11-03 15:14:12,585: None
[DEBUG]2018-11-03 15:14:12,585: None
[DEBUG]2018-11-03 15:14:12,585: None
[DEBUG]2018-11-03 15:14:12,585: None
[DEBUG]2018-11-03 15:14:12,585: None
[DEBUG]2018-11-03 15:14:12,585: None
[DEBUG]2018-11-03 15:14:12,585: None
[DEBUG]2018-11-03 15:14:12,585: None
[DEBUG]2018-11-03 15:14:12,585: None
[DEBUG]2018-11-03 15:14:12,586: None
[DEBUG]2018-11-03 15:14:12,586: None
[DEBUG]2018-11-03 15:14:12,586: None
[DEBUG]2018-11-03 15:14:12,586: None
[DEBUG]2018-11-03 15:14:12,586: None
[DEBUG]2018-11-03 15:14:12,586: None
[DEBUG]2018-11-03 15:14:12,586: None
[DEBUG]2018-11-03 15:14:12,586: None
[DEBUG]2018-11-03 15:14:12,586: None
[DEBUG]2018-11-03 15:14:12,586: None
[DEBUG]2018-11-03 15:14:12,586: None
[DEBUG]2018-11-03 15:14:12,586: None
[DEBUG]2018-11-03 15:14:12,586: None
[DEBUG]2018-11-03 15:14:12,587: None
[DEBUG]2018-11-03 15:14:12,587: None
[DEBUG]2018-11-03 15:14:12,587: None
[DEBUG]2018-11-03 15:14:12,587: None
[DEBUG]2018-11-03 15:14:12,587: None
[DEBUG]2018-11-03 15:14:12,587: None
[DEBUG]2018-11-03 15:14:12,587: None
[DEBUG]2018-11-03 15:14:12,587: None
[DEBUG]2018-11-03 15:14:12,587: None
[DEBUG]2018-11-03 15:14:12,587: None
[DEBUG]2018-11-03 15:14:12,587: None
[DEBUG]2018-11-03 15:14:12,587: None
[DEBUG]2018-11-03 15:14:12,587: None
[DEBUG]2018-11-03 15:14:12,587: None
[DEBUG]2018-11-03 15:14:12,588: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:14:12,588: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:14:12,588: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:14:12,588: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:14:12,588: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:14:12,588: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:14:12,588: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:14:12,588: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:14:12,588: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:14:12,588: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:14:12,588: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:14:12,588: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:14:12,588: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:14:12,588: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:14:12,588: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:14:12,588: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:14:12,588: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:14:12,588: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:14:12,588: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:14:12,588: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:14:12,588: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:14:12,588: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:14:12,588: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:14:12,588: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:14:12,588: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:14:12,588: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:14:12,588: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:14:12,588: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:14:12,588: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:14:12,588: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:14:12,589: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:14:12,589: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:14:12,589: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:14:12,589: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:14:12,589: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:14:12,589: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:14:12,589: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:14:12,589: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:14:12,589: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:14:12,589: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:14:12,589: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:14:12,589: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:14:12,589: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:14:12,589: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:14:12,589: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:39,666: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 15:15:39,666: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 15:15:39,666: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 15:15:39,669: None
[DEBUG]2018-11-03 15:15:39,669: None
[DEBUG]2018-11-03 15:15:39,669: None
[DEBUG]2018-11-03 15:15:39,669: None
[DEBUG]2018-11-03 15:15:39,669: None
[DEBUG]2018-11-03 15:15:39,670: None
[DEBUG]2018-11-03 15:15:39,670: None
[DEBUG]2018-11-03 15:15:39,670: None
[DEBUG]2018-11-03 15:15:39,670: None
[DEBUG]2018-11-03 15:15:39,671: None
[DEBUG]2018-11-03 15:15:39,671: None
[DEBUG]2018-11-03 15:15:39,671: None
[DEBUG]2018-11-03 15:15:39,671: None
[DEBUG]2018-11-03 15:15:39,671: None
[DEBUG]2018-11-03 15:15:39,671: None
[DEBUG]2018-11-03 15:15:39,671: None
[DEBUG]2018-11-03 15:15:39,671: None
[DEBUG]2018-11-03 15:15:39,671: None
[DEBUG]2018-11-03 15:15:39,671: None
[DEBUG]2018-11-03 15:15:39,671: None
[DEBUG]2018-11-03 15:15:39,672: None
[DEBUG]2018-11-03 15:15:39,672: None
[DEBUG]2018-11-03 15:15:39,672: None
[DEBUG]2018-11-03 15:15:39,672: None
[DEBUG]2018-11-03 15:15:39,672: None
[DEBUG]2018-11-03 15:15:39,672: None
[DEBUG]2018-11-03 15:15:39,672: None
[DEBUG]2018-11-03 15:15:39,673: None
[DEBUG]2018-11-03 15:15:39,673: None
[DEBUG]2018-11-03 15:15:39,673: None
[DEBUG]2018-11-03 15:15:39,673: None
[DEBUG]2018-11-03 15:15:39,673: None
[DEBUG]2018-11-03 15:15:39,673: None
[DEBUG]2018-11-03 15:15:39,673: None
[DEBUG]2018-11-03 15:15:39,673: None
[DEBUG]2018-11-03 15:15:39,673: None
[DEBUG]2018-11-03 15:15:39,673: None
[DEBUG]2018-11-03 15:15:39,673: None
[DEBUG]2018-11-03 15:15:39,673: None
[DEBUG]2018-11-03 15:15:39,673: None
[DEBUG]2018-11-03 15:15:39,673: None
[DEBUG]2018-11-03 15:15:39,673: None
[DEBUG]2018-11-03 15:15:39,673: None
[DEBUG]2018-11-03 15:15:39,673: None
[DEBUG]2018-11-03 15:15:39,674: None
[DEBUG]2018-11-03 15:15:39,674: None
[DEBUG]2018-11-03 15:15:39,674: None
[DEBUG]2018-11-03 15:15:39,674: None
[DEBUG]2018-11-03 15:15:39,674: None
[DEBUG]2018-11-03 15:15:39,674: None
[DEBUG]2018-11-03 15:15:39,674: None
[DEBUG]2018-11-03 15:15:39,674: None
[DEBUG]2018-11-03 15:15:39,674: None
[DEBUG]2018-11-03 15:15:39,674: None
[DEBUG]2018-11-03 15:15:39,675: None
[DEBUG]2018-11-03 15:15:39,675: None
[DEBUG]2018-11-03 15:15:39,675: None
[DEBUG]2018-11-03 15:15:39,675: None
[DEBUG]2018-11-03 15:15:39,675: None
[DEBUG]2018-11-03 15:15:39,675: None
[DEBUG]2018-11-03 15:15:39,675: None
[DEBUG]2018-11-03 15:15:39,675: None
[DEBUG]2018-11-03 15:15:39,675: None
[DEBUG]2018-11-03 15:15:39,675: None
[DEBUG]2018-11-03 15:15:39,675: None
[DEBUG]2018-11-03 15:15:39,676: None
[DEBUG]2018-11-03 15:15:39,676: None
[DEBUG]2018-11-03 15:15:39,676: None
[DEBUG]2018-11-03 15:15:39,676: None
[DEBUG]2018-11-03 15:15:39,676: None
[DEBUG]2018-11-03 15:15:39,676: None
[DEBUG]2018-11-03 15:15:39,676: None
[DEBUG]2018-11-03 15:15:39,676: None
[DEBUG]2018-11-03 15:15:39,676: None
[DEBUG]2018-11-03 15:15:39,676: None
[DEBUG]2018-11-03 15:15:39,676: None
[DEBUG]2018-11-03 15:15:39,676: None
[DEBUG]2018-11-03 15:15:39,676: None
[DEBUG]2018-11-03 15:15:39,676: None
[DEBUG]2018-11-03 15:15:39,676: None
[DEBUG]2018-11-03 15:15:39,676: None
[DEBUG]2018-11-03 15:15:39,676: None
[DEBUG]2018-11-03 15:15:39,676: None
[DEBUG]2018-11-03 15:15:39,676: None
[DEBUG]2018-11-03 15:15:39,676: None
[DEBUG]2018-11-03 15:15:39,676: None
[DEBUG]2018-11-03 15:15:39,676: None
[DEBUG]2018-11-03 15:15:39,676: None
[DEBUG]2018-11-03 15:15:39,676: None
[DEBUG]2018-11-03 15:15:39,676: None
[DEBUG]2018-11-03 15:15:39,677: None
[DEBUG]2018-11-03 15:15:39,677: None
[DEBUG]2018-11-03 15:15:39,677: None
[DEBUG]2018-11-03 15:15:39,677: None
[DEBUG]2018-11-03 15:15:39,677: None
[DEBUG]2018-11-03 15:15:39,677: None
[DEBUG]2018-11-03 15:15:39,677: None
[DEBUG]2018-11-03 15:15:39,677: None
[DEBUG]2018-11-03 15:15:39,677: None
[DEBUG]2018-11-03 15:15:39,677: None
[DEBUG]2018-11-03 15:15:39,677: None
[DEBUG]2018-11-03 15:15:39,677: None
[DEBUG]2018-11-03 15:15:39,677: None
[DEBUG]2018-11-03 15:15:39,677: None
[DEBUG]2018-11-03 15:15:39,678: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:39,678: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:39,678: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:39,678: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:39,678: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:39,678: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:39,678: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:39,678: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:39,678: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:39,678: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:39,678: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:39,678: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:39,678: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:39,678: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:39,678: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:39,679: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:39,679: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:39,679: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:39,679: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:39,679: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:39,679: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:39,679: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:39,679: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:39,679: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:39,679: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:39,679: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:39,679: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:39,679: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:39,679: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:39,679: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:39,679: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:39,679: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:39,679: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:39,679: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:39,679: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:39,679: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:39,679: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:39,679: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:39,679: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:39,679: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:39,679: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:39,679: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:39,679: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:39,679: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:39,679: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:41,536: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 15:15:41,536: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 15:15:41,536: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 15:15:41,540: None
[DEBUG]2018-11-03 15:15:41,540: None
[DEBUG]2018-11-03 15:15:41,540: None
[DEBUG]2018-11-03 15:15:41,540: None
[DEBUG]2018-11-03 15:15:41,540: None
[DEBUG]2018-11-03 15:15:41,541: None
[DEBUG]2018-11-03 15:15:41,541: None
[DEBUG]2018-11-03 15:15:41,541: None
[DEBUG]2018-11-03 15:15:41,541: None
[DEBUG]2018-11-03 15:15:41,542: None
[DEBUG]2018-11-03 15:15:41,542: None
[DEBUG]2018-11-03 15:15:41,542: None
[DEBUG]2018-11-03 15:15:41,542: None
[DEBUG]2018-11-03 15:15:41,542: None
[DEBUG]2018-11-03 15:15:41,542: None
[DEBUG]2018-11-03 15:15:41,542: None
[DEBUG]2018-11-03 15:15:41,542: None
[DEBUG]2018-11-03 15:15:41,542: None
[DEBUG]2018-11-03 15:15:41,542: None
[DEBUG]2018-11-03 15:15:41,542: None
[DEBUG]2018-11-03 15:15:41,543: None
[DEBUG]2018-11-03 15:15:41,543: None
[DEBUG]2018-11-03 15:15:41,543: None
[DEBUG]2018-11-03 15:15:41,543: None
[DEBUG]2018-11-03 15:15:41,543: None
[DEBUG]2018-11-03 15:15:41,543: None
[DEBUG]2018-11-03 15:15:41,543: None
[DEBUG]2018-11-03 15:15:41,543: None
[DEBUG]2018-11-03 15:15:41,543: None
[DEBUG]2018-11-03 15:15:41,543: None
[DEBUG]2018-11-03 15:15:41,543: None
[DEBUG]2018-11-03 15:15:41,543: None
[DEBUG]2018-11-03 15:15:41,543: None
[DEBUG]2018-11-03 15:15:41,543: None
[DEBUG]2018-11-03 15:15:41,543: None
[DEBUG]2018-11-03 15:15:41,544: None
[DEBUG]2018-11-03 15:15:41,544: None
[DEBUG]2018-11-03 15:15:41,544: None
[DEBUG]2018-11-03 15:15:41,544: None
[DEBUG]2018-11-03 15:15:41,544: None
[DEBUG]2018-11-03 15:15:41,544: None
[DEBUG]2018-11-03 15:15:41,544: None
[DEBUG]2018-11-03 15:15:41,544: None
[DEBUG]2018-11-03 15:15:41,544: None
[DEBUG]2018-11-03 15:15:41,545: None
[DEBUG]2018-11-03 15:15:41,545: None
[DEBUG]2018-11-03 15:15:41,545: None
[DEBUG]2018-11-03 15:15:41,545: None
[DEBUG]2018-11-03 15:15:41,545: None
[DEBUG]2018-11-03 15:15:41,545: None
[DEBUG]2018-11-03 15:15:41,545: None
[DEBUG]2018-11-03 15:15:41,545: None
[DEBUG]2018-11-03 15:15:41,545: None
[DEBUG]2018-11-03 15:15:41,545: None
[DEBUG]2018-11-03 15:15:41,546: None
[DEBUG]2018-11-03 15:15:41,546: None
[DEBUG]2018-11-03 15:15:41,546: None
[DEBUG]2018-11-03 15:15:41,546: None
[DEBUG]2018-11-03 15:15:41,546: None
[DEBUG]2018-11-03 15:15:41,546: None
[DEBUG]2018-11-03 15:15:41,546: None
[DEBUG]2018-11-03 15:15:41,546: None
[DEBUG]2018-11-03 15:15:41,546: None
[DEBUG]2018-11-03 15:15:41,546: None
[DEBUG]2018-11-03 15:15:41,546: None
[DEBUG]2018-11-03 15:15:41,547: None
[DEBUG]2018-11-03 15:15:41,547: None
[DEBUG]2018-11-03 15:15:41,547: None
[DEBUG]2018-11-03 15:15:41,547: None
[DEBUG]2018-11-03 15:15:41,547: None
[DEBUG]2018-11-03 15:15:41,547: None
[DEBUG]2018-11-03 15:15:41,547: None
[DEBUG]2018-11-03 15:15:41,547: None
[DEBUG]2018-11-03 15:15:41,547: None
[DEBUG]2018-11-03 15:15:41,547: None
[DEBUG]2018-11-03 15:15:41,547: None
[DEBUG]2018-11-03 15:15:41,547: None
[DEBUG]2018-11-03 15:15:41,548: None
[DEBUG]2018-11-03 15:15:41,548: None
[DEBUG]2018-11-03 15:15:41,548: None
[DEBUG]2018-11-03 15:15:41,548: None
[DEBUG]2018-11-03 15:15:41,548: None
[DEBUG]2018-11-03 15:15:41,548: None
[DEBUG]2018-11-03 15:15:41,548: None
[DEBUG]2018-11-03 15:15:41,548: None
[DEBUG]2018-11-03 15:15:41,548: None
[DEBUG]2018-11-03 15:15:41,548: None
[DEBUG]2018-11-03 15:15:41,548: None
[DEBUG]2018-11-03 15:15:41,548: None
[DEBUG]2018-11-03 15:15:41,548: None
[DEBUG]2018-11-03 15:15:41,549: None
[DEBUG]2018-11-03 15:15:41,549: None
[DEBUG]2018-11-03 15:15:41,549: None
[DEBUG]2018-11-03 15:15:41,549: None
[DEBUG]2018-11-03 15:15:41,549: None
[DEBUG]2018-11-03 15:15:41,549: None
[DEBUG]2018-11-03 15:15:41,549: None
[DEBUG]2018-11-03 15:15:41,549: None
[DEBUG]2018-11-03 15:15:41,549: None
[DEBUG]2018-11-03 15:15:41,549: None
[DEBUG]2018-11-03 15:15:41,549: None
[DEBUG]2018-11-03 15:15:41,549: None
[DEBUG]2018-11-03 15:15:41,549: None
[DEBUG]2018-11-03 15:15:41,549: None
[DEBUG]2018-11-03 15:15:41,549: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:41,549: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:41,549: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:41,549: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:41,549: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:41,549: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:41,549: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:41,549: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:41,549: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:41,549: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:41,549: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:41,549: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:41,549: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:41,549: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:41,549: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:41,550: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:41,550: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:41,550: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:41,550: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:41,550: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:41,550: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:41,550: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:41,550: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:41,550: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:41,550: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:41,550: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:41,550: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:41,550: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:41,550: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:41,550: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:41,550: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:41,550: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:41,550: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:41,550: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:41,550: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:41,550: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:41,550: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:41,550: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:41,550: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:41,550: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:41,550: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:41,550: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:41,550: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:41,550: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:41,550: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:58,793: <_sre.SRE_Match object; span=(1126, 1861), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2018-11-03 15:15:58,793: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS', 'DISTANCE_REQUEST', 'DISTANCE_EVENT']
[DEBUG]2018-11-03 15:15:58,793: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
	"DISTANCE_REQUEST",
	"DISTANCE_EVENT",
};


[DEBUG]2018-11-03 15:15:58,796: None
[DEBUG]2018-11-03 15:15:58,796: None
[DEBUG]2018-11-03 15:15:58,797: None
[DEBUG]2018-11-03 15:15:58,797: None
[DEBUG]2018-11-03 15:15:58,797: None
[DEBUG]2018-11-03 15:15:58,797: None
[DEBUG]2018-11-03 15:15:58,797: None
[DEBUG]2018-11-03 15:15:58,797: None
[DEBUG]2018-11-03 15:15:58,797: None
[DEBUG]2018-11-03 15:15:58,798: None
[DEBUG]2018-11-03 15:15:58,798: None
[DEBUG]2018-11-03 15:15:58,798: None
[DEBUG]2018-11-03 15:15:58,798: None
[DEBUG]2018-11-03 15:15:58,798: None
[DEBUG]2018-11-03 15:15:58,799: None
[DEBUG]2018-11-03 15:15:58,799: None
[DEBUG]2018-11-03 15:15:58,799: None
[DEBUG]2018-11-03 15:15:58,799: None
[DEBUG]2018-11-03 15:15:58,799: None
[DEBUG]2018-11-03 15:15:58,799: None
[DEBUG]2018-11-03 15:15:58,799: None
[DEBUG]2018-11-03 15:15:58,799: None
[DEBUG]2018-11-03 15:15:58,799: None
[DEBUG]2018-11-03 15:15:58,799: None
[DEBUG]2018-11-03 15:15:58,799: None
[DEBUG]2018-11-03 15:15:58,799: None
[DEBUG]2018-11-03 15:15:58,799: None
[DEBUG]2018-11-03 15:15:58,800: None
[DEBUG]2018-11-03 15:15:58,800: None
[DEBUG]2018-11-03 15:15:58,800: None
[DEBUG]2018-11-03 15:15:58,800: None
[DEBUG]2018-11-03 15:15:58,800: None
[DEBUG]2018-11-03 15:15:58,800: None
[DEBUG]2018-11-03 15:15:58,800: None
[DEBUG]2018-11-03 15:15:58,800: None
[DEBUG]2018-11-03 15:15:58,801: None
[DEBUG]2018-11-03 15:15:58,801: None
[DEBUG]2018-11-03 15:15:58,801: None
[DEBUG]2018-11-03 15:15:58,801: None
[DEBUG]2018-11-03 15:15:58,801: None
[DEBUG]2018-11-03 15:15:58,801: None
[DEBUG]2018-11-03 15:15:58,801: None
[DEBUG]2018-11-03 15:15:58,801: None
[DEBUG]2018-11-03 15:15:58,801: None
[DEBUG]2018-11-03 15:15:58,802: None
[DEBUG]2018-11-03 15:15:58,802: None
[DEBUG]2018-11-03 15:15:58,802: None
[DEBUG]2018-11-03 15:15:58,802: None
[DEBUG]2018-11-03 15:15:58,802: None
[DEBUG]2018-11-03 15:15:58,802: None
[DEBUG]2018-11-03 15:15:58,802: None
[DEBUG]2018-11-03 15:15:58,802: None
[DEBUG]2018-11-03 15:15:58,802: None
[DEBUG]2018-11-03 15:15:58,802: None
[DEBUG]2018-11-03 15:15:58,802: None
[DEBUG]2018-11-03 15:15:58,802: None
[DEBUG]2018-11-03 15:15:58,802: None
[DEBUG]2018-11-03 15:15:58,802: None
[DEBUG]2018-11-03 15:15:58,802: None
[DEBUG]2018-11-03 15:15:58,802: None
[DEBUG]2018-11-03 15:15:58,802: None
[DEBUG]2018-11-03 15:15:58,802: None
[DEBUG]2018-11-03 15:15:58,802: None
[DEBUG]2018-11-03 15:15:58,802: None
[DEBUG]2018-11-03 15:15:58,802: None
[DEBUG]2018-11-03 15:15:58,803: None
[DEBUG]2018-11-03 15:15:58,803: None
[DEBUG]2018-11-03 15:15:58,803: None
[DEBUG]2018-11-03 15:15:58,803: None
[DEBUG]2018-11-03 15:15:58,803: None
[DEBUG]2018-11-03 15:15:58,803: None
[DEBUG]2018-11-03 15:15:58,803: None
[DEBUG]2018-11-03 15:15:58,803: None
[DEBUG]2018-11-03 15:15:58,803: None
[DEBUG]2018-11-03 15:15:58,803: None
[DEBUG]2018-11-03 15:15:58,803: None
[DEBUG]2018-11-03 15:15:58,803: None
[DEBUG]2018-11-03 15:15:58,804: None
[DEBUG]2018-11-03 15:15:58,804: None
[DEBUG]2018-11-03 15:15:58,804: None
[DEBUG]2018-11-03 15:15:58,804: None
[DEBUG]2018-11-03 15:15:58,804: None
[DEBUG]2018-11-03 15:15:58,804: None
[DEBUG]2018-11-03 15:15:58,804: None
[DEBUG]2018-11-03 15:15:58,804: None
[DEBUG]2018-11-03 15:15:58,804: None
[DEBUG]2018-11-03 15:15:58,804: None
[DEBUG]2018-11-03 15:15:58,804: None
[DEBUG]2018-11-03 15:15:58,804: None
[DEBUG]2018-11-03 15:15:58,804: None
[DEBUG]2018-11-03 15:15:58,805: None
[DEBUG]2018-11-03 15:15:58,805: None
[DEBUG]2018-11-03 15:15:58,805: None
[DEBUG]2018-11-03 15:15:58,805: None
[DEBUG]2018-11-03 15:15:58,805: None
[DEBUG]2018-11-03 15:15:58,805: None
[DEBUG]2018-11-03 15:15:58,805: None
[DEBUG]2018-11-03 15:15:58,805: None
[DEBUG]2018-11-03 15:15:58,805: None
[DEBUG]2018-11-03 15:15:58,805: None
[DEBUG]2018-11-03 15:15:58,805: None
[DEBUG]2018-11-03 15:15:58,805: None
[DEBUG]2018-11-03 15:15:58,805: None
[DEBUG]2018-11-03 15:15:58,805: None
[DEBUG]2018-11-03 15:15:58,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:58,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:58,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:58,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:58,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:58,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:58,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:58,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:58,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:58,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:58,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:58,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:58,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:58,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:58,806: <_sre.SRE_Match object; span=(2911, 3036), match='typedef enum {\n    InitPState,\n    AwaitingComm>
[DEBUG]2018-11-03 15:15:58,806: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:58,806: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:58,806: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:58,806: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:58,806: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:58,806: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:58,806: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:58,806: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:58,806: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:58,806: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:58,806: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:58,806: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:58,806: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:58,806: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:58,806: ['InitPState', 'AwaitingCommand', 'SendPulse', 'DetectEcho', 'ProcessDistance']
[DEBUG]2018-11-03 15:15:58,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:58,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:58,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:58,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:58,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:58,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:58,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:58,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:58,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:58,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:58,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:58,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:58,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:58,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:15:58,807: 
static const char *StateNames[] = {
	"InitPState",
	"AwaitingCommand",
	"SendPulse",
	"DetectEcho",
	"ProcessDistance",
};


[DEBUG]2018-11-03 15:22:46,453: None
[DEBUG]2018-11-03 15:22:46,456: None
[DEBUG]2018-11-03 15:22:46,456: None
[DEBUG]2018-11-03 15:22:46,456: None
[DEBUG]2018-11-03 15:22:46,456: None
[DEBUG]2018-11-03 15:22:46,456: None
[DEBUG]2018-11-03 15:22:46,457: None
[DEBUG]2018-11-03 15:22:46,457: None
[DEBUG]2018-11-03 15:22:46,457: None
[DEBUG]2018-11-03 15:22:46,457: None
[DEBUG]2018-11-03 15:22:46,458: None
[DEBUG]2018-11-03 15:22:46,458: None
[DEBUG]2018-11-03 15:22:46,458: None
[DEBUG]2018-11-03 15:22:46,458: None
[DEBUG]2018-11-03 15:22:46,458: None
[DEBUG]2018-11-03 15:22:46,458: None
[DEBUG]2018-11-03 15:22:46,458: None
[DEBUG]2018-11-03 15:22:46,458: None
[DEBUG]2018-11-03 15:22:46,458: None
[DEBUG]2018-11-03 15:22:46,458: None
[DEBUG]2018-11-03 15:22:46,458: None
[DEBUG]2018-11-03 15:26:16,427: None
[DEBUG]2018-11-03 15:26:16,429: None
[DEBUG]2018-11-03 15:26:16,429: None
[DEBUG]2018-11-03 15:26:16,430: None
[DEBUG]2018-11-03 15:26:16,430: None
[DEBUG]2018-11-03 15:26:16,430: None
[DEBUG]2018-11-03 15:26:16,430: None
[DEBUG]2018-11-03 15:26:16,430: None
[DEBUG]2018-11-03 15:26:16,430: None
[DEBUG]2018-11-03 15:26:16,430: None
[DEBUG]2018-11-03 15:26:16,431: None
[DEBUG]2018-11-03 15:26:16,431: None
[DEBUG]2018-11-03 15:26:16,431: None
[DEBUG]2018-11-03 15:26:16,431: None
[DEBUG]2018-11-03 15:26:16,431: None
[DEBUG]2018-11-03 15:26:16,432: None
[DEBUG]2018-11-03 15:26:16,432: None
[DEBUG]2018-11-03 15:26:16,432: None
[DEBUG]2018-11-03 15:26:16,432: None
[DEBUG]2018-11-03 15:26:16,432: None
[DEBUG]2018-11-03 15:26:16,432: None
[DEBUG]2018-11-03 15:26:31,839: None
[DEBUG]2018-11-03 15:26:31,842: None
[DEBUG]2018-11-03 15:26:31,842: None
[DEBUG]2018-11-03 15:26:31,843: None
[DEBUG]2018-11-03 15:26:31,843: None
[DEBUG]2018-11-03 15:26:31,843: None
[DEBUG]2018-11-03 15:26:31,843: None
[DEBUG]2018-11-03 15:26:31,843: None
[DEBUG]2018-11-03 15:26:31,843: None
[DEBUG]2018-11-03 15:26:31,843: None
[DEBUG]2018-11-03 15:26:31,844: None
[DEBUG]2018-11-03 15:26:31,844: None
[DEBUG]2018-11-03 15:26:31,844: None
[DEBUG]2018-11-03 15:26:31,844: None
[DEBUG]2018-11-03 15:26:31,844: None
[DEBUG]2018-11-03 15:26:31,844: None
[DEBUG]2018-11-03 15:26:31,844: None
[DEBUG]2018-11-03 15:26:31,844: None
[DEBUG]2018-11-03 15:26:31,844: None
[DEBUG]2018-11-03 15:26:31,844: None
[DEBUG]2018-11-03 15:26:31,844: None
[DEBUG]2018-11-03 15:32:13,055: None
[DEBUG]2018-11-03 15:32:13,057: None
[DEBUG]2018-11-03 15:32:13,057: None
[DEBUG]2018-11-03 15:32:13,058: None
[DEBUG]2018-11-03 15:32:13,058: None
[DEBUG]2018-11-03 15:32:13,058: None
[DEBUG]2018-11-03 15:32:13,058: None
[DEBUG]2018-11-03 15:32:13,058: None
[DEBUG]2018-11-03 15:32:13,058: None
[DEBUG]2018-11-03 15:32:13,058: None
[DEBUG]2018-11-03 15:32:13,059: None
[DEBUG]2018-11-03 15:32:13,059: None
[DEBUG]2018-11-03 15:32:13,059: None
[DEBUG]2018-11-03 15:32:13,059: None
[DEBUG]2018-11-03 15:32:13,059: None
[DEBUG]2018-11-03 15:32:13,060: None
[DEBUG]2018-11-03 15:32:13,060: None
[DEBUG]2018-11-03 15:32:13,060: None
[DEBUG]2018-11-03 15:32:13,060: None
[DEBUG]2018-11-03 15:32:13,060: None
[DEBUG]2018-11-03 15:32:13,060: None
[DEBUG]2018-11-03 15:34:47,227: None
[DEBUG]2018-11-03 15:34:47,229: None
[DEBUG]2018-11-03 15:34:47,229: None
[DEBUG]2018-11-03 15:34:47,230: None
[DEBUG]2018-11-03 15:34:47,230: None
[DEBUG]2018-11-03 15:34:47,230: None
[DEBUG]2018-11-03 15:34:47,230: None
[DEBUG]2018-11-03 15:34:47,230: None
[DEBUG]2018-11-03 15:34:47,230: None
[DEBUG]2018-11-03 15:34:47,230: None
[DEBUG]2018-11-03 15:34:47,231: None
[DEBUG]2018-11-03 15:34:47,231: None
[DEBUG]2018-11-03 15:34:47,231: None
[DEBUG]2018-11-03 15:34:47,231: None
[DEBUG]2018-11-03 15:34:47,231: None
[DEBUG]2018-11-03 15:34:47,231: None
[DEBUG]2018-11-03 15:34:47,231: None
[DEBUG]2018-11-03 15:34:47,231: None
[DEBUG]2018-11-03 15:34:47,231: None
[DEBUG]2018-11-03 15:34:47,231: None
[DEBUG]2018-11-03 15:34:47,231: None
[DEBUG]2018-11-03 15:36:12,536: None
[DEBUG]2018-11-03 15:36:12,538: None
[DEBUG]2018-11-03 15:36:12,538: None
[DEBUG]2018-11-03 15:36:12,539: None
[DEBUG]2018-11-03 15:36:12,539: None
[DEBUG]2018-11-03 15:36:12,539: None
[DEBUG]2018-11-03 15:36:12,539: None
[DEBUG]2018-11-03 15:36:12,539: None
[DEBUG]2018-11-03 15:36:12,539: None
[DEBUG]2018-11-03 15:36:12,539: None
[DEBUG]2018-11-03 15:36:12,540: None
[DEBUG]2018-11-03 15:36:12,540: None
[DEBUG]2018-11-03 15:36:12,540: None
[DEBUG]2018-11-03 15:36:12,540: None
[DEBUG]2018-11-03 15:36:12,540: None
[DEBUG]2018-11-03 15:36:12,541: None
[DEBUG]2018-11-03 15:36:12,541: None
[DEBUG]2018-11-03 15:36:12,541: None
[DEBUG]2018-11-03 15:36:12,541: None
[DEBUG]2018-11-03 15:36:12,541: None
[DEBUG]2018-11-03 15:36:12,541: None
[DEBUG]2018-11-04 11:02:31,625: None
[DEBUG]2018-11-04 11:02:31,625: None
[DEBUG]2018-11-04 11:02:31,625: None
[DEBUG]2018-11-04 11:02:31,625: None
[DEBUG]2018-11-04 11:02:31,625: None
[DEBUG]2018-11-04 11:02:31,625: None
[DEBUG]2018-11-04 11:02:31,625: None
[DEBUG]2018-11-04 11:02:31,625: None
[DEBUG]2018-11-04 11:02:31,625: None
[DEBUG]2018-11-04 11:02:31,625: None
[DEBUG]2018-11-04 11:02:31,625: None
[DEBUG]2018-11-04 11:02:31,625: None
[DEBUG]2018-11-04 11:02:31,625: None
[DEBUG]2018-11-04 11:02:31,625: None
[DEBUG]2018-11-04 11:02:31,625: None
[DEBUG]2018-11-04 11:02:31,640: None
[DEBUG]2018-11-04 11:02:31,640: None
[DEBUG]2018-11-04 11:02:31,640: None
[DEBUG]2018-11-04 11:02:31,640: None
[DEBUG]2018-11-04 11:02:31,640: None
[DEBUG]2018-11-04 11:02:31,640: None
[DEBUG]2018-11-04 11:03:25,932: None
[DEBUG]2018-11-04 11:03:25,932: None
[DEBUG]2018-11-04 11:03:25,932: None
[DEBUG]2018-11-04 11:03:25,932: None
[DEBUG]2018-11-04 11:03:25,932: None
[DEBUG]2018-11-04 11:03:25,932: None
[DEBUG]2018-11-04 11:03:25,932: None
[DEBUG]2018-11-04 11:03:25,932: None
[DEBUG]2018-11-04 11:03:25,932: None
[DEBUG]2018-11-04 11:03:25,932: None
[DEBUG]2018-11-04 11:03:25,932: None
[DEBUG]2018-11-04 11:03:25,932: None
[DEBUG]2018-11-04 11:03:25,932: None
[DEBUG]2018-11-04 11:03:25,932: None
[DEBUG]2018-11-04 11:03:25,932: None
[DEBUG]2018-11-04 11:03:25,948: None
[DEBUG]2018-11-04 11:03:25,948: None
[DEBUG]2018-11-04 11:03:25,948: None
[DEBUG]2018-11-04 11:03:25,948: None
[DEBUG]2018-11-04 11:03:25,948: None
[DEBUG]2018-11-04 11:03:25,948: None
[DEBUG]2018-12-02 00:35:18,028: None
[DEBUG]2018-12-02 00:35:18,044: None
[DEBUG]2018-12-02 00:35:18,044: None
[DEBUG]2018-12-02 00:35:18,044: None
[DEBUG]2018-12-02 00:35:18,044: None
[DEBUG]2018-12-02 00:35:18,044: None
[DEBUG]2018-12-02 00:35:18,044: None
[DEBUG]2018-12-02 00:35:18,044: None
[DEBUG]2018-12-02 00:35:18,044: None
[DEBUG]2018-12-02 00:35:18,044: None
[DEBUG]2018-12-02 00:35:18,052: None
[DEBUG]2018-12-02 00:35:18,052: None
[DEBUG]2018-12-02 00:35:18,052: None
[DEBUG]2018-12-02 00:35:18,052: None
[DEBUG]2018-12-02 00:35:18,052: None
[DEBUG]2018-12-02 00:35:18,052: None
[DEBUG]2018-12-02 00:35:18,052: None
[DEBUG]2018-12-02 00:35:18,052: None
[DEBUG]2018-12-02 00:35:18,052: None
[DEBUG]2018-12-02 00:35:18,052: None
[DEBUG]2018-12-02 00:35:18,052: None
[DEBUG]2018-12-02 00:35:18,056: None
[DEBUG]2018-12-02 00:35:18,056: None
[DEBUG]2018-12-02 00:35:18,056: None
[DEBUG]2018-12-02 00:35:18,056: None
[DEBUG]2018-12-02 00:35:18,056: None
[DEBUG]2018-12-02 00:35:18,056: None
[DEBUG]2018-12-02 00:35:18,056: None
[DEBUG]2018-12-02 00:37:23,792: None
[DEBUG]2018-12-02 00:37:23,812: None
[DEBUG]2018-12-02 00:37:23,812: None
[DEBUG]2018-12-02 00:37:23,816: None
[DEBUG]2018-12-02 00:37:23,816: None
[DEBUG]2018-12-02 00:37:23,816: None
[DEBUG]2018-12-02 00:37:23,824: None
[DEBUG]2018-12-02 00:37:23,824: None
[DEBUG]2018-12-02 00:37:23,824: None
[DEBUG]2018-12-02 00:37:23,824: None
[DEBUG]2018-12-02 00:37:23,844: None
[DEBUG]2018-12-02 00:37:23,844: None
[DEBUG]2018-12-02 00:37:23,844: None
[DEBUG]2018-12-02 00:37:23,844: None
[DEBUG]2018-12-02 00:37:23,844: None
[DEBUG]2018-12-02 00:37:23,852: None
[DEBUG]2018-12-02 00:37:23,852: None
[DEBUG]2018-12-02 00:37:23,852: None
[DEBUG]2018-12-02 00:37:23,852: None
[DEBUG]2018-12-02 00:37:23,852: None
[DEBUG]2018-12-02 00:37:23,852: None
[DEBUG]2018-12-02 00:37:23,860: None
[DEBUG]2018-12-02 00:37:23,860: None
[DEBUG]2018-12-02 00:37:23,860: None
[DEBUG]2018-12-02 00:37:23,860: None
[DEBUG]2018-12-02 00:37:23,860: None
[DEBUG]2018-12-02 00:37:23,860: None
[DEBUG]2018-12-02 00:37:23,860: None
[DEBUG]2018-12-02 00:40:43,470: None
[DEBUG]2018-12-02 00:40:43,482: None
[DEBUG]2018-12-02 00:40:43,482: None
[DEBUG]2018-12-02 00:40:43,486: None
[DEBUG]2018-12-02 00:40:43,486: None
[DEBUG]2018-12-02 00:40:43,486: None
[DEBUG]2018-12-02 00:40:43,486: None
[DEBUG]2018-12-02 00:40:43,486: None
[DEBUG]2018-12-02 00:40:43,486: None
[DEBUG]2018-12-02 00:40:43,486: None
[DEBUG]2018-12-02 00:40:43,498: None
[DEBUG]2018-12-02 00:40:43,498: None
[DEBUG]2018-12-02 00:40:43,498: None
[DEBUG]2018-12-02 00:40:43,498: None
[DEBUG]2018-12-02 00:40:43,498: None
[DEBUG]2018-12-02 00:40:43,498: None
[DEBUG]2018-12-02 00:40:43,498: None
[DEBUG]2018-12-02 00:40:43,498: None
[DEBUG]2018-12-02 00:40:43,498: None
[DEBUG]2018-12-02 00:40:43,498: None
[DEBUG]2018-12-02 00:40:43,498: None
[DEBUG]2018-12-02 00:40:43,502: None
[DEBUG]2018-12-02 00:40:43,502: None
[DEBUG]2018-12-02 00:40:43,502: None
[DEBUG]2018-12-02 00:40:43,502: None
[DEBUG]2018-12-02 00:40:43,502: None
[DEBUG]2018-12-02 00:40:43,502: None
[DEBUG]2018-12-02 00:40:43,502: None
